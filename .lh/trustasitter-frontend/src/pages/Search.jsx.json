{
    "sourceFile": "trustasitter-frontend/src/pages/Search.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 43,
            "patches": [
                {
                    "date": 1750492885976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751104413719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,31 @@\n-// Page: Search\r\n-import React from 'react';\r\n+import React from \"react\";\r\n \r\n const Search = () => {\r\n   return (\r\n-    <div>\r\n-      <h2>Search Babysitters</h2>\r\n-      <p>Use filters to find the right babysitter for your needs.</p>\r\n+    <div className=\"max-w-6xl mx-auto p-4\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Find a Babysitter</h1>\r\n+      {/* Filtros */}\r\n+      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n+        <select className=\"border p-2 rounded\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"East\">East</option>\r\n+        </select>\r\n+        <input type=\"date\" className=\"border p-2 rounded\" />\r\n+        <select className=\"border p-2 rounded\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"Morning\">Morning</option>\r\n+          <option value=\"Afternoon\">Afternoon</option>\r\n+          <option value=\"Evening\">Evening</option>\r\n+        </select>\r\n+      </div>\r\n+\r\n+      {/* Resultados */}\r\n+      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+        {/* Aqui vamos mapear babysitters mockados */}\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751104745061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,23 @@\n-import React from \"react\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import axios from \"axios\";\r\n \r\n const Search = () => {\r\n+  const [babysitters, setBabysitters] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchBabysitters = async () => {\r\n+      try {\r\n+        const res = await axios.get(\"http://localhost:5000/api/babysitters\");\r\n+        setBabysitters(res.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBabysitters();\r\n+  }, []);\r\n+\r\n   return (\r\n     <div className=\"max-w-6xl mx-auto p-4\">\r\n       <h1 className=\"text-2xl font-bold mb-4\">Find a Babysitter</h1>\r\n       {/* Filtros */}\r\n@@ -22,9 +38,24 @@\n       </div>\r\n \r\n       {/* Resultados */}\r\n       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-        {/* Aqui vamos mapear babysitters mockados */}\r\n+        {babysitters.map((babysitter) => (\r\n+          <div\r\n+            key={babysitter.id}\r\n+            className=\"border rounded p-4 flex flex-col justify-between\"\r\n+          >\r\n+            <div>\r\n+              <h2 className=\"text-xl font-semibold\">{babysitter.name}</h2>\r\n+              <p className=\"text-gray-600\">Region: {babysitter.region}</p>\r\n+              <p className=\"text-gray-600\">Availability: {babysitter.availability}</p>\r\n+              <p className=\"text-gray-600\">Price: {babysitter.price}</p>\r\n+            </div>\r\n+            <button className=\"mt-4 bg-blue-500 text-white py-2 rounded hover:bg-blue-600\">\r\n+              Book Now\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1751104784689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           <option value=\"Evening\">Evening</option>\r\n         </select>\r\n       </div>\r\n \r\n-      {/* Resultados */}\r\n+      {/* Results */}\r\n       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n         {babysitters.map((babysitter) => (\r\n           <div\r\n             key={babysitter.id}\r\n"
                },
                {
                    "date": 1751104965867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n-        const res = await axios.get(\"http://localhost:5000/api/babysitters\");\r\n+        const res = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n         setBabysitters(res.data);\r\n       } catch (err) {\r\n         console.error(\"Error fetching babysitters:\", err);\r\n       }\r\n"
                },
                {
                    "date": 1751106185154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     fetchBabysitters();\r\n   }, []);\r\n \r\n   return (\r\n-    <div className=\"max-w-6xl mx-auto p-4\">\r\n+    <div className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6 max-w-6xl mx-auto\">\r\n       <h1 className=\"text-2xl font-bold mb-4\">Find a Babysitter</h1>\r\n       {/* Filtros */}\r\n       <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n         <select className=\"border p-2 rounded\">\r\n"
                },
                {
                    "date": 1751106364355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,60 +4,62 @@\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n \r\n   useEffect(() => {\r\n-    const fetchBabysitters = async () => {\r\n-      try {\r\n-        const res = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n-        setBabysitters(res.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBabysitters();\r\n+    // Aqui ainda vai o fetch real quando conectarmos o backend\r\n+    setBabysitters([\r\n+      {\r\n+        id: 1,\r\n+        name: \"Anna Smith\",\r\n+        region: \"Central\",\r\n+        availability: \"Morning\",\r\n+        price: \"$20/hour\",\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: \"James Brown\",\r\n+        region: \"West\",\r\n+        availability: \"Evening\",\r\n+        price: \"$18/hour\",\r\n+      },\r\n+      {\r\n+        id: 3,\r\n+        name: \"Lisa Johnson\",\r\n+        region: \"East\",\r\n+        availability: \"Afternoon\",\r\n+        price: \"$22/hour\",\r\n+      },\r\n+    ]);\r\n   }, []);\r\n \r\n   return (\r\n-    <div className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6 max-w-6xl mx-auto\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Find a Babysitter</h1>\r\n+    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* TÃ­tulo */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      </h1>\r\n+\r\n       {/* Filtros */}\r\n-      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n-        <select className=\"border p-2 rounded\">\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n           <option value=\"West\">West</option>\r\n           <option value=\"East\">East</option>\r\n         </select>\r\n-        <input type=\"date\" className=\"border p-2 rounded\" />\r\n-        <select className=\"border p-2 rounded\">\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"border border-gray-300 p-3 rounded w-full\"\r\n+        />\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Availability</option>\r\n           <option value=\"Morning\">Morning</option>\r\n           <option value=\"Afternoon\">Afternoon</option>\r\n           <option value=\"Evening\">Evening</option>\r\n         </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n+          Search\r\n+        </button>\r\n       </div>\r\n \r\n-      {/* Results */}\r\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-        {babysitters.map((babysitter) => (\r\n-          <div\r\n-            key={babysitter.id}\r\n-            className=\"border rounded p-4 flex flex-col justify-between\"\r\n-          >\r\n-            <div>\r\n-              <h2 className=\"text-xl font-semibold\">{babysitter.name}</h2>\r\n-              <p className=\"text-gray-600\">Region: {babysitter.region}</p>\r\n-              <p className=\"text-gray-600\">Availability: {babysitter.availability}</p>\r\n-              <p className=\"text-gray-600\">Price: {babysitter.price}</p>\r\n-            </div>\r\n-            <button className=\"mt-4 bg-blue-500 text-white py-2 rounded hover:bg-blue-600\">\r\n-              Book Now\r\n-            </button>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Search;\r\n+      {/* Resultados */}\r\n"
                },
                {
                    "date": 1751106378549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,4 +62,35 @@\n         </button>\r\n       </div>\r\n \r\n       {/* Resultados */}\r\n+      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+        {babysitters.map((babysitter) => (\r\n+          <div\r\n+            key={babysitter.id}\r\n+            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+          >\r\n+            <div>\r\n+              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                {babysitter.name}\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Region:</strong> {babysitter.region}\r\n+              </p>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Availability:</strong> {babysitter.availability}\r\n+              </p>\r\n+              <p className=\"text-gray-600\">\r\n+                <strong>Price:</strong> {babysitter.price}\r\n+              </p>\r\n+            </div>\r\n+            <button className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+              Book Now\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n+\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751106686800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,12 @@\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n         <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n+          <option value=\"East\">Central</option>\r\n           <option value=\"West\">West</option>\r\n-          <option value=\"East\">East</option>\r\n+          <option value=\"North\">Central</option>\r\n+          <option value=\"South\">East</option>\r\n         </select>\r\n         <input\r\n           type=\"date\"\r\n           className=\"border border-gray-300 p-3 rounded w-full\"\r\n"
                },
                {
                    "date": 1751106812111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n           <option value=\"East\">Central</option>\r\n           <option value=\"West\">West</option>\r\n           <option value=\"North\">Central</option>\r\n           <option value=\"South\">East</option>\r\n+          <option value=\"MInha rola\">East</option>\r\n         </select>\r\n         <input\r\n           type=\"date\"\r\n           className=\"border border-gray-300 p-3 rounded w-full\"\r\n"
                },
                {
                    "date": 1751106857910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,9 @@\n           <option value=\"Central\">Central</option>\r\n           <option value=\"East\">Central</option>\r\n           <option value=\"West\">West</option>\r\n           <option value=\"North\">Central</option>\r\n-          <option value=\"South\">East</option>\r\n-          <option value=\"MInha rola\">East</option>\r\n+          <option value=\"South\">East</option>          \r\n         </select>\r\n         <input\r\n           type=\"date\"\r\n           className=\"border border-gray-300 p-3 rounded w-full\"\r\n"
                },
                {
                    "date": 1751106973377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,12 @@\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n         <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n-          <option value=\"East\">Central</option>\r\n+          <option value=\"East\">East</option>\r\n           <option value=\"West\">West</option>\r\n-          <option value=\"North\">Central</option>\r\n-          <option value=\"South\">East</option>          \r\n+          <option value=\"North\">North</option>\r\n+          <option value=\"South\">South</option>          \r\n         </select>\r\n         <input\r\n           type=\"date\"\r\n           className=\"border border-gray-300 p-3 rounded w-full\"\r\n"
                },
                {
                    "date": 1751112532665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,14 @@\n import React, { useEffect, useState } from \"react\";\r\n-import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    // Aqui ainda vai o fetch real quando conectarmos o backend\r\n+    // Mock data de exemplo\r\n     setBabysitters([\r\n       {\r\n         id: 1,\r\n         name: \"Anna Smith\",\r\n@@ -30,11 +32,21 @@\n       },\r\n     ]);\r\n   }, []);\r\n \r\n+  const handleBooking = () => {\r\n+    const token = localStorage.getItem(\"token\");\r\n+    if (token) {\r\n+      // Simula agendamento\r\n+      alert(\"Booking confirmed! ð Check your bookings in your dashboard.\");\r\n+    } else {\r\n+      // UsuÃ¡rio nÃ£o logado -> abre modal\r\n+      setShowModal(true);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* TÃ­tulo */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">Find</span>{\" \"}\r\n         <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n@@ -43,12 +55,10 @@\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n         <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n+          <option value=\"West\">West</option>\r\n           <option value=\"East\">East</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"North\">North</option>\r\n-          <option value=\"South\">South</option>          \r\n         </select>\r\n         <input\r\n           type=\"date\"\r\n           className=\"border border-gray-300 p-3 rounded w-full\"\r\n@@ -84,14 +94,51 @@\n               <p className=\"text-gray-600\">\r\n                 <strong>Price:</strong> {babysitter.price}\r\n               </p>\r\n             </div>\r\n-            <button className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+            <button\r\n+              onClick={handleBooking}\r\n+              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+            >\r\n               Book Now\r\n             </button>\r\n           </div>\r\n         ))}\r\n       </div>\r\n+\r\n+      {/* Modal */}\r\n+      {showModal && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+          <div className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\">\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              To book a babysitter,\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              please login or create an account.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n+              <button\r\n+                onClick={() => navigate(\"/login\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Login\r\n+              </button>\r\n+              <button\r\n+                onClick={() => navigate(\"/choose-role\")}\r\n+                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Register\r\n+              </button>\r\n+            </div>\r\n+            <button\r\n+              onClick={() => setShowModal(false)}\r\n+              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751112602636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const [showModal, setShowModal] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    // Mock data de exemplo\r\n+    // For now, we use mock data to display babysitters\r\n     setBabysitters([\r\n       {\r\n         id: 1,\r\n         name: \"Anna Smith\",\r\n@@ -32,27 +32,29 @@\n       },\r\n     ]);\r\n   }, []);\r\n \r\n+  // Handle booking logic\r\n   const handleBooking = () => {\r\n     const token = localStorage.getItem(\"token\");\r\n     if (token) {\r\n-      // Simula agendamento\r\n+      // User is logged in: simulate booking confirmation\r\n       alert(\"Booking confirmed! ð Check your bookings in your dashboard.\");\r\n     } else {\r\n-      // UsuÃ¡rio nÃ£o logado -> abre modal\r\n+      // User is not logged in: show the modal\r\n       setShowModal(true);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Page title */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">Find</span>{\" \"}\r\n         <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n-      {/* Filtros */}\r\n+      {/* Filters */}\r\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n         <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n@@ -73,9 +75,9 @@\n           Search\r\n         </button>\r\n       </div>\r\n \r\n-      {/* Resultados */}\r\n+      {/* Babysitters list */}\r\n       <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n         {babysitters.map((babysitter) => (\r\n           <div\r\n             key={babysitter.id}\r\n@@ -104,9 +106,9 @@\n           </div>\r\n         ))}\r\n       </div>\r\n \r\n-      {/* Modal */}\r\n+      {/* Modal when user is not logged in */}\r\n       {showModal && (\r\n         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n           <div className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\">\r\n             <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n@@ -115,21 +117,24 @@\n             <p className=\"text-gray-600 mb-6\">\r\n               please login or create an account.\r\n             </p>\r\n             <div className=\"flex justify-center gap-4\">\r\n+              {/* Button to navigate to login page */}\r\n               <button\r\n                 onClick={() => navigate(\"/login\")}\r\n                 className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n               >\r\n                 Login\r\n               </button>\r\n+              {/* Button to navigate to registration flow */}\r\n               <button\r\n                 onClick={() => navigate(\"/choose-role\")}\r\n                 className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n               >\r\n                 Register\r\n               </button>\r\n             </div>\r\n+            {/* Cancel button to close modal */}\r\n             <button\r\n               onClick={() => setShowModal(false)}\r\n               className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n             >\r\n"
                },
                {
                    "date": 1751112843211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,33 +108,36 @@\n       </div>\r\n \r\n       {/* Modal when user is not logged in */}\r\n       {showModal && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-          <div className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\">\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowModal(false)} // Close when clicking outside\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside\r\n+          >\r\n             <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n               To book a babysitter,\r\n             </h3>\r\n             <p className=\"text-gray-600 mb-6\">\r\n               please login or create an account.\r\n             </p>\r\n             <div className=\"flex justify-center gap-4\">\r\n-              {/* Button to navigate to login page */}\r\n               <button\r\n                 onClick={() => navigate(\"/login\")}\r\n                 className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n               >\r\n                 Login\r\n               </button>\r\n-              {/* Button to navigate to registration flow */}\r\n               <button\r\n                 onClick={() => navigate(\"/choose-role\")}\r\n                 className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n               >\r\n                 Register\r\n               </button>\r\n             </div>\r\n-            {/* Cancel button to close modal */}\r\n             <button\r\n               onClick={() => setShowModal(false)}\r\n               className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n             >\r\n"
                },
                {
                    "date": 1751113480517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n import { useNavigate } from \"react-router-dom\";\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [showModal, setShowModal] = useState(false);\r\n+  const [showLoginModal, setShowLoginModal] = useState(false);\r\n+  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n     // For now, we use mock data to display babysitters\r\n@@ -36,13 +37,13 @@\n   // Handle booking logic\r\n   const handleBooking = () => {\r\n     const token = localStorage.getItem(\"token\");\r\n     if (token) {\r\n-      // User is logged in: simulate booking confirmation\r\n-      alert(\"Booking confirmed! ð Check your bookings in your dashboard.\");\r\n+      // User is logged in: show success modal\r\n+      setShowSuccessModal(true);\r\n     } else {\r\n-      // User is not logged in: show the modal\r\n-      setShowModal(true);\r\n+      // User is not logged in: show login/register modal\r\n+      setShowLoginModal(true);\r\n     }\r\n   };\r\n \r\n   return (\r\n@@ -107,16 +108,16 @@\n         ))}\r\n       </div>\r\n \r\n       {/* Modal when user is not logged in */}\r\n-      {showModal && (\r\n+      {showLoginModal && (\r\n         <div\r\n           className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowModal(false)} // Close when clicking outside\r\n+          onClick={() => setShowLoginModal(false)}\r\n         >\r\n           <div\r\n             className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside\r\n+            onClick={(e) => e.stopPropagation()}\r\n           >\r\n             <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n               To book a babysitter,\r\n             </h3>\r\n@@ -137,16 +138,50 @@\n                 Register\r\n               </button>\r\n             </div>\r\n             <button\r\n-              onClick={() => setShowModal(false)}\r\n+              onClick={() => setShowLoginModal(false)}\r\n               className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n             >\r\n               Cancel\r\n             </button>\r\n           </div>\r\n         </div>\r\n       )}\r\n+\r\n+      {/* Modal when booking is successful */}\r\n+      {showSuccessModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowSuccessModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              Booking confirmed! ð\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              Check your bookings in your dashboard.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n+              <button\r\n+                onClick={() => navigate(\"/bookings\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Go to My Bookings\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowSuccessModal(false)}\r\n+                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751455148465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,188 +1,83 @@\n+// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n \r\n-const Search = () => {\r\n+const SearchBabysitters = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [showLoginModal, setShowLoginModal] = useState(false);\r\n-  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n-  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    // For now, we use mock data to display babysitters\r\n-    setBabysitters([\r\n-      {\r\n-        id: 1,\r\n-        name: \"Anna Smith\",\r\n-        region: \"Central\",\r\n-        availability: \"Morning\",\r\n-        price: \"$20/hour\",\r\n-      },\r\n-      {\r\n-        id: 2,\r\n-        name: \"James Brown\",\r\n-        region: \"West\",\r\n-        availability: \"Evening\",\r\n-        price: \"$18/hour\",\r\n-      },\r\n-      {\r\n-        id: 3,\r\n-        name: \"Lisa Johnson\",\r\n-        region: \"East\",\r\n-        availability: \"Afternoon\",\r\n-        price: \"$22/hour\",\r\n-      },\r\n-    ]);\r\n+    const fetchBabysitters = async () => {\r\n+      try {\r\n+        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n+        setBabysitters(response.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+        setError(\"Failed to load babysitters.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBabysitters();\r\n   }, []);\r\n \r\n-  // Handle booking logic\r\n-  const handleBooking = () => {\r\n-    const token = localStorage.getItem(\"token\");\r\n-    if (token) {\r\n-      // User is logged in: show success modal\r\n-      setShowSuccessModal(true);\r\n-    } else {\r\n-      // User is not logged in: show login/register modal\r\n-      setShowLoginModal(true);\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Available Babysitters\r\n       </h1>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Select Region</option>\r\n-          <option value=\"Central\">Central</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"East\">East</option>\r\n-        </select>\r\n-        <input\r\n-          type=\"date\"\r\n-          className=\"border border-gray-300 p-3 rounded w-full\"\r\n-        />\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Availability</option>\r\n-          <option value=\"Morning\">Morning</option>\r\n-          <option value=\"Afternoon\">Afternoon</option>\r\n-          <option value=\"Evening\">Evening</option>\r\n-        </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n-          Search\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Babysitters list */}\r\n-      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-        {babysitters.map((babysitter) => (\r\n-          <div\r\n-            key={babysitter.id}\r\n-            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-          >\r\n-            <div>\r\n-              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                {babysitter.name}\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Region:</strong> {babysitter.region}\r\n-              </p>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Availability:</strong> {babysitter.availability}\r\n-              </p>\r\n-              <p className=\"text-gray-600\">\r\n-                <strong>Price:</strong> {babysitter.price}\r\n-              </p>\r\n-            </div>\r\n-            <button\r\n-              onClick={handleBooking}\r\n-              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : babysitters.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters found. Check back later!\r\n+        </p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n+          {babysitters.map((b) => (\r\n+            <div\r\n+              key={b.id}\r\n+              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n             >\r\n-              Book Now\r\n-            </button>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {/* Modal when user is not logged in */}\r\n-      {showLoginModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowLoginModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              To book a babysitter,\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              please login or create an account.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hourly Rate:</strong>{\" \"}\r\n+                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Available Days:</strong>{\" \"}\r\n+                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hours:</strong>{\" \"}\r\n+                  {b.available_from && b.available_to\r\n+                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                    : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mt-2\">\r\n+                  {b.about || \"No description provided.\"}\r\n+                </p>\r\n+              </div>\r\n               <button\r\n-                onClick={() => navigate(\"/login\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n               >\r\n-                Login\r\n+                Book Now\r\n               </button>\r\n-              <button\r\n-                onClick={() => navigate(\"/choose-role\")}\r\n-                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Register\r\n-              </button>\r\n             </div>\r\n-            <button\r\n-              onClick={() => setShowLoginModal(false)}\r\n-              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n+          ))}\r\n         </div>\r\n       )}\r\n-\r\n-      {/* Modal when booking is successful */}\r\n-      {showSuccessModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowSuccessModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              Booking confirmed! ð\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              Check your bookings in your dashboard.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n-              <button\r\n-                onClick={() => navigate(\"/bookings\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Go to My Bookings\r\n-              </button>\r\n-              <button\r\n-                onClick={() => setShowSuccessModal(false)}\r\n-                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default Search;\r\n+export default SearchBabysitters;\r\n"
                },
                {
                    "date": 1751455171161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,188 @@\n-// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n-const SearchBabysitters = () => {\r\n+const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n+  const [showLoginModal, setShowLoginModal] = useState(false);\r\n+  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n+  const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    const fetchBabysitters = async () => {\r\n-      try {\r\n-        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n-        setBabysitters(response.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-        setError(\"Failed to load babysitters.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBabysitters();\r\n+    // For now, we use mock data to display babysitters\r\n+    setBabysitters([\r\n+      {\r\n+        id: 1,\r\n+        name: \"Anna Smith\",\r\n+        region: \"Central\",\r\n+        availability: \"Morning\",\r\n+        price: \"$20/hour\",\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: \"James Brown\",\r\n+        region: \"West\",\r\n+        availability: \"Evening\",\r\n+        price: \"$18/hour\",\r\n+      },\r\n+      {\r\n+        id: 3,\r\n+        name: \"Lisa Johnson\",\r\n+        region: \"East\",\r\n+        availability: \"Afternoon\",\r\n+        price: \"$22/hour\",\r\n+      },\r\n+    ]);\r\n   }, []);\r\n \r\n+  // Handle booking logic\r\n+  const handleBooking = () => {\r\n+    const token = localStorage.getItem(\"token\");\r\n+    if (token) {\r\n+      // User is logged in: show success modal\r\n+      setShowSuccessModal(true);\r\n+    } else {\r\n+      // User is not logged in: show login/register modal\r\n+      setShowLoginModal(true);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Available Babysitters\r\n+      {/* Page title */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n-      ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters found. Check back later!\r\n-        </p>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n-          {babysitters.map((b) => (\r\n-            <div\r\n-              key={b.id}\r\n-              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n+      {/* Filters */}\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"East\">East</option>\r\n+        </select>\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"border border-gray-300 p-3 rounded w-full\"\r\n+        />\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"Morning\">Morning</option>\r\n+          <option value=\"Afternoon\">Afternoon</option>\r\n+          <option value=\"Evening\">Evening</option>\r\n+        </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n+          Search\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Babysitters list */}\r\n+      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+        {babysitters.map((babysitter) => (\r\n+          <div\r\n+            key={babysitter.id}\r\n+            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+          >\r\n+            <div>\r\n+              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                {babysitter.name}\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Region:</strong> {babysitter.region}\r\n+              </p>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Availability:</strong> {babysitter.availability}\r\n+              </p>\r\n+              <p className=\"text-gray-600\">\r\n+                <strong>Price:</strong> {babysitter.price}\r\n+              </p>\r\n+            </div>\r\n+            <button\r\n+              onClick={handleBooking}\r\n+              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n             >\r\n-              <div>\r\n-                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hourly Rate:</strong>{\" \"}\r\n-                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available Days:</strong>{\" \"}\r\n-                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hours:</strong>{\" \"}\r\n-                  {b.available_from && b.available_to\r\n-                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n-                    : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mt-2\">\r\n-                  {b.about || \"No description provided.\"}\r\n-                </p>\r\n-              </div>\r\n+              Book Now\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/* Modal when user is not logged in */}\r\n+      {showLoginModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowLoginModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              To book a babysitter,\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              please login or create an account.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                onClick={() => navigate(\"/login\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n               >\r\n-                Book Now\r\n+                Login\r\n               </button>\r\n+              <button\r\n+                onClick={() => navigate(\"/choose-role\")}\r\n+                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Register\r\n+              </button>\r\n             </div>\r\n-          ))}\r\n+            <button\r\n+              onClick={() => setShowLoginModal(false)}\r\n+              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       )}\r\n+\r\n+      {/* Modal when booking is successful */}\r\n+      {showSuccessModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowSuccessModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              Booking confirmed! ð\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              Check your bookings in your dashboard.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n+              <button\r\n+                onClick={() => navigate(\"/bookings\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Go to My Bookings\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowSuccessModal(false)}\r\n+                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default SearchBabysitters;\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751455180276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,188 +1,83 @@\n+// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n \r\n-const Search = () => {\r\n+const SearchBabysitters = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [showLoginModal, setShowLoginModal] = useState(false);\r\n-  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n-  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    // For now, we use mock data to display babysitters\r\n-    setBabysitters([\r\n-      {\r\n-        id: 1,\r\n-        name: \"Anna Smith\",\r\n-        region: \"Central\",\r\n-        availability: \"Morning\",\r\n-        price: \"$20/hour\",\r\n-      },\r\n-      {\r\n-        id: 2,\r\n-        name: \"James Brown\",\r\n-        region: \"West\",\r\n-        availability: \"Evening\",\r\n-        price: \"$18/hour\",\r\n-      },\r\n-      {\r\n-        id: 3,\r\n-        name: \"Lisa Johnson\",\r\n-        region: \"East\",\r\n-        availability: \"Afternoon\",\r\n-        price: \"$22/hour\",\r\n-      },\r\n-    ]);\r\n+    const fetchBabysitters = async () => {\r\n+      try {\r\n+        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n+        setBabysitters(response.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+        setError(\"Failed to load babysitters.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBabysitters();\r\n   }, []);\r\n \r\n-  // Handle booking logic\r\n-  const handleBooking = () => {\r\n-    const token = localStorage.getItem(\"token\");\r\n-    if (token) {\r\n-      // User is logged in: show success modal\r\n-      setShowSuccessModal(true);\r\n-    } else {\r\n-      // User is not logged in: show login/register modal\r\n-      setShowLoginModal(true);\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Available Babysitters\r\n       </h1>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Select Region</option>\r\n-          <option value=\"Central\">Central</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"East\">East</option>\r\n-        </select>\r\n-        <input\r\n-          type=\"date\"\r\n-          className=\"border border-gray-300 p-3 rounded w-full\"\r\n-        />\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Availability</option>\r\n-          <option value=\"Morning\">Morning</option>\r\n-          <option value=\"Afternoon\">Afternoon</option>\r\n-          <option value=\"Evening\">Evening</option>\r\n-        </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n-          Search\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Babysitters list */}\r\n-      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-        {babysitters.map((babysitter) => (\r\n-          <div\r\n-            key={babysitter.id}\r\n-            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-          >\r\n-            <div>\r\n-              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                {babysitter.name}\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Region:</strong> {babysitter.region}\r\n-              </p>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Availability:</strong> {babysitter.availability}\r\n-              </p>\r\n-              <p className=\"text-gray-600\">\r\n-                <strong>Price:</strong> {babysitter.price}\r\n-              </p>\r\n-            </div>\r\n-            <button\r\n-              onClick={handleBooking}\r\n-              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : babysitters.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters found. Check back later!\r\n+        </p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n+          {babysitters.map((b) => (\r\n+            <div\r\n+              key={b.id}\r\n+              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n             >\r\n-              Book Now\r\n-            </button>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {/* Modal when user is not logged in */}\r\n-      {showLoginModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowLoginModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              To book a babysitter,\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              please login or create an account.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hourly Rate:</strong>{\" \"}\r\n+                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Available Days:</strong>{\" \"}\r\n+                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hours:</strong>{\" \"}\r\n+                  {b.available_from && b.available_to\r\n+                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                    : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mt-2\">\r\n+                  {b.about || \"No description provided.\"}\r\n+                </p>\r\n+              </div>\r\n               <button\r\n-                onClick={() => navigate(\"/login\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n               >\r\n-                Login\r\n+                Book Now\r\n               </button>\r\n-              <button\r\n-                onClick={() => navigate(\"/choose-role\")}\r\n-                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Register\r\n-              </button>\r\n             </div>\r\n-            <button\r\n-              onClick={() => setShowLoginModal(false)}\r\n-              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n+          ))}\r\n         </div>\r\n       )}\r\n-\r\n-      {/* Modal when booking is successful */}\r\n-      {showSuccessModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowSuccessModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              Booking confirmed! ð\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              Check your bookings in your dashboard.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n-              <button\r\n-                onClick={() => navigate(\"/bookings\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Go to My Bookings\r\n-              </button>\r\n-              <button\r\n-                onClick={() => setShowSuccessModal(false)}\r\n-                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default Search;\r\n+export default SearchBabysitters;\r\n"
                },
                {
                    "date": 1751455246409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,188 @@\n-// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n-const SearchBabysitters = () => {\r\n+const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n+  const [showLoginModal, setShowLoginModal] = useState(false);\r\n+  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n+  const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    const fetchBabysitters = async () => {\r\n-      try {\r\n-        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n-        setBabysitters(response.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-        setError(\"Failed to load babysitters.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBabysitters();\r\n+    // For now, we use mock data to display babysitters\r\n+    setBabysitters([\r\n+      {\r\n+        id: 1,\r\n+        name: \"Anna Smith\",\r\n+        region: \"Central\",\r\n+        availability: \"Morning\",\r\n+        price: \"$20/hour\",\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: \"James Brown\",\r\n+        region: \"West\",\r\n+        availability: \"Evening\",\r\n+        price: \"$18/hour\",\r\n+      },\r\n+      {\r\n+        id: 3,\r\n+        name: \"Lisa Johnson\",\r\n+        region: \"East\",\r\n+        availability: \"Afternoon\",\r\n+        price: \"$22/hour\",\r\n+      },\r\n+    ]);\r\n   }, []);\r\n \r\n+  // Handle booking logic\r\n+  const handleBooking = () => {\r\n+    const token = localStorage.getItem(\"token\");\r\n+    if (token) {\r\n+      // User is logged in: show success modal\r\n+      setShowSuccessModal(true);\r\n+    } else {\r\n+      // User is not logged in: show login/register modal\r\n+      setShowLoginModal(true);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Available Babysitters\r\n+      {/* Page title */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n-      ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters found. Check back later!\r\n-        </p>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n-          {babysitters.map((b) => (\r\n-            <div\r\n-              key={b.id}\r\n-              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n+      {/* Filters */}\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"East\">East</option>\r\n+        </select>\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"border border-gray-300 p-3 rounded w-full\"\r\n+        />\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"Morning\">Morning</option>\r\n+          <option value=\"Afternoon\">Afternoon</option>\r\n+          <option value=\"Evening\">Evening</option>\r\n+        </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n+          Search\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Babysitters list */}\r\n+      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+        {babysitters.map((babysitter) => (\r\n+          <div\r\n+            key={babysitter.id}\r\n+            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+          >\r\n+            <div>\r\n+              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                {babysitter.name}\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Region:</strong> {babysitter.region}\r\n+              </p>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Availability:</strong> {babysitter.availability}\r\n+              </p>\r\n+              <p className=\"text-gray-600\">\r\n+                <strong>Price:</strong> {babysitter.price}\r\n+              </p>\r\n+            </div>\r\n+            <button\r\n+              onClick={handleBooking}\r\n+              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n             >\r\n-              <div>\r\n-                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hourly Rate:</strong>{\" \"}\r\n-                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available Days:</strong>{\" \"}\r\n-                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hours:</strong>{\" \"}\r\n-                  {b.available_from && b.available_to\r\n-                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n-                    : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mt-2\">\r\n-                  {b.about || \"No description provided.\"}\r\n-                </p>\r\n-              </div>\r\n+              Book Now\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/* Modal when user is not logged in */}\r\n+      {showLoginModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowLoginModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              To book a babysitter,\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              please login or create an account.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                onClick={() => navigate(\"/login\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n               >\r\n-                Book Now\r\n+                Login\r\n               </button>\r\n+              <button\r\n+                onClick={() => navigate(\"/choose-role\")}\r\n+                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Register\r\n+              </button>\r\n             </div>\r\n-          ))}\r\n+            <button\r\n+              onClick={() => setShowLoginModal(false)}\r\n+              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       )}\r\n+\r\n+      {/* Modal when booking is successful */}\r\n+      {showSuccessModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowSuccessModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              Booking confirmed! ð\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              Check your bookings in your dashboard.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n+              <button\r\n+                onClick={() => navigate(\"/bookings\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Go to My Bookings\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowSuccessModal(false)}\r\n+                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default SearchBabysitters;\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751455259591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,188 +1,83 @@\n+// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n \r\n-const Search = () => {\r\n+const SearchBabysitters = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [showLoginModal, setShowLoginModal] = useState(false);\r\n-  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n-  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    // For now, we use mock data to display babysitters\r\n-    setBabysitters([\r\n-      {\r\n-        id: 1,\r\n-        name: \"Anna Smith\",\r\n-        region: \"Central\",\r\n-        availability: \"Morning\",\r\n-        price: \"$20/hour\",\r\n-      },\r\n-      {\r\n-        id: 2,\r\n-        name: \"James Brown\",\r\n-        region: \"West\",\r\n-        availability: \"Evening\",\r\n-        price: \"$18/hour\",\r\n-      },\r\n-      {\r\n-        id: 3,\r\n-        name: \"Lisa Johnson\",\r\n-        region: \"East\",\r\n-        availability: \"Afternoon\",\r\n-        price: \"$22/hour\",\r\n-      },\r\n-    ]);\r\n+    const fetchBabysitters = async () => {\r\n+      try {\r\n+        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n+        setBabysitters(response.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+        setError(\"Failed to load babysitters.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBabysitters();\r\n   }, []);\r\n \r\n-  // Handle booking logic\r\n-  const handleBooking = () => {\r\n-    const token = localStorage.getItem(\"token\");\r\n-    if (token) {\r\n-      // User is logged in: show success modal\r\n-      setShowSuccessModal(true);\r\n-    } else {\r\n-      // User is not logged in: show login/register modal\r\n-      setShowLoginModal(true);\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Available Babysitters\r\n       </h1>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Select Region</option>\r\n-          <option value=\"Central\">Central</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"East\">East</option>\r\n-        </select>\r\n-        <input\r\n-          type=\"date\"\r\n-          className=\"border border-gray-300 p-3 rounded w-full\"\r\n-        />\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Availability</option>\r\n-          <option value=\"Morning\">Morning</option>\r\n-          <option value=\"Afternoon\">Afternoon</option>\r\n-          <option value=\"Evening\">Evening</option>\r\n-        </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n-          Search\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Babysitters list */}\r\n-      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-        {babysitters.map((babysitter) => (\r\n-          <div\r\n-            key={babysitter.id}\r\n-            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-          >\r\n-            <div>\r\n-              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                {babysitter.name}\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Region:</strong> {babysitter.region}\r\n-              </p>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Availability:</strong> {babysitter.availability}\r\n-              </p>\r\n-              <p className=\"text-gray-600\">\r\n-                <strong>Price:</strong> {babysitter.price}\r\n-              </p>\r\n-            </div>\r\n-            <button\r\n-              onClick={handleBooking}\r\n-              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : babysitters.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters found. Check back later!\r\n+        </p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n+          {babysitters.map((b) => (\r\n+            <div\r\n+              key={b.id}\r\n+              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n             >\r\n-              Book Now\r\n-            </button>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {/* Modal when user is not logged in */}\r\n-      {showLoginModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowLoginModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              To book a babysitter,\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              please login or create an account.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hourly Rate:</strong>{\" \"}\r\n+                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Available Days:</strong>{\" \"}\r\n+                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hours:</strong>{\" \"}\r\n+                  {b.available_from && b.available_to\r\n+                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                    : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mt-2\">\r\n+                  {b.about || \"No description provided.\"}\r\n+                </p>\r\n+              </div>\r\n               <button\r\n-                onClick={() => navigate(\"/login\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n               >\r\n-                Login\r\n+                Book Now\r\n               </button>\r\n-              <button\r\n-                onClick={() => navigate(\"/choose-role\")}\r\n-                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Register\r\n-              </button>\r\n             </div>\r\n-            <button\r\n-              onClick={() => setShowLoginModal(false)}\r\n-              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n+          ))}\r\n         </div>\r\n       )}\r\n-\r\n-      {/* Modal when booking is successful */}\r\n-      {showSuccessModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowSuccessModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              Booking confirmed! ð\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              Check your bookings in your dashboard.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n-              <button\r\n-                onClick={() => navigate(\"/bookings\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Go to My Bookings\r\n-              </button>\r\n-              <button\r\n-                onClick={() => setShowSuccessModal(false)}\r\n-                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default Search;\r\n+export default SearchBabysitters;\r\n"
                },
                {
                    "date": 1751455271178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,188 @@\n-// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n-const SearchBabysitters = () => {\r\n+const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n+  const [showLoginModal, setShowLoginModal] = useState(false);\r\n+  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n+  const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    const fetchBabysitters = async () => {\r\n-      try {\r\n-        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n-        setBabysitters(response.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-        setError(\"Failed to load babysitters.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBabysitters();\r\n+    // For now, we use mock data to display babysitters\r\n+    setBabysitters([\r\n+      {\r\n+        id: 1,\r\n+        name: \"Anna Smith\",\r\n+        region: \"Central\",\r\n+        availability: \"Morning\",\r\n+        price: \"$20/hour\",\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: \"James Brown\",\r\n+        region: \"West\",\r\n+        availability: \"Evening\",\r\n+        price: \"$18/hour\",\r\n+      },\r\n+      {\r\n+        id: 3,\r\n+        name: \"Lisa Johnson\",\r\n+        region: \"East\",\r\n+        availability: \"Afternoon\",\r\n+        price: \"$22/hour\",\r\n+      },\r\n+    ]);\r\n   }, []);\r\n \r\n+  // Handle booking logic\r\n+  const handleBooking = () => {\r\n+    const token = localStorage.getItem(\"token\");\r\n+    if (token) {\r\n+      // User is logged in: show success modal\r\n+      setShowSuccessModal(true);\r\n+    } else {\r\n+      // User is not logged in: show login/register modal\r\n+      setShowLoginModal(true);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Available Babysitters\r\n+      {/* Page title */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n-      ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters found. Check back later!\r\n-        </p>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n-          {babysitters.map((b) => (\r\n-            <div\r\n-              key={b.id}\r\n-              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n+      {/* Filters */}\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"East\">East</option>\r\n+        </select>\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"border border-gray-300 p-3 rounded w-full\"\r\n+        />\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"Morning\">Morning</option>\r\n+          <option value=\"Afternoon\">Afternoon</option>\r\n+          <option value=\"Evening\">Evening</option>\r\n+        </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n+          Search\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Babysitters list */}\r\n+      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+        {babysitters.map((babysitter) => (\r\n+          <div\r\n+            key={babysitter.id}\r\n+            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+          >\r\n+            <div>\r\n+              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                {babysitter.name}\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Region:</strong> {babysitter.region}\r\n+              </p>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Availability:</strong> {babysitter.availability}\r\n+              </p>\r\n+              <p className=\"text-gray-600\">\r\n+                <strong>Price:</strong> {babysitter.price}\r\n+              </p>\r\n+            </div>\r\n+            <button\r\n+              onClick={handleBooking}\r\n+              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n             >\r\n-              <div>\r\n-                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hourly Rate:</strong>{\" \"}\r\n-                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available Days:</strong>{\" \"}\r\n-                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hours:</strong>{\" \"}\r\n-                  {b.available_from && b.available_to\r\n-                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n-                    : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mt-2\">\r\n-                  {b.about || \"No description provided.\"}\r\n-                </p>\r\n-              </div>\r\n+              Book Now\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/* Modal when user is not logged in */}\r\n+      {showLoginModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowLoginModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              To book a babysitter,\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              please login or create an account.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                onClick={() => navigate(\"/login\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n               >\r\n-                Book Now\r\n+                Login\r\n               </button>\r\n+              <button\r\n+                onClick={() => navigate(\"/choose-role\")}\r\n+                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Register\r\n+              </button>\r\n             </div>\r\n-          ))}\r\n+            <button\r\n+              onClick={() => setShowLoginModal(false)}\r\n+              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       )}\r\n+\r\n+      {/* Modal when booking is successful */}\r\n+      {showSuccessModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowSuccessModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              Booking confirmed! ð\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              Check your bookings in your dashboard.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n+              <button\r\n+                onClick={() => navigate(\"/bookings\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Go to My Bookings\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowSuccessModal(false)}\r\n+                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default SearchBabysitters;\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751455654118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,188 +1,83 @@\n+// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n \r\n-const Search = () => {\r\n+const SearchBabysitters = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [showLoginModal, setShowLoginModal] = useState(false);\r\n-  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n-  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    // For now, we use mock data to display babysitters\r\n-    setBabysitters([\r\n-      {\r\n-        id: 1,\r\n-        name: \"Anna Smith\",\r\n-        region: \"Central\",\r\n-        availability: \"Morning\",\r\n-        price: \"$20/hour\",\r\n-      },\r\n-      {\r\n-        id: 2,\r\n-        name: \"James Brown\",\r\n-        region: \"West\",\r\n-        availability: \"Evening\",\r\n-        price: \"$18/hour\",\r\n-      },\r\n-      {\r\n-        id: 3,\r\n-        name: \"Lisa Johnson\",\r\n-        region: \"East\",\r\n-        availability: \"Afternoon\",\r\n-        price: \"$22/hour\",\r\n-      },\r\n-    ]);\r\n+    const fetchBabysitters = async () => {\r\n+      try {\r\n+        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n+        setBabysitters(response.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+        setError(\"Failed to load babysitters.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBabysitters();\r\n   }, []);\r\n \r\n-  // Handle booking logic\r\n-  const handleBooking = () => {\r\n-    const token = localStorage.getItem(\"token\");\r\n-    if (token) {\r\n-      // User is logged in: show success modal\r\n-      setShowSuccessModal(true);\r\n-    } else {\r\n-      // User is not logged in: show login/register modal\r\n-      setShowLoginModal(true);\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Available Babysitters\r\n       </h1>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Select Region</option>\r\n-          <option value=\"Central\">Central</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"East\">East</option>\r\n-        </select>\r\n-        <input\r\n-          type=\"date\"\r\n-          className=\"border border-gray-300 p-3 rounded w-full\"\r\n-        />\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n-          <option value=\"\">Availability</option>\r\n-          <option value=\"Morning\">Morning</option>\r\n-          <option value=\"Afternoon\">Afternoon</option>\r\n-          <option value=\"Evening\">Evening</option>\r\n-        </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n-          Search\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Babysitters list */}\r\n-      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-        {babysitters.map((babysitter) => (\r\n-          <div\r\n-            key={babysitter.id}\r\n-            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-          >\r\n-            <div>\r\n-              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                {babysitter.name}\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Region:</strong> {babysitter.region}\r\n-              </p>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Availability:</strong> {babysitter.availability}\r\n-              </p>\r\n-              <p className=\"text-gray-600\">\r\n-                <strong>Price:</strong> {babysitter.price}\r\n-              </p>\r\n-            </div>\r\n-            <button\r\n-              onClick={handleBooking}\r\n-              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : babysitters.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters found. Check back later!\r\n+        </p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n+          {babysitters.map((b) => (\r\n+            <div\r\n+              key={b.id}\r\n+              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n             >\r\n-              Book Now\r\n-            </button>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {/* Modal when user is not logged in */}\r\n-      {showLoginModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowLoginModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              To book a babysitter,\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              please login or create an account.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hourly Rate:</strong>{\" \"}\r\n+                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Available Days:</strong>{\" \"}\r\n+                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hours:</strong>{\" \"}\r\n+                  {b.available_from && b.available_to\r\n+                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                    : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mt-2\">\r\n+                  {b.about || \"No description provided.\"}\r\n+                </p>\r\n+              </div>\r\n               <button\r\n-                onClick={() => navigate(\"/login\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n               >\r\n-                Login\r\n+                Book Now\r\n               </button>\r\n-              <button\r\n-                onClick={() => navigate(\"/choose-role\")}\r\n-                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Register\r\n-              </button>\r\n             </div>\r\n-            <button\r\n-              onClick={() => setShowLoginModal(false)}\r\n-              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n+          ))}\r\n         </div>\r\n       )}\r\n-\r\n-      {/* Modal when booking is successful */}\r\n-      {showSuccessModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowSuccessModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              Booking confirmed! ð\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              Check your bookings in your dashboard.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n-              <button\r\n-                onClick={() => navigate(\"/bookings\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Go to My Bookings\r\n-              </button>\r\n-              <button\r\n-                onClick={() => setShowSuccessModal(false)}\r\n-                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n-export default Search;\r\n+export default SearchBabysitters;\r\n"
                },
                {
                    "date": 1751455690029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,20 @@\n-// src/pages/SearchBabysitters.jsx\r\n+// src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n \r\n-const SearchBabysitters = () => {\r\n+const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n \r\n+  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n         const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n         setBabysitters(response.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-        setError(\"Failed to load babysitters.\");\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching babysitters:\", error);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n@@ -24,54 +23,76 @@\n   }, []);\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Available Babysitters\r\n+      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n+      {/* Filters */}\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n+        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"East\">East</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"North\">North</option>\r\n+          <option value=\"South\">South</option>\r\n+        </select>\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+        />\r\n+        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"morning\">Morning</option>\r\n+          <option value=\"afternoon\">Afternoon</option>\r\n+          <option value=\"evening\">Evening</option>\r\n+        </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+          Search\r\n+        </button>\r\n+      </div>\r\n+\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n       ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters found. Check back later!\r\n-        </p>\r\n+        <p className=\"text-center text-gray-600\">No babysitters found.</p>\r\n       ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n-          {babysitters.map((b) => (\r\n+        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+          {babysitters.map((sitter) => (\r\n             <div\r\n-              key={b.id}\r\n-              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n+              key={sitter.id}\r\n+              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n-                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n+                  {sitter.name}\r\n+                </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hourly Rate:</strong>{\" \"}\r\n-                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                  <strong>Rate:</strong>{\" \"}\r\n+                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available Days:</strong>{\" \"}\r\n-                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hours:</strong>{\" \"}\r\n-                  {b.available_from && b.available_to\r\n-                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                  <strong>Available:</strong>{\" \"}\r\n+                  {sitter.available_days\r\n+                    ? sitter.available_days.join(\", \")\r\n                     : \"Not specified\"}\r\n                 </p>\r\n-                <p className=\"text-gray-600 mt-2\">\r\n-                  {b.about || \"No description provided.\"}\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>About:</strong>{\" \"}\r\n+                  {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\r\n+                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n-                Book Now\r\n+                Request Booking\r\n               </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n@@ -79,5 +100,5 @@\n     </main>\r\n   );\r\n };\r\n \r\n-export default SearchBabysitters;\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751455716926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,21 @@\n-// src/pages/Search.jsx\r\n+// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n \r\n-const Search = () => {\r\n+const SearchBabysitters = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n \r\n-  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n         const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n         setBabysitters(response.data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching babysitters:\", error);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+        setError(\"Failed to load babysitters.\");\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n@@ -23,76 +24,54 @@\n   }, []);\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Available Babysitters\r\n       </h1>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n-        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n-          <option value=\"\">Select Region</option>\r\n-          <option value=\"Central\">Central</option>\r\n-          <option value=\"East\">East</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"North\">North</option>\r\n-          <option value=\"South\">South</option>\r\n-        </select>\r\n-        <input\r\n-          type=\"date\"\r\n-          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n-        />\r\n-        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n-          <option value=\"\">Availability</option>\r\n-          <option value=\"morning\">Morning</option>\r\n-          <option value=\"afternoon\">Afternoon</option>\r\n-          <option value=\"evening\">Evening</option>\r\n-        </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n-          Search\r\n-        </button>\r\n-      </div>\r\n-\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n       ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">No babysitters found.</p>\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters found. Check back later!\r\n+        </p>\r\n       ) : (\r\n-        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-          {babysitters.map((sitter) => (\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n+          {babysitters.map((b) => (\r\n             <div\r\n-              key={sitter.id}\r\n-              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+              key={b.id}\r\n+              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n-                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n-                  {sitter.name}\r\n-                </h2>\r\n+                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n+                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Rate:</strong>{\" \"}\r\n-                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n+                  <strong>Hourly Rate:</strong>{\" \"}\r\n+                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available:</strong>{\" \"}\r\n-                  {sitter.available_days\r\n-                    ? sitter.available_days.join(\", \")\r\n+                  <strong>Available Days:</strong>{\" \"}\r\n+                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hours:</strong>{\" \"}\r\n+                  {b.available_from && b.available_to\r\n+                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n                     : \"Not specified\"}\r\n                 </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  <strong>About:</strong>{\" \"}\r\n-                  {sitter.about || \"No description provided.\"}\r\n+                <p className=\"text-gray-600 mt-2\">\r\n+                  {b.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\r\n-                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n               >\r\n-                Request Booking\r\n+                Book Now\r\n               </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n@@ -100,5 +79,5 @@\n     </main>\r\n   );\r\n };\r\n \r\n-export default Search;\r\n+export default SearchBabysitters;\r\n"
                },
                {
                    "date": 1751455728907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,20 @@\n-// src/pages/SearchBabysitters.jsx\r\n+// src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n \r\n-const SearchBabysitters = () => {\r\n+const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n \r\n+  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n         const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n         setBabysitters(response.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-        setError(\"Failed to load babysitters.\");\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching babysitters:\", error);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n@@ -24,54 +23,76 @@\n   }, []);\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Available Babysitters\r\n+      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n+      {/* Filters */}\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n+        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"East\">East</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"North\">North</option>\r\n+          <option value=\"South\">South</option>\r\n+        </select>\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+        />\r\n+        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"morning\">Morning</option>\r\n+          <option value=\"afternoon\">Afternoon</option>\r\n+          <option value=\"evening\">Evening</option>\r\n+        </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+          Search\r\n+        </button>\r\n+      </div>\r\n+\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n       ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters found. Check back later!\r\n-        </p>\r\n+        <p className=\"text-center text-gray-600\">No babysitters found.</p>\r\n       ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n-          {babysitters.map((b) => (\r\n+        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+          {babysitters.map((sitter) => (\r\n             <div\r\n-              key={b.id}\r\n-              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n+              key={sitter.id}\r\n+              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n-                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n+                  {sitter.name}\r\n+                </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hourly Rate:</strong>{\" \"}\r\n-                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                  <strong>Rate:</strong>{\" \"}\r\n+                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available Days:</strong>{\" \"}\r\n-                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hours:</strong>{\" \"}\r\n-                  {b.available_from && b.available_to\r\n-                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                  <strong>Available:</strong>{\" \"}\r\n+                  {sitter.available_days\r\n+                    ? sitter.available_days.join(\", \")\r\n                     : \"Not specified\"}\r\n                 </p>\r\n-                <p className=\"text-gray-600 mt-2\">\r\n-                  {b.about || \"No description provided.\"}\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>About:</strong>{\" \"}\r\n+                  {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\r\n+                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n-                Book Now\r\n+                Request Booking\r\n               </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n@@ -79,5 +100,5 @@\n     </main>\r\n   );\r\n };\r\n \r\n-export default SearchBabysitters;\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751455815572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,21 @@\n-// src/pages/Search.jsx\r\n+// src/pages/SearchBabysitters.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n \r\n-const Search = () => {\r\n+const SearchBabysitters = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n \r\n-  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n         const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n         setBabysitters(response.data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching babysitters:\", error);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching babysitters:\", err);\r\n+        setError(\"Failed to load babysitters.\");\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n@@ -23,76 +24,54 @@\n   }, []);\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Available Babysitters\r\n       </h1>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n-        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n-          <option value=\"\">Select Region</option>\r\n-          <option value=\"Central\">Central</option>\r\n-          <option value=\"East\">East</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"North\">North</option>\r\n-          <option value=\"South\">South</option>\r\n-        </select>\r\n-        <input\r\n-          type=\"date\"\r\n-          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n-        />\r\n-        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n-          <option value=\"\">Availability</option>\r\n-          <option value=\"morning\">Morning</option>\r\n-          <option value=\"afternoon\">Afternoon</option>\r\n-          <option value=\"evening\">Evening</option>\r\n-        </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n-          Search\r\n-        </button>\r\n-      </div>\r\n-\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n       ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">No babysitters found.</p>\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters found. Check back later!\r\n+        </p>\r\n       ) : (\r\n-        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-          {babysitters.map((sitter) => (\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n+          {babysitters.map((b) => (\r\n             <div\r\n-              key={sitter.id}\r\n-              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+              key={b.id}\r\n+              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n-                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n-                  {sitter.name}\r\n-                </h2>\r\n+                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n+                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Rate:</strong>{\" \"}\r\n-                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n+                  <strong>Hourly Rate:</strong>{\" \"}\r\n+                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available:</strong>{\" \"}\r\n-                  {sitter.available_days\r\n-                    ? sitter.available_days.join(\", \")\r\n+                  <strong>Available Days:</strong>{\" \"}\r\n+                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Hours:</strong>{\" \"}\r\n+                  {b.available_from && b.available_to\r\n+                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n                     : \"Not specified\"}\r\n                 </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  <strong>About:</strong>{\" \"}\r\n-                  {sitter.about || \"No description provided.\"}\r\n+                <p className=\"text-gray-600 mt-2\">\r\n+                  {b.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\r\n-                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n               >\r\n-                Request Booking\r\n+                Book Now\r\n               </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n@@ -100,5 +79,5 @@\n     </main>\r\n   );\r\n };\r\n \r\n-export default Search;\r\n+export default SearchBabysitters;\r\n"
                },
                {
                    "date": 1751455825128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,20 @@\n-// src/pages/SearchBabysitters.jsx\r\n+// src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n \r\n-const SearchBabysitters = () => {\r\n+const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n \r\n+  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n         const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n         setBabysitters(response.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching babysitters:\", err);\r\n-        setError(\"Failed to load babysitters.\");\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching babysitters:\", error);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n@@ -24,54 +23,76 @@\n   }, []);\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Available Babysitters\r\n+      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n+      {/* Filters */}\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n+        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+          <option value=\"\">Select Region</option>\r\n+          <option value=\"Central\">Central</option>\r\n+          <option value=\"East\">East</option>\r\n+          <option value=\"West\">West</option>\r\n+          <option value=\"North\">North</option>\r\n+          <option value=\"South\">South</option>\r\n+        </select>\r\n+        <input\r\n+          type=\"date\"\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+        />\r\n+        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+          <option value=\"\">Availability</option>\r\n+          <option value=\"morning\">Morning</option>\r\n+          <option value=\"afternoon\">Afternoon</option>\r\n+          <option value=\"evening\">Evening</option>\r\n+        </select>\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+          Search\r\n+        </button>\r\n+      </div>\r\n+\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n       ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters found. Check back later!\r\n-        </p>\r\n+        <p className=\"text-center text-gray-600\">No babysitters found.</p>\r\n       ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto\">\r\n-          {babysitters.map((b) => (\r\n+        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+          {babysitters.map((sitter) => (\r\n             <div\r\n-              key={b.id}\r\n-              className=\"bg-white rounded-lg shadow p-4 flex flex-col justify-between\"\r\n+              key={sitter.id}\r\n+              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n-                <h2 className=\"text-xl font-semibold text-purple-700 mb-1\">{b.name}</h2>\r\n+                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n+                  {sitter.name}\r\n+                </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {b.region || \"Not specified\"}\r\n+                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hourly Rate:</strong>{\" \"}\r\n-                  {b.rate ? `$${b.rate}` : \"Not specified\"}\r\n+                  <strong>Rate:</strong>{\" \"}\r\n+                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available Days:</strong>{\" \"}\r\n-                  {b.available_days ? b.available_days.join(\", \") : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Hours:</strong>{\" \"}\r\n-                  {b.available_from && b.available_to\r\n-                    ? `${b.available_from.slice(0, 5)} - ${b.available_to.slice(0, 5)}`\r\n+                  <strong>Available:</strong>{\" \"}\r\n+                  {sitter.available_days\r\n+                    ? sitter.available_days.join(\", \")\r\n                     : \"Not specified\"}\r\n                 </p>\r\n-                <p className=\"text-gray-600 mt-2\">\r\n-                  {b.about || \"No description provided.\"}\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>About:</strong>{\" \"}\r\n+                  {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\r\n+                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n-                Book Now\r\n+                Request Booking\r\n               </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n@@ -79,5 +100,5 @@\n     </main>\r\n   );\r\n };\r\n \r\n-export default SearchBabysitters;\r\n+export default Search;\r\n"
                },
                {
                    "date": 1751455892727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n                   {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-700 text-white py-2 rounded transition\"\r\n                 onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n                 Request Booking\r\n               </button>\r\n"
                },
                {
                    "date": 1751455924289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n                   {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-700 text-white py-2 rounded transition\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-900 text-white py-2 rounded transition\"\r\n                 onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n                 Request Booking\r\n               </button>\r\n"
                },
                {
                    "date": 1751455932354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n                   {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-900 text-white py-2 rounded transition\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n                 onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n                 Request Booking\r\n               </button>\r\n"
                },
                {
                    "date": 1751458727045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,13 @@\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n+  // Filter states\r\n+  const [selectedRegion, setSelectedRegion] = useState(\"\");\r\n+  const [selectedAvailability, setSelectedAvailability] = useState(\"\");\r\n+  const [selectedDate, setSelectedDate] = useState(\"\");\r\n+\r\n   // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n@@ -21,8 +26,54 @@\n \r\n     fetchBabysitters();\r\n   }, []);\r\n \r\n+  // Handle region change\r\n+  const handleRegionChange = (e) => {\r\n+    setSelectedRegion(e.target.value);\r\n+  };\r\n+\r\n+  // Handle availability change\r\n+  const handleAvailabilityChange = (e) => {\r\n+    setSelectedAvailability(e.target.value);\r\n+  };\r\n+\r\n+  // Handle date change\r\n+  const handleDateChange = (e) => {\r\n+    setSelectedDate(e.target.value);\r\n+  };\r\n+\r\n+  // Filtered babysitters based on selected filters\r\n+  const filteredBabysitters = babysitters.filter((sitter) => {\r\n+    // Region filter\r\n+    const regionMatch = selectedRegion\r\n+      ? sitter.region && sitter.region.toLowerCase() === selectedRegion.toLowerCase()\r\n+      : true;\r\n+\r\n+    // Availability filter (morning, afternoon, evening)\r\n+    let availabilityMatch = true;\r\n+    if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n+      const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n+      const endHour = parseInt(sitter.available_to.split(\":\")[0]);\r\n+\r\n+      if (selectedAvailability === \"morning\") {\r\n+        availabilityMatch = startHour <= 12;\r\n+      } else if (selectedAvailability === \"afternoon\") {\r\n+        availabilityMatch = startHour >= 12 && startHour < 18;\r\n+      } else if (selectedAvailability === \"evening\") {\r\n+        availabilityMatch = startHour >= 18;\r\n+      }\r\n+    }\r\n+\r\n+    // Date filter (check if selected day is in available_days)\r\n+    const dateMatch = selectedDate\r\n+      ? sitter.available_days &&\r\n+        sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n+      : true;\r\n+\r\n+    return regionMatch && availabilityMatch && dateMatch;\r\n+  });\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n       <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n         <span className=\"text-blue-600\">Find</span>{\" \"}\r\n@@ -30,38 +81,63 @@\n       </h1>\r\n \r\n       {/* Filters */}\r\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n-        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+        {/* Region filter */}\r\n+        <select\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+          value={selectedRegion}\r\n+          onChange={handleRegionChange}\r\n+        >\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n           <option value=\"East\">East</option>\r\n           <option value=\"West\">West</option>\r\n           <option value=\"North\">North</option>\r\n           <option value=\"South\">South</option>\r\n         </select>\r\n+\r\n+        {/* Date filter */}\r\n         <input\r\n           type=\"date\"\r\n           className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+          value={selectedDate}\r\n+          onChange={handleDateChange}\r\n         />\r\n-        <select className=\"px-4 py-2 border rounded focus:outline-none\">\r\n+\r\n+        {/* Availability filter */}\r\n+        <select\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+          value={selectedAvailability}\r\n+          onChange={handleAvailabilityChange}\r\n+        >\r\n           <option value=\"\">Availability</option>\r\n           <option value=\"morning\">Morning</option>\r\n           <option value=\"afternoon\">Afternoon</option>\r\n           <option value=\"evening\">Evening</option>\r\n         </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n-          Search\r\n+\r\n+        {/* Clear Filters */}\r\n+        <button\r\n+          className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+          onClick={() => {\r\n+            setSelectedRegion(\"\");\r\n+            setSelectedAvailability(\"\");\r\n+            setSelectedDate(\"\");\r\n+          }}\r\n+        >\r\n+          Clear Filters\r\n         </button>\r\n       </div>\r\n \r\n+      {/* Babysitter list */}\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : babysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">No babysitters found.</p>\r\n+      ) : filteredBabysitters.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">No babysitters match your criteria.</p>\r\n       ) : (\r\n         <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-          {babysitters.map((sitter) => (\r\n+          {filteredBabysitters.map((sitter) => (\r\n             <div\r\n               key={sitter.id}\r\n               className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n             >\r\n"
                },
                {
                    "date": 1751459396476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,12 +164,37 @@\n                 </p>\r\n               </div>\r\n               <button\r\n                 className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n-              >\r\n-                Request Booking\r\n+                onClick={async () => {\r\n+                  try {\r\n+                    // Get user from localStorage\r\n+                    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n+                    const userId = user.id;\r\n+\r\n+                    // Prepare booking data\r\n+                    const bookingData = {\r\n+                      user_id: userId,\r\n+                      babysitter_id: sitter.id,\r\n+                      date: new Date().toISOString().split(\"T\")[0], // today's date\r\n+                      time_start: \"09:00\",\r\n+                      time_end: \"12:00\",\r\n+                      status: \"pending\"\r\n+                    };\r\n+\r\n+                    // Send POST request\r\n+                    await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n+\r\n+                    alert(\"Booking created successfully!\");\r\n+                  } catch (error) {\r\n+                    console.error(\"Error creating booking:\", error);\r\n+                    alert(\"Failed to create booking.\");\r\n+                  }\r\n+                  }}\r\n+                >\r\n+                  Request Booking\r\n               </button>\r\n+\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751460264880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n+import { toast } from \"react-toastify\"; // Importing toast for notifications\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n"
                },
                {
                    "date": 1751460496808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n // src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n-import { toast } from \"react-toastify\"; // Importing toast for notifications\r\n+import { toast } from \"react-toastify\"; // Import toast for notifications\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n@@ -53,9 +53,8 @@\n     // Availability filter (morning, afternoon, evening)\r\n     let availabilityMatch = true;\r\n     if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n       const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n-      const endHour = parseInt(sitter.available_to.split(\":\")[0]);\r\n \r\n       if (selectedAvailability === \"morning\") {\r\n         availabilityMatch = startHour <= 12;\r\n       } else if (selectedAvailability === \"afternoon\") {\r\n@@ -67,9 +66,11 @@\n \r\n     // Date filter (check if selected day is in available_days)\r\n     const dateMatch = selectedDate\r\n       ? sitter.available_days &&\r\n-        sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n+        sitter.available_days.includes(\r\n+          new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" })\r\n+        )\r\n       : true;\r\n \r\n     return regionMatch && availabilityMatch && dateMatch;\r\n   });\r\n@@ -133,9 +134,11 @@\n       {/* Babysitter list */}\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n       ) : filteredBabysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">No babysitters match your criteria.</p>\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters match your criteria.\r\n+        </p>\r\n       ) : (\r\n         <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n           {filteredBabysitters.map((sitter) => (\r\n             <div\r\n@@ -182,20 +185,22 @@\n                       status: \"pending\"\r\n                     };\r\n \r\n                     // Send POST request\r\n-                    await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n+                    await axios.post(\r\n+                      \"http://localhost:3000/api/bookings\",\r\n+                      bookingData\r\n+                    );\r\n \r\n-                    alert(\"Booking created successfully!\");\r\n+                    toast.success(\"ð Booking created successfully!\");\r\n                   } catch (error) {\r\n                     console.error(\"Error creating booking:\", error);\r\n-                    alert(\"Failed to create booking.\");\r\n+                    toast.error(\"â Failed to create booking.\");\r\n                   }\r\n-                  }}\r\n-                >\r\n-                  Request Booking\r\n+                }}\r\n+              >\r\n+                Request Booking\r\n               </button>\r\n-\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751460540760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n // src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n-import { toast } from \"react-toastify\"; // Import toast for notifications\r\n+import { toast } from \"react-toastify\"; // Importing toast for notifications\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n@@ -53,8 +53,9 @@\n     // Availability filter (morning, afternoon, evening)\r\n     let availabilityMatch = true;\r\n     if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n       const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n+      const endHour = parseInt(sitter.available_to.split(\":\")[0]);\r\n \r\n       if (selectedAvailability === \"morning\") {\r\n         availabilityMatch = startHour <= 12;\r\n       } else if (selectedAvailability === \"afternoon\") {\r\n@@ -66,11 +67,9 @@\n \r\n     // Date filter (check if selected day is in available_days)\r\n     const dateMatch = selectedDate\r\n       ? sitter.available_days &&\r\n-        sitter.available_days.includes(\r\n-          new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" })\r\n-        )\r\n+        sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n       : true;\r\n \r\n     return regionMatch && availabilityMatch && dateMatch;\r\n   });\r\n@@ -134,11 +133,9 @@\n       {/* Babysitter list */}\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n       ) : filteredBabysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          No babysitters match your criteria.\r\n-        </p>\r\n+        <p className=\"text-center text-gray-600\">No babysitters match your criteria.</p>\r\n       ) : (\r\n         <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n           {filteredBabysitters.map((sitter) => (\r\n             <div\r\n@@ -185,22 +182,20 @@\n                       status: \"pending\"\r\n                     };\r\n \r\n                     // Send POST request\r\n-                    await axios.post(\r\n-                      \"http://localhost:3000/api/bookings\",\r\n-                      bookingData\r\n-                    );\r\n+                    await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n \r\n-                    toast.success(\"ð Booking created successfully!\");\r\n+                    alert(\"Booking created successfully!\");\r\n                   } catch (error) {\r\n                     console.error(\"Error creating booking:\", error);\r\n-                    toast.error(\"â Failed to create booking.\");\r\n+                    alert(\"Failed to create booking.\");\r\n                   }\r\n-                }}\r\n-              >\r\n-                Request Booking\r\n+                  }}\r\n+                >\r\n+                  Request Booking\r\n               </button>\r\n+\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751461105839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,203 +1,185 @@\n-// src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import axios from \"axios\";\r\n-import { toast } from \"react-toastify\"; // Importing toast for notifications\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+  const [showLoginModal, setShowLoginModal] = useState(false);\r\n+  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n+  const navigate = useNavigate();\r\n \r\n-  // Filter states\r\n-  const [selectedRegion, setSelectedRegion] = useState(\"\");\r\n-  const [selectedAvailability, setSelectedAvailability] = useState(\"\");\r\n-  const [selectedDate, setSelectedDate] = useState(\"\");\r\n-\r\n-  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n-    const fetchBabysitters = async () => {\r\n-      try {\r\n-        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n-        setBabysitters(response.data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching babysitters:\", error);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBabysitters();\r\n+    // For now, we use mock data to display babysitters\r\n+    setBabysitters([\r\n+      {\r\n+        id: 1,\r\n+        name: \"Anna Smith\",\r\n+        region: \"Central\",\r\n+        availability: \"Morning\",\r\n+        price: \"$20/hour\",\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: \"James Brown\",\r\n+        region: \"West\",\r\n+        availability: \"Evening\",\r\n+        price: \"$18/hour\",\r\n+      },\r\n+      {\r\n+        id: 3,\r\n+        name: \"Lisa Johnson\",\r\n+        region: \"East\",\r\n+        availability: \"Afternoon\",\r\n+        price: \"$22/hour\",\r\n+      },\r\n+    ]);\r\n   }, []);\r\n \r\n-  // Handle region change\r\n-  const handleRegionChange = (e) => {\r\n-    setSelectedRegion(e.target.value);\r\n+  // Handle booking logic\r\n+  const handleBooking = () => {\r\n+    const token = localStorage.getItem(\"token\");\r\n+    if (token) {\r\n+      // User is logged in: show success modal\r\n+      setShowSuccessModal(true);\r\n+    } else {\r\n+      // User is not logged in: show login/register modal\r\n+      setShowLoginModal(true);\r\n+    }\r\n   };\r\n \r\n-  // Handle availability change\r\n-  const handleAvailabilityChange = (e) => {\r\n-    setSelectedAvailability(e.target.value);\r\n-  };\r\n-\r\n-  // Handle date change\r\n-  const handleDateChange = (e) => {\r\n-    setSelectedDate(e.target.value);\r\n-  };\r\n-\r\n-  // Filtered babysitters based on selected filters\r\n-  const filteredBabysitters = babysitters.filter((sitter) => {\r\n-    // Region filter\r\n-    const regionMatch = selectedRegion\r\n-      ? sitter.region && sitter.region.toLowerCase() === selectedRegion.toLowerCase()\r\n-      : true;\r\n-\r\n-    // Availability filter (morning, afternoon, evening)\r\n-    let availabilityMatch = true;\r\n-    if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n-      const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n-      const endHour = parseInt(sitter.available_to.split(\":\")[0]);\r\n-\r\n-      if (selectedAvailability === \"morning\") {\r\n-        availabilityMatch = startHour <= 12;\r\n-      } else if (selectedAvailability === \"afternoon\") {\r\n-        availabilityMatch = startHour >= 12 && startHour < 18;\r\n-      } else if (selectedAvailability === \"evening\") {\r\n-        availabilityMatch = startHour >= 18;\r\n-      }\r\n-    }\r\n-\r\n-    // Date filter (check if selected day is in available_days)\r\n-    const dateMatch = selectedDate\r\n-      ? sitter.available_days &&\r\n-        sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n-      : true;\r\n-\r\n-    return regionMatch && availabilityMatch && dateMatch;\r\n-  });\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n+      {/* Page title */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">Find</span>{\" \"}\r\n         <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n       {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n-        {/* Region filter */}\r\n-        <select\r\n-          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n-          value={selectedRegion}\r\n-          onChange={handleRegionChange}\r\n-        >\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n+          <option value=\"West\">West</option>\r\n           <option value=\"East\">East</option>\r\n-          <option value=\"West\">West</option>\r\n-          <option value=\"North\">North</option>\r\n-          <option value=\"South\">South</option>\r\n         </select>\r\n-\r\n-        {/* Date filter */}\r\n         <input\r\n           type=\"date\"\r\n-          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n-          value={selectedDate}\r\n-          onChange={handleDateChange}\r\n+          className=\"border border-gray-300 p-3 rounded w-full\"\r\n         />\r\n-\r\n-        {/* Availability filter */}\r\n-        <select\r\n-          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n-          value={selectedAvailability}\r\n-          onChange={handleAvailabilityChange}\r\n-        >\r\n+        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n           <option value=\"\">Availability</option>\r\n-          <option value=\"morning\">Morning</option>\r\n-          <option value=\"afternoon\">Afternoon</option>\r\n-          <option value=\"evening\">Evening</option>\r\n+          <option value=\"Morning\">Morning</option>\r\n+          <option value=\"Afternoon\">Afternoon</option>\r\n+          <option value=\"Evening\">Evening</option>\r\n         </select>\r\n-\r\n-        {/* Clear Filters */}\r\n-        <button\r\n-          className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-          onClick={() => {\r\n-            setSelectedRegion(\"\");\r\n-            setSelectedAvailability(\"\");\r\n-            setSelectedDate(\"\");\r\n-          }}\r\n-        >\r\n-          Clear Filters\r\n+        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n+          Search\r\n         </button>\r\n       </div>\r\n \r\n-      {/* Babysitter list */}\r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n-      ) : filteredBabysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">No babysitters match your criteria.</p>\r\n-      ) : (\r\n-        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-          {filteredBabysitters.map((sitter) => (\r\n-            <div\r\n-              key={sitter.id}\r\n-              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+      {/* Babysitters list */}\r\n+      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+        {babysitters.map((babysitter) => (\r\n+          <div\r\n+            key={babysitter.id}\r\n+            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+          >\r\n+            <div>\r\n+              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                {babysitter.name}\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Region:</strong> {babysitter.region}\r\n+              </p>\r\n+              <p className=\"text-gray-600 mb-1\">\r\n+                <strong>Availability:</strong> {babysitter.availability}\r\n+              </p>\r\n+              <p className=\"text-gray-600\">\r\n+                <strong>Price:</strong> {babysitter.price}\r\n+              </p>\r\n+            </div>\r\n+            <button\r\n+              onClick={handleBooking}\r\n+              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n             >\r\n-              <div>\r\n-                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n-                  {sitter.name}\r\n-                </h2>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Rate:</strong>{\" \"}\r\n-                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Available:</strong>{\" \"}\r\n-                  {sitter.available_days\r\n-                    ? sitter.available_days.join(\", \")\r\n-                    : \"Not specified\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  <strong>About:</strong>{\" \"}\r\n-                  {sitter.about || \"No description provided.\"}\r\n-                </p>\r\n-              </div>\r\n+              Book Now\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/* Modal when user is not logged in */}\r\n+      {showLoginModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowLoginModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              To book a babysitter,\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              please login or create an account.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n               <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-                onClick={async () => {\r\n-                  try {\r\n-                    // Get user from localStorage\r\n-                    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n-                    const userId = user.id;\r\n+                onClick={() => navigate(\"/login\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Login\r\n+              </button>\r\n+              <button\r\n+                onClick={() => navigate(\"/choose-role\")}\r\n+                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Register\r\n+              </button>\r\n+            </div>\r\n+            <button\r\n+              onClick={() => setShowLoginModal(false)}\r\n+              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n \r\n-                    // Prepare booking data\r\n-                    const bookingData = {\r\n-                      user_id: userId,\r\n-                      babysitter_id: sitter.id,\r\n-                      date: new Date().toISOString().split(\"T\")[0], // today's date\r\n-                      time_start: \"09:00\",\r\n-                      time_end: \"12:00\",\r\n-                      status: \"pending\"\r\n-                    };\r\n-\r\n-                    // Send POST request\r\n-                    await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n-\r\n-                    alert(\"Booking created successfully!\");\r\n-                  } catch (error) {\r\n-                    console.error(\"Error creating booking:\", error);\r\n-                    alert(\"Failed to create booking.\");\r\n-                  }\r\n-                  }}\r\n-                >\r\n-                  Request Booking\r\n+      {/* Modal when booking is successful */}\r\n+      {showSuccessModal && (\r\n+        <div\r\n+          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n+          onClick={() => setShowSuccessModal(false)}\r\n+        >\r\n+          <div\r\n+            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n+            onClick={(e) => e.stopPropagation()}\r\n+          >\r\n+            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n+              Booking confirmed! ð\r\n+            </h3>\r\n+            <p className=\"text-gray-600 mb-6\">\r\n+              Check your bookings in your dashboard.\r\n+            </p>\r\n+            <div className=\"flex justify-center gap-4\">\r\n+              <button\r\n+                onClick={() => navigate(\"/bookings\")}\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+              >\r\n+                Go to My Bookings\r\n               </button>\r\n-\r\n+              <button\r\n+                onClick={() => setShowSuccessModal(false)}\r\n+                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n+              >\r\n+                Close\r\n+              </button>\r\n             </div>\r\n-          ))}\r\n+          </div>\r\n         </div>\r\n       )}\r\n     </main>\r\n   );\r\n"
                },
                {
                    "date": 1751461195125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,187 +1,179 @@\n+// src/pages/Search.jsx\r\n import React, { useEffect, useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n-  const [showLoginModal, setShowLoginModal] = useState(false);\r\n-  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n-  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n+  // Filter states\r\n+  const [selectedRegion, setSelectedRegion] = useState(\"\");\r\n+  const [selectedAvailability, setSelectedAvailability] = useState(\"\");\r\n+  const [selectedDate, setSelectedDate] = useState(\"\");\r\n+\r\n+  // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n-    // For now, we use mock data to display babysitters\r\n-    setBabysitters([\r\n-      {\r\n-        id: 1,\r\n-        name: \"Anna Smith\",\r\n-        region: \"Central\",\r\n-        availability: \"Morning\",\r\n-        price: \"$20/hour\",\r\n-      },\r\n-      {\r\n-        id: 2,\r\n-        name: \"James Brown\",\r\n-        region: \"West\",\r\n-        availability: \"Evening\",\r\n-        price: \"$18/hour\",\r\n-      },\r\n-      {\r\n-        id: 3,\r\n-        name: \"Lisa Johnson\",\r\n-        region: \"East\",\r\n-        availability: \"Afternoon\",\r\n-        price: \"$22/hour\",\r\n-      },\r\n-    ]);\r\n+    const fetchBabysitters = async () => {\r\n+      try {\r\n+        const response = await axios.get(\"http://localhost:3000/api/babysitters\");\r\n+        setBabysitters(response.data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching babysitters:\", error);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBabysitters();\r\n   }, []);\r\n \r\n-  // Handle booking logic\r\n-  const handleBooking = () => {\r\n-    const token = localStorage.getItem(\"token\");\r\n-    if (token) {\r\n-      // User is logged in: show success modal\r\n-      setShowSuccessModal(true);\r\n-    } else {\r\n-      // User is not logged in: show login/register modal\r\n-      setShowLoginModal(true);\r\n-    }\r\n+  // Handle region change\r\n+  const handleRegionChange = (e) => {\r\n+    setSelectedRegion(e.target.value);\r\n   };\r\n \r\n+  // Handle availability change\r\n+  const handleAvailabilityChange = (e) => {\r\n+    setSelectedAvailability(e.target.value);\r\n+  };\r\n+\r\n+  // Handle date change\r\n+  const handleDateChange = (e) => {\r\n+    setSelectedDate(e.target.value);\r\n+  };\r\n+\r\n+  // Filtered babysitters based on selected filters\r\n+  const filteredBabysitters = babysitters.filter((sitter) => {\r\n+    // Region filter\r\n+    const regionMatch = selectedRegion\r\n+      ? sitter.region && sitter.region.toLowerCase() === selectedRegion.toLowerCase()\r\n+      : true;\r\n+\r\n+    // Availability filter (morning, afternoon, evening)\r\n+    let availabilityMatch = true;\r\n+    if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n+      const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n+      const endHour = parseInt(sitter.available_to.split(\":\")[0]);\r\n+\r\n+      if (selectedAvailability === \"morning\") {\r\n+        availabilityMatch = startHour <= 12;\r\n+      } else if (selectedAvailability === \"afternoon\") {\r\n+        availabilityMatch = startHour >= 12 && startHour < 18;\r\n+      } else if (selectedAvailability === \"evening\") {\r\n+        availabilityMatch = startHour >= 18;\r\n+      }\r\n+    }\r\n+\r\n+    // Date filter (check if selected day is in available_days)\r\n+    const dateMatch = selectedDate\r\n+      ? sitter.available_days &&\r\n+        sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n+      : true;\r\n+\r\n+    return regionMatch && availabilityMatch && dateMatch;\r\n+  });\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n         <span className=\"text-blue-600\">Find</span>{\" \"}\r\n         <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n       {/* Filters */}\r\n-      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+      <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n+        {/* Region filter */}\r\n+        <select\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+          value={selectedRegion}\r\n+          onChange={handleRegionChange}\r\n+        >\r\n           <option value=\"\">Select Region</option>\r\n           <option value=\"Central\">Central</option>\r\n+          <option value=\"East\">East</option>\r\n           <option value=\"West\">West</option>\r\n-          <option value=\"East\">East</option>\r\n+          <option value=\"North\">North</option>\r\n+          <option value=\"South\">South</option>\r\n         </select>\r\n+\r\n+        {/* Date filter */}\r\n         <input\r\n           type=\"date\"\r\n-          className=\"border border-gray-300 p-3 rounded w-full\"\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+          value={selectedDate}\r\n+          onChange={handleDateChange}\r\n         />\r\n-        <select className=\"border border-gray-300 p-3 rounded w-full\">\r\n+\r\n+        {/* Availability filter */}\r\n+        <select\r\n+          className=\"px-4 py-2 border rounded focus:outline-none\"\r\n+          value={selectedAvailability}\r\n+          onChange={handleAvailabilityChange}\r\n+        >\r\n           <option value=\"\">Availability</option>\r\n-          <option value=\"Morning\">Morning</option>\r\n-          <option value=\"Afternoon\">Afternoon</option>\r\n-          <option value=\"Evening\">Evening</option>\r\n+          <option value=\"morning\">Morning</option>\r\n+          <option value=\"afternoon\">Afternoon</option>\r\n+          <option value=\"evening\">Evening</option>\r\n         </select>\r\n-        <button className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold rounded p-3 w-full transition\">\r\n-          Search\r\n+\r\n+        {/* Clear Filters */}\r\n+        <button\r\n+          className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+          onClick={() => {\r\n+            setSelectedRegion(\"\");\r\n+            setSelectedAvailability(\"\");\r\n+            setSelectedDate(\"\");\r\n+          }}\r\n+        >\r\n+          Clear Filters\r\n         </button>\r\n       </div>\r\n \r\n-      {/* Babysitters list */}\r\n-      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-        {babysitters.map((babysitter) => (\r\n-          <div\r\n-            key={babysitter.id}\r\n-            className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-          >\r\n-            <div>\r\n-              <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                {babysitter.name}\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Region:</strong> {babysitter.region}\r\n-              </p>\r\n-              <p className=\"text-gray-600 mb-1\">\r\n-                <strong>Availability:</strong> {babysitter.availability}\r\n-              </p>\r\n-              <p className=\"text-gray-600\">\r\n-                <strong>Price:</strong> {babysitter.price}\r\n-              </p>\r\n-            </div>\r\n-            <button\r\n-              onClick={handleBooking}\r\n-              className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+      {/* Babysitter list */}\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n+      ) : filteredBabysitters.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">No babysitters match your criteria.</p>\r\n+      ) : (\r\n+        <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+          {filteredBabysitters.map((sitter) => (\r\n+            <div\r\n+              key={sitter.id}\r\n+              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n             >\r\n-              Book Now\r\n-            </button>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {/* Modal when user is not logged in */}\r\n-      {showLoginModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowLoginModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              To book a babysitter,\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              please login or create an account.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n+                  {sitter.name}\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Region:</strong> {sitter.region || \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Rate:</strong>{\" \"}\r\n+                  {sitter.rate ? `$${sitter.rate}/hr` : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Available:</strong>{\" \"}\r\n+                  {sitter.available_days\r\n+                    ? sitter.available_days.join(\", \")\r\n+                    : \"Not specified\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>About:</strong>{\" \"}\r\n+                  {sitter.about || \"No description provided.\"}\r\n+                </p>\r\n+              </div>\r\n               <button\r\n-                onClick={() => navigate(\"/login\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n               >\r\n-                Login\r\n+                Request Booking\r\n               </button>\r\n-              <button\r\n-                onClick={() => navigate(\"/choose-role\")}\r\n-                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Register\r\n-              </button>\r\n             </div>\r\n-            <button\r\n-              onClick={() => setShowLoginModal(false)}\r\n-              className=\"mt-4 text-sm text-gray-500 hover:underline\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </div>\r\n+          ))}\r\n         </div>\r\n       )}\r\n-\r\n-      {/* Modal when booking is successful */}\r\n-      {showSuccessModal && (\r\n-        <div\r\n-          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n-          onClick={() => setShowSuccessModal(false)}\r\n-        >\r\n-          <div\r\n-            className=\"bg-white p-6 rounded shadow-md text-center max-w-sm w-full\"\r\n-            onClick={(e) => e.stopPropagation()}\r\n-          >\r\n-            <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\r\n-              Booking confirmed! ð\r\n-            </h3>\r\n-            <p className=\"text-gray-600 mb-6\">\r\n-              Check your bookings in your dashboard.\r\n-            </p>\r\n-            <div className=\"flex justify-center gap-4\">\r\n-              <button\r\n-                onClick={() => navigate(\"/bookings\")}\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded\"\r\n-              >\r\n-                Go to My Bookings\r\n-              </button>\r\n-              <button\r\n-                onClick={() => setShowSuccessModal(false)}\r\n-                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n     </main>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751461325939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,12 +164,37 @@\n                 </p>\r\n               </div>\r\n               <button\r\n                 className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-                onClick={() => alert(\"Booking flow will be implemented here\")}\r\n-              >\r\n-                Request Booking\r\n+                onClick={async () => {\r\n+                  try {\r\n+                    // Get user from localStorage\r\n+                    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n+                    const userId = user.id;\r\n+\r\n+                    // Prepare booking data\r\n+                    const bookingData = {\r\n+                      user_id: userId,\r\n+                      babysitter_id: sitter.id,\r\n+                      date: new Date().toISOString().split(\"T\")[0], // today's date\r\n+                      time_start: \"09:00\",\r\n+                      time_end: \"12:00\",\r\n+                      status: \"pending\"\r\n+                    };\r\n+\r\n+                    // Send POST request\r\n+                    await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n+\r\n+                    alert(\"Booking created successfully!\");\r\n+                  } catch (error) {\r\n+                    console.error(\"Error creating booking:\", error);\r\n+                    alert(\"Failed to create booking.\");\r\n+                  }\r\n+                }}\r\n+                >\r\n+                  Request Booking\r\n               </button>\r\n+\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751461534486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [toast, setToast] = useState(null); // Success/Error toast\r\n \r\n   // Filter states\r\n   const [selectedRegion, setSelectedRegion] = useState(\"\");\r\n   const [selectedAvailability, setSelectedAvailability] = useState(\"\");\r\n@@ -48,13 +49,12 @@\n     const regionMatch = selectedRegion\r\n       ? sitter.region && sitter.region.toLowerCase() === selectedRegion.toLowerCase()\r\n       : true;\r\n \r\n-    // Availability filter (morning, afternoon, evening)\r\n+    // Availability filter\r\n     let availabilityMatch = true;\r\n     if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n       const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n-      const endHour = parseInt(sitter.available_to.split(\":\")[0]);\r\n \r\n       if (selectedAvailability === \"morning\") {\r\n         availabilityMatch = startHour <= 12;\r\n       } else if (selectedAvailability === \"afternoon\") {\r\n@@ -63,24 +63,68 @@\n         availabilityMatch = startHour >= 18;\r\n       }\r\n     }\r\n \r\n-    // Date filter (check if selected day is in available_days)\r\n+    // Date filter\r\n     const dateMatch = selectedDate\r\n       ? sitter.available_days &&\r\n         sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n       : true;\r\n \r\n     return regionMatch && availabilityMatch && dateMatch;\r\n   });\r\n \r\n+  // Handle booking creation\r\n+  const handleBooking = async (sitterId) => {\r\n+    try {\r\n+      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n+      const userId = user.id;\r\n+\r\n+      const bookingData = {\r\n+        user_id: userId,\r\n+        babysitter_id: sitterId,\r\n+        date: new Date().toISOString().split(\"T\")[0],\r\n+        time_start: \"09:00\",\r\n+        time_end: \"12:00\",\r\n+        status: \"pending\"\r\n+      };\r\n+\r\n+      await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n+\r\n+      setToast({ type: \"success\", message: \"Booking created successfully!\" });\r\n+\r\n+      // Hide toast after 3s\r\n+      setTimeout(() => setToast(null), 3000);\r\n+    } catch (error) {\r\n+      console.error(\"Error creating booking:\", error);\r\n+      setToast({ type: \"error\", message: \"Failed to create booking.\" });\r\n+      setTimeout(() => setToast(null), 3000);\r\n+    }\r\n+  };\r\n+\r\n+  // Handle booking cancellation (placeholder)\r\n+  const handleCancelBooking = () => {\r\n+    setToast({ type: \"error\", message: \"Cancel booking feature coming soon!\" });\r\n+    setTimeout(() => setToast(null), 3000);\r\n+  };\r\n+\r\n   return (\r\n-    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6 relative\">\r\n       <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n         <span className=\"text-blue-600\">Find</span>{\" \"}\r\n         <span className=\"text-purple-500\">a Babysitter</span>\r\n       </h1>\r\n \r\n+      {/* Toast */}\r\n+      {toast && (\r\n+        <div\r\n+          className={`fixed top-6 left-1/2 transform -translate-x-1/2 px-4 py-2 rounded shadow-lg text-white z-50\r\n+            ${toast.type === \"success\" ? \"bg-green-500\" : \"bg-red-500\"}`}\r\n+        >\r\n+          {toast.message}\r\n+        </div>\r\n+      )}\r\n+\r\n       {/* Filters */}\r\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n         {/* Region filter */}\r\n         <select\r\n@@ -162,39 +206,22 @@\n                   <strong>About:</strong>{\" \"}\r\n                   {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n-              <button\r\n-                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-                onClick={async () => {\r\n-                  try {\r\n-                    // Get user from localStorage\r\n-                    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n-                    const userId = user.id;\r\n-\r\n-                    // Prepare booking data\r\n-                    const bookingData = {\r\n-                      user_id: userId,\r\n-                      babysitter_id: sitter.id,\r\n-                      date: new Date().toISOString().split(\"T\")[0], // today's date\r\n-                      time_start: \"09:00\",\r\n-                      time_end: \"12:00\",\r\n-                      status: \"pending\"\r\n-                    };\r\n-\r\n-                    // Send POST request\r\n-                    await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n-\r\n-                    alert(\"Booking created successfully!\");\r\n-                  } catch (error) {\r\n-                    console.error(\"Error creating booking:\", error);\r\n-                    alert(\"Failed to create booking.\");\r\n-                  }\r\n-                }}\r\n+              <div className=\"flex flex-col gap-2 mt-4\">\r\n+                <button\r\n+                  className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                  onClick={() => handleBooking(sitter.id)}\r\n                 >\r\n                   Request Booking\r\n-              </button>\r\n-\r\n+                </button>\r\n+                <button\r\n+                  className=\"bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+                  onClick={handleCancelBooking}\r\n+                >\r\n+                  Cancel Booking\r\n+                </button>\r\n+              </div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751461712394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,17 @@\n \r\n const Search = () => {\r\n   const [babysitters, setBabysitters] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [toast, setToast] = useState(null); // Success/Error toast\r\n \r\n   // Filter states\r\n   const [selectedRegion, setSelectedRegion] = useState(\"\");\r\n   const [selectedAvailability, setSelectedAvailability] = useState(\"\");\r\n   const [selectedDate, setSelectedDate] = useState(\"\");\r\n \r\n+  // Toast state\r\n+  const [toast, setToast] = useState({ message: \"\", type: \"\" });\r\n+\r\n   // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n       try {\r\n@@ -49,13 +51,12 @@\n     const regionMatch = selectedRegion\r\n       ? sitter.region && sitter.region.toLowerCase() === selectedRegion.toLowerCase()\r\n       : true;\r\n \r\n-    // Availability filter\r\n+    // Availability filter (morning, afternoon, evening)\r\n     let availabilityMatch = true;\r\n     if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n       const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n-\r\n       if (selectedAvailability === \"morning\") {\r\n         availabilityMatch = startHour <= 12;\r\n       } else if (selectedAvailability === \"afternoon\") {\r\n         availabilityMatch = startHour >= 12 && startHour < 18;\r\n@@ -63,71 +64,47 @@\n         availabilityMatch = startHour >= 18;\r\n       }\r\n     }\r\n \r\n-    // Date filter\r\n+    // Date filter (check if selected day is in available_days)\r\n     const dateMatch = selectedDate\r\n       ? sitter.available_days &&\r\n-        sitter.available_days.includes(new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" }))\r\n+        sitter.available_days.includes(\r\n+          new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" })\r\n+        )\r\n       : true;\r\n \r\n     return regionMatch && availabilityMatch && dateMatch;\r\n   });\r\n \r\n-  // Handle booking creation\r\n-  const handleBooking = async (sitterId) => {\r\n-    try {\r\n-      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n-      const userId = user.id;\r\n-\r\n-      const bookingData = {\r\n-        user_id: userId,\r\n-        babysitter_id: sitterId,\r\n-        date: new Date().toISOString().split(\"T\")[0],\r\n-        time_start: \"09:00\",\r\n-        time_end: \"12:00\",\r\n-        status: \"pending\"\r\n-      };\r\n-\r\n-      await axios.post(\"http://localhost:3000/api/bookings\", bookingData);\r\n-\r\n-      setToast({ type: \"success\", message: \"Booking created successfully!\" });\r\n-\r\n-      // Hide toast after 3s\r\n-      setTimeout(() => setToast(null), 3000);\r\n-    } catch (error) {\r\n-      console.error(\"Error creating booking:\", error);\r\n-      setToast({ type: \"error\", message: \"Failed to create booking.\" });\r\n-      setTimeout(() => setToast(null), 3000);\r\n-    }\r\n+  // Show toast for 3 seconds\r\n+  const showToast = (message, type) => {\r\n+    setToast({ message, type });\r\n+    setTimeout(() => {\r\n+      setToast({ message: \"\", type: \"\" });\r\n+    }, 3000);\r\n   };\r\n \r\n-  // Handle booking cancellation (placeholder)\r\n-  const handleCancelBooking = () => {\r\n-    setToast({ type: \"error\", message: \"Cancel booking feature coming soon!\" });\r\n-    setTimeout(() => setToast(null), 3000);\r\n-  };\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6 relative\">\r\n-      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n-        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n-        <span className=\"text-purple-500\">a Babysitter</span>\r\n-      </h1>\r\n-\r\n-      {/* Toast */}\r\n-      {toast && (\r\n+      {/* Toast notification */}\r\n+      {toast.message && (\r\n         <div\r\n-          className={`fixed top-6 left-1/2 transform -translate-x-1/2 px-4 py-2 rounded shadow-lg text-white z-50\r\n-            ${toast.type === \"success\" ? \"bg-green-500\" : \"bg-red-500\"}`}\r\n+          className={`fixed top-4 left-1/2 transform -translate-x-1/2 px-4 py-2 rounded shadow-lg text-white transition ${\r\n+            toast.type === \"success\" ? \"bg-green-500\" : \"bg-red-500\"\r\n+          }`}\r\n         >\r\n           {toast.message}\r\n         </div>\r\n       )}\r\n \r\n+      <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n+        <span className=\"text-blue-600\">Find</span>{\" \"}\r\n+        <span className=\"text-purple-500\">a Babysitter</span>\r\n+      </h1>\r\n+\r\n       {/* Filters */}\r\n       <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-4 mb-10\">\r\n-        {/* Region filter */}\r\n         <select\r\n           className=\"px-4 py-2 border rounded focus:outline-none\"\r\n           value={selectedRegion}\r\n           onChange={handleRegionChange}\r\n@@ -139,17 +116,15 @@\n           <option value=\"North\">North</option>\r\n           <option value=\"South\">South</option>\r\n         </select>\r\n \r\n-        {/* Date filter */}\r\n         <input\r\n           type=\"date\"\r\n           className=\"px-4 py-2 border rounded focus:outline-none\"\r\n           value={selectedDate}\r\n           onChange={handleDateChange}\r\n         />\r\n \r\n-        {/* Availability filter */}\r\n         <select\r\n           className=\"px-4 py-2 border rounded focus:outline-none\"\r\n           value={selectedAvailability}\r\n           onChange={handleAvailabilityChange}\r\n@@ -159,9 +134,8 @@\n           <option value=\"afternoon\">Afternoon</option>\r\n           <option value=\"evening\">Evening</option>\r\n         </select>\r\n \r\n-        {/* Clear Filters */}\r\n         <button\r\n           className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n           onClick={() => {\r\n             setSelectedRegion(\"\");\r\n@@ -172,13 +146,14 @@\n           Clear Filters\r\n         </button>\r\n       </div>\r\n \r\n-      {/* Babysitter list */}\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading babysitters...</p>\r\n       ) : filteredBabysitters.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">No babysitters match your criteria.</p>\r\n+        <p className=\"text-center text-gray-600\">\r\n+          No babysitters match your criteria.\r\n+        </p>\r\n       ) : (\r\n         <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n           {filteredBabysitters.map((sitter) => (\r\n             <div\r\n@@ -206,22 +181,38 @@\n                   <strong>About:</strong>{\" \"}\r\n                   {sitter.about || \"No description provided.\"}\r\n                 </p>\r\n               </div>\r\n-              <div className=\"flex flex-col gap-2 mt-4\">\r\n-                <button\r\n-                  className=\"bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-                  onClick={() => handleBooking(sitter.id)}\r\n-                >\r\n-                  Request Booking\r\n-                </button>\r\n-                <button\r\n-                  className=\"bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-                  onClick={handleCancelBooking}\r\n-                >\r\n-                  Cancel Booking\r\n-                </button>\r\n-              </div>\r\n+              <button\r\n+                className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+                onClick={async () => {\r\n+                  try {\r\n+                    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n+                    const userId = user.id;\r\n+\r\n+                    const bookingData = {\r\n+                      user_id: userId,\r\n+                      babysitter_id: sitter.id,\r\n+                      date: new Date().toISOString().split(\"T\")[0],\r\n+                      time_start: \"09:00\",\r\n+                      time_end: \"12:00\",\r\n+                      status: \"pending\"\r\n+                    };\r\n+\r\n+                    await axios.post(\r\n+                      \"http://localhost:3000/api/bookings\",\r\n+                      bookingData\r\n+                    );\r\n+\r\n+                    showToast(\"Booking created successfully!\", \"success\");\r\n+                  } catch (error) {\r\n+                    console.error(\"Error creating booking:\", error);\r\n+                    showToast(\"Failed to create booking.\", \"error\");\r\n+                  }\r\n+                }}\r\n+              >\r\n+                Request Booking\r\n+              </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751461772139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n   const [selectedRegion, setSelectedRegion] = useState(\"\");\r\n   const [selectedAvailability, setSelectedAvailability] = useState(\"\");\r\n   const [selectedDate, setSelectedDate] = useState(\"\");\r\n \r\n-  // Toast state\r\n-  const [toast, setToast] = useState({ message: \"\", type: \"\" });\r\n+  // Modal state\r\n+  const [modal, setModal] = useState({ message: \"\", type: \"\" });\r\n \r\n   // Fetch babysitters when component mounts\r\n   useEffect(() => {\r\n     const fetchBabysitters = async () => {\r\n@@ -46,14 +46,12 @@\n   };\r\n \r\n   // Filtered babysitters based on selected filters\r\n   const filteredBabysitters = babysitters.filter((sitter) => {\r\n-    // Region filter\r\n     const regionMatch = selectedRegion\r\n       ? sitter.region && sitter.region.toLowerCase() === selectedRegion.toLowerCase()\r\n       : true;\r\n \r\n-    // Availability filter (morning, afternoon, evening)\r\n     let availabilityMatch = true;\r\n     if (selectedAvailability && sitter.available_from && sitter.available_to) {\r\n       const startHour = parseInt(sitter.available_from.split(\":\")[0]);\r\n       if (selectedAvailability === \"morning\") {\r\n@@ -64,9 +62,8 @@\n         availabilityMatch = startHour >= 18;\r\n       }\r\n     }\r\n \r\n-    // Date filter (check if selected day is in available_days)\r\n     const dateMatch = selectedDate\r\n       ? sitter.available_days &&\r\n         sitter.available_days.includes(\r\n           new Date(selectedDate).toLocaleDateString(\"en-US\", { weekday: \"long\" })\r\n@@ -75,26 +72,29 @@\n \r\n     return regionMatch && availabilityMatch && dateMatch;\r\n   });\r\n \r\n-  // Show toast for 3 seconds\r\n-  const showToast = (message, type) => {\r\n-    setToast({ message, type });\r\n-    setTimeout(() => {\r\n-      setToast({ message: \"\", type: \"\" });\r\n-    }, 3000);\r\n-  };\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6 relative\">\r\n-      {/* Toast notification */}\r\n-      {toast.message && (\r\n-        <div\r\n-          className={`fixed top-4 left-1/2 transform -translate-x-1/2 px-4 py-2 rounded shadow-lg text-white transition ${\r\n-            toast.type === \"success\" ? \"bg-green-500\" : \"bg-red-500\"\r\n-          }`}\r\n-        >\r\n-          {toast.message}\r\n+      {/* Modal Overlay */}\r\n+      {modal.message && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+          <div className=\"bg-white rounded-lg p-6 w-full max-w-md shadow-xl text-center\">\r\n+            <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+              {modal.type === \"success\" ? \"Success\" : \"Error\"}\r\n+            </h2>\r\n+            <p className=\"text-gray-600 mb-4\">{modal.message}</p>\r\n+            <button\r\n+              onClick={() => setModal({ message: \"\", type: \"\" })}\r\n+              className={`px-4 py-2 rounded ${\r\n+                modal.type === \"success\"\r\n+                  ? \"bg-purple-500 hover:bg-purple-600\"\r\n+                  : \"bg-red-500 hover:bg-red-600\"\r\n+              } text-white transition`}\r\n+            >\r\n+              Close\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n       )}\r\n \r\n       <h1 className=\"text-4xl font-bold text-center mb-8\">\r\n@@ -202,12 +202,18 @@\n                       \"http://localhost:3000/api/bookings\",\r\n                       bookingData\r\n                     );\r\n \r\n-                    showToast(\"Booking created successfully!\", \"success\");\r\n+                    setModal({\r\n+                      message: \"Booking created successfully!\",\r\n+                      type: \"success\"\r\n+                    });\r\n                   } catch (error) {\r\n                     console.error(\"Error creating booking:\", error);\r\n-                    showToast(\"Failed to create booking.\", \"error\");\r\n+                    setModal({\r\n+                      message: \"Failed to create booking.\",\r\n+                      type: \"error\"\r\n+                    });\r\n                   }\r\n                 }}\r\n               >\r\n                 Request Booking\r\n"
                },
                {
                    "date": 1751464037121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,42 +183,54 @@\n                 </p>\r\n               </div>\r\n               <button\r\n                 className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-                onClick={async () => {\r\n-                  try {\r\n-                    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n-                    const userId = user.id;\r\n+                onClick={() => {\r\n+                  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n+                  if (!user) {\r\n+                    setModal({\r\n+                      message: \"To book a babysitter, please log in or create an account.\",\r\n+                      type: \"login-required\",\r\n+                    });\r\n+                    return;\r\n+                  }\r\n \r\n-                    const bookingData = {\r\n-                      user_id: userId,\r\n-                      babysitter_id: sitter.id,\r\n-                      date: new Date().toISOString().split(\"T\")[0],\r\n-                      time_start: \"09:00\",\r\n-                      time_end: \"12:00\",\r\n-                      status: \"pending\"\r\n-                    };\r\n+                  // If logged in, proceed to create booking\r\n+                  (async () => {\r\n+                    try {\r\n+                      const userId = user.id;\r\n \r\n-                    await axios.post(\r\n-                      \"http://localhost:3000/api/bookings\",\r\n-                      bookingData\r\n-                    );\r\n+                      const bookingData = {\r\n+                        user_id: userId,\r\n+                        babysitter_id: sitter.id,\r\n+                        date: new Date().toISOString().split(\"T\")[0],\r\n+                        time_start: \"09:00\",\r\n+                        time_end: \"12:00\",\r\n+                        status: \"pending\",\r\n+                      };\r\n \r\n-                    setModal({\r\n-                      message: \"Booking created successfully!\",\r\n-                      type: \"success\"\r\n-                    });\r\n-                  } catch (error) {\r\n-                    console.error(\"Error creating booking:\", error);\r\n-                    setModal({\r\n-                      message: \"Failed to create booking.\",\r\n-                      type: \"error\"\r\n-                    });\r\n-                  }\r\n+                      await axios.post(\r\n+                        \"http://localhost:3000/api/bookings\",\r\n+                        bookingData\r\n+                      );\r\n+\r\n+                      setModal({\r\n+                        message: \"Booking created successfully!\",\r\n+                        type: \"success\",\r\n+                      });\r\n+                      } catch (error) {\r\n+                        console.error(\"Error creating booking:\", error);\r\n+                        setModal({\r\n+                          message: \"Failed to create booking.\",\r\n+                          type: \"error\",\r\n+                        });\r\n+                      }\r\n+                  })();\r\n                 }}\r\n-              >\r\n+                >\r\n                 Request Booking\r\n               </button>\r\n+\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751464311607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,22 +78,53 @@\n       {/* Modal Overlay */}\r\n       {modal.message && (\r\n         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n           <div className=\"bg-white rounded-lg p-6 w-full max-w-md shadow-xl text-center\">\r\n-            <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-              {modal.type === \"success\" ? \"Success\" : \"Error\"}\r\n-            </h2>\r\n-            <p className=\"text-gray-600 mb-4\">{modal.message}</p>\r\n-            <button\r\n-              onClick={() => setModal({ message: \"\", type: \"\" })}\r\n-              className={`px-4 py-2 rounded ${\r\n-                modal.type === \"success\"\r\n-                  ? \"bg-purple-500 hover:bg-purple-600\"\r\n-                  : \"bg-red-500 hover:bg-red-600\"\r\n-              } text-white transition`}\r\n-            >\r\n-              Close\r\n-            </button>\r\n+            {modal.type === \"login-required\" ? (\r\n+              <>\r\n+                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                  Login Required\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-4\">{modal.message}</p>\r\n+                <div className=\"flex justify-center gap-3\">\r\n+                  <button\r\n+                    onClick={() => setModal({ message: \"\", type: \"\" })}\r\n+                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded transition\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={() => window.location.href = \"/login\"}\r\n+                    className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition\"\r\n+                  >\r\n+                    Login\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={() => window.location.href = \"/choose-role\"}\r\n+                    className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded transition\"\r\n+                  >\r\n+                    Register\r\n+                  </button>\r\n+                </div>\r\n+              </>\r\n+            ) : (\r\n+              <>\r\n+                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                  {modal.type === \"success\" ? \"Success\" : \"Error\"}\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-4\">{modal.message}</p>\r\n+                <button\r\n+                  onClick={() => setModal({ message: \"\", type: \"\" })}\r\n+                  className={`px-4 py-2 rounded ${\r\n+                    modal.type === \"success\"\r\n+                      ? \"bg-purple-500 hover:bg-purple-600\"\r\n+                      : \"bg-red-500 hover:bg-red-600\"\r\n+                  } text-white transition`}\r\n+                >\r\n+                  Close\r\n+                </button>\r\n+              </>\r\n+            )}\r\n           </div>\r\n         </div>\r\n       )}\r\n \r\n@@ -216,21 +247,20 @@\n                       setModal({\r\n                         message: \"Booking created successfully!\",\r\n                         type: \"success\",\r\n                       });\r\n-                      } catch (error) {\r\n-                        console.error(\"Error creating booking:\", error);\r\n-                        setModal({\r\n-                          message: \"Failed to create booking.\",\r\n-                          type: \"error\",\r\n-                        });\r\n-                      }\r\n+                    } catch (error) {\r\n+                      console.error(\"Error creating booking:\", error);\r\n+                      setModal({\r\n+                        message: \"Failed to create booking.\",\r\n+                        type: \"error\",\r\n+                      });\r\n+                    }\r\n                   })();\r\n                 }}\r\n-                >\r\n+              >\r\n                 Request Booking\r\n               </button>\r\n-\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                }
            ],
            "date": 1750492885976,
            "name": "Commit-0",
            "content": "// Page: Search\r\nimport React from 'react';\r\n\r\nconst Search = () => {\r\n  return (\r\n    <div>\r\n      <h2>Search Babysitters</h2>\r\n      <p>Use filters to find the right babysitter for your needs.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"
        }
    ]
}