{
    "sourceFile": "trustasitter-frontend/src/pages/ProfileClient.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1751209680178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751209998906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,26 @@\n             placeholder=\"Phone Number\"\r\n             className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n           />\r\n \r\n+          {/* Region */}\r\n+          <select className=\"w-full px-4 py-2 border rounded focus:outline-none\">\r\n+            <option value=\"\">Select Region</option>\r\n+            <option value=\"Central\">Central</option>\r\n+            <option value=\"East\">East</option>\r\n+            <option value=\"West\">West</option>\r\n+            <option value=\"North\">North</option>\r\n+            <option value=\"South\">South</option>\r\n+          </select>\r\n+\r\n+          {/* Number of Children */}\r\n+          <input\r\n+            type=\"number\"\r\n+            min=\"1\"\r\n+            placeholder=\"Number of Children\"\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+          />\r\n+\r\n           {/* Change Password */}\r\n           <div className=\"border-t pt-4 mt-4\">\r\n             <h2 className=\"text-lg font-semibold mb-2\">Change Password</h2>\r\n             <input\r\n"
                },
                {
                    "date": 1751247852290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,101 +1,163 @@\n-// src/pages/ProfileClient.jsx\r\n import React, { useState, useContext } from \"react\";\r\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n import { useNavigate } from \"react-router-dom\";\r\n-import axios from \"axios\";\r\n+import { updateClientProfile, deleteClientAccount } from \"../services/api\";\r\n \r\n const ProfileClient = () => {\r\n+  const { user, token, logout } = useContext(AuthContext);\r\n+  const navigate = useNavigate();\r\n+\r\n+  const [formData, setFormData] = useState({\r\n+    name: user?.name || \"\",\r\n+    email: user?.email || \"\",\r\n+    phone: \"\",\r\n+    region: \"\",\r\n+    children: \"\",\r\n+    currentPassword: \"\",\r\n+    newPassword: \"\",\r\n+    confirmPassword: \"\",\r\n+  });\r\n+\r\n   const [showSuccess, setShowSuccess] = useState(false);\r\n   const [showConfirm, setShowConfirm] = useState(false);\r\n-  const { token, logout } = useContext(AuthContext);\r\n-  const navigate = useNavigate();\r\n+  const [error, setError] = useState(\"\");\r\n \r\n-  // Handle profile update (mock for now)\r\n-  const handleSubmit = (e) => {\r\n+  const handleChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData((prev) => ({ ...prev, [name]: value }));\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n-    setShowSuccess(true);\r\n-    setTimeout(() => setShowSuccess(false), 3000);\r\n+    setError(\"\");\r\n+\r\n+    if (formData.newPassword && formData.newPassword !== formData.confirmPassword) {\r\n+      setError(\"New passwords do not match.\");\r\n+      return;\r\n+    }\r\n+\r\n+    const payload = {\r\n+      name: formData.name,\r\n+      email: formData.email,\r\n+      phone: formData.phone,\r\n+      region: formData.region,\r\n+      children: formData.children,\r\n+    };\r\n+\r\n+    if (formData.newPassword) {\r\n+      payload.password = formData.newPassword;\r\n+    }\r\n+\r\n+    try {\r\n+      await updateClientProfile(payload, token);\r\n+      setShowSuccess(true);\r\n+      setTimeout(() => setShowSuccess(false), 3000);\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError(\"Failed to update profile.\");\r\n+    }\r\n   };\r\n \r\n-  // Confirm account deletion\r\n   const confirmDelete = async () => {\r\n     try {\r\n-      await axios.delete(\"http://localhost:3000/api/users/profile\", {\r\n-        headers: {\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n+      await deleteClientAccount(token);\r\n       logout();\r\n       navigate(\"/\");\r\n-    } catch (error) {\r\n-      console.error(\"Error deleting account:\", error);\r\n-      alert(\"Failed to delete account. Please try again.\");\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      alert(\"Failed to delete account.\");\r\n     }\r\n   };\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n       <h1 className=\"text-3xl font-bold text-center mb-8\">Manage Your Profile</h1>\r\n \r\n-      <div className=\"max-w-xl mx-auto bg-white p-6 rounded-2xl shadow\">\r\n+      <div className=\"max-w-xl mx-auto bg-white p-6 rounded-xl shadow\">\r\n         {showSuccess && (\r\n           <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded text-center flex items-center justify-center gap-2\">\r\n             <FaCheckCircle />\r\n             <span>Profile updated successfully!</span>\r\n           </div>\r\n         )}\r\n+        {error && (\r\n+          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded text-center\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n \r\n         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n           <input\r\n+            name=\"name\"\r\n+            value={formData.name}\r\n+            onChange={handleChange}\r\n             type=\"text\"\r\n             placeholder=\"Full Name\"\r\n             className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n           />\r\n           <input\r\n+            name=\"email\"\r\n+            value={formData.email}\r\n+            onChange={handleChange}\r\n             type=\"email\"\r\n             placeholder=\"Email Address\"\r\n             className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n           />\r\n           <input\r\n+            name=\"phone\"\r\n+            value={formData.phone}\r\n+            onChange={handleChange}\r\n             type=\"text\"\r\n             placeholder=\"Phone Number\"\r\n             className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n           />\r\n-\r\n-          {/* Region */}\r\n-          <select className=\"w-full px-4 py-2 border rounded focus:outline-none\">\r\n+          <select\r\n+            name=\"region\"\r\n+            value={formData.region}\r\n+            onChange={handleChange}\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+          >\r\n             <option value=\"\">Select Region</option>\r\n             <option value=\"Central\">Central</option>\r\n             <option value=\"East\">East</option>\r\n             <option value=\"West\">West</option>\r\n             <option value=\"North\">North</option>\r\n             <option value=\"South\">South</option>\r\n           </select>\r\n-\r\n-          {/* Number of Children */}\r\n           <input\r\n+            name=\"children\"\r\n+            value={formData.children}\r\n+            onChange={handleChange}\r\n             type=\"number\"\r\n-            min=\"1\"\r\n             placeholder=\"Number of Children\"\r\n             className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n           />\r\n \r\n           {/* Change Password */}\r\n           <div className=\"border-t pt-4 mt-4\">\r\n             <h2 className=\"text-lg font-semibold mb-2\">Change Password</h2>\r\n             <input\r\n+              name=\"currentPassword\"\r\n+              value={formData.currentPassword}\r\n+              onChange={handleChange}\r\n               type=\"password\"\r\n               placeholder=\"Current Password\"\r\n               className=\"w-full mb-2 px-4 py-2 border rounded focus:outline-none\"\r\n             />\r\n             <input\r\n+              name=\"newPassword\"\r\n+              value={formData.newPassword}\r\n+              onChange={handleChange}\r\n               type=\"password\"\r\n               placeholder=\"New Password\"\r\n               className=\"w-full mb-2 px-4 py-2 border rounded focus:outline-none\"\r\n             />\r\n             <input\r\n+              name=\"confirmPassword\"\r\n+              value={formData.confirmPassword}\r\n+              onChange={handleChange}\r\n               type=\"password\"\r\n               placeholder=\"Confirm New Password\"\r\n               className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n             />\r\n@@ -106,9 +168,8 @@\n             className=\"w-full bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n           >\r\n             Save Changes\r\n           </button>\r\n-\r\n           <button\r\n             type=\"button\"\r\n             onClick={() => setShowConfirm(true)}\r\n             className=\"w-full bg-red-500 hover:bg-red-600 text-white py-2 rounded transition mt-2\"\r\n@@ -117,9 +178,8 @@\n           </button>\r\n         </form>\r\n       </div>\r\n \r\n-      {/* Confirmation Modal */}\r\n       {showConfirm && (\r\n         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n           <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md text-center\">\r\n             <h2 className=\"text-xl font-semibold mb-4\">Confirm Account Deletion</h2>\r\n"
                },
                {
                    "date": 1751278274439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { updateClientProfile, deleteClientAccount } from \"../services/api\";\r\n+import axios from \"axios\";\r\n \r\n const ProfileClient = () => {\r\n   const { user, token, logout } = useContext(AuthContext);\r\n   const navigate = useNavigate();\r\n@@ -31,28 +32,56 @@\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n     setError(\"\");\r\n \r\n-    if (formData.newPassword && formData.newPassword !== formData.confirmPassword) {\r\n-      setError(\"New passwords do not match.\");\r\n-      return;\r\n+    // Validate passwords\r\n+    if (formData.newPassword || formData.confirmPassword || formData.currentPassword) {\r\n+      if (!formData.currentPassword) {\r\n+        setError(\"Please enter your current password to change it.\");\r\n+        return;\r\n+      }\r\n+      if (!formData.newPassword || !formData.confirmPassword) {\r\n+        setError(\"Please fill in all password fields.\");\r\n+        return;\r\n+      }\r\n+      if (formData.newPassword !== formData.confirmPassword) {\r\n+        setError(\"New passwords do not match.\");\r\n+        return;\r\n+      }\r\n     }\r\n \r\n-    const payload = {\r\n-      name: formData.name,\r\n-      email: formData.email,\r\n-      phone: formData.phone,\r\n-      region: formData.region,\r\n-      children: formData.children,\r\n-    };\r\n+    try {\r\n+      // Update profile info\r\n+      const payload = {\r\n+        name: formData.name,\r\n+        email: formData.email,\r\n+        phone: formData.phone,\r\n+        region: formData.region,\r\n+        children: formData.children,\r\n+      };\r\n+      await updateClientProfile(payload, token);\r\n \r\n-    if (formData.newPassword) {\r\n-      payload.password = formData.newPassword;\r\n-    }\r\n+      // Update password if provided\r\n+      if (formData.newPassword) {\r\n+        await axios.put(\r\n+          \"http://localhost:3000/api/users/profile/password\",\r\n+          {\r\n+            currentPassword: formData.currentPassword,\r\n+            newPassword: formData.newPassword,\r\n+          },\r\n+          {\r\n+            headers: { Authorization: `Bearer ${token}` },\r\n+          }\r\n+        );\r\n+      }\r\n \r\n-    try {\r\n-      await updateClientProfile(payload, token);\r\n       setShowSuccess(true);\r\n+      setFormData((prev) => ({\r\n+        ...prev,\r\n+        currentPassword: \"\",\r\n+        newPassword: \"\",\r\n+        confirmPassword: \"\",\r\n+      }));\r\n       setTimeout(() => setShowSuccess(false), 3000);\r\n     } catch (err) {\r\n       console.error(err);\r\n       setError(\"Failed to update profile.\");\r\n"
                },
                {
                    "date": 1751279550636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,67 +29,71 @@\n     setFormData((prev) => ({ ...prev, [name]: value }));\r\n   };\r\n \r\n   const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    setError(\"\");\r\n+  e.preventDefault();\r\n+  setError(\"\");\r\n \r\n-    // Validate passwords\r\n-    if (formData.newPassword || formData.confirmPassword || formData.currentPassword) {\r\n-      if (!formData.currentPassword) {\r\n-        setError(\"Please enter your current password to change it.\");\r\n-        return;\r\n-      }\r\n-      if (!formData.newPassword || !formData.confirmPassword) {\r\n-        setError(\"Please fill in all password fields.\");\r\n-        return;\r\n-      }\r\n-      if (formData.newPassword !== formData.confirmPassword) {\r\n-        setError(\"New passwords do not match.\");\r\n-        return;\r\n-      }\r\n+  // Validate passwords\r\n+  if (formData.newPassword || formData.confirmPassword || formData.currentPassword) {\r\n+    if (!formData.currentPassword) {\r\n+      setError(\"Please enter your current password to change it.\");\r\n+      return;\r\n     }\r\n+    if (!formData.newPassword || !formData.confirmPassword) {\r\n+      setError(\"Please fill in all password fields.\");\r\n+      return;\r\n+    }\r\n+    if (formData.newPassword !== formData.confirmPassword) {\r\n+      setError(\"New passwords do not match.\");\r\n+      return;\r\n+    }\r\n+  }\r\n \r\n-    try {\r\n-      // Update profile info\r\n-      const payload = {\r\n-        name: formData.name,\r\n-        email: formData.email,\r\n-        phone: formData.phone,\r\n-        region: formData.region,\r\n-        children: formData.children,\r\n-      };\r\n-      await updateClientProfile(payload, token);\r\n+  try {\r\n+    // Update profile info\r\n+    const payload = {\r\n+      name: formData.name,\r\n+      email: formData.email,\r\n+      phone: formData.phone,\r\n+      region: formData.region,\r\n+      children: formData.children,\r\n+    };\r\n+    await updateClientProfile(payload, token);\r\n \r\n-      // Update password if provided\r\n-      if (formData.newPassword) {\r\n-        await axios.put(\r\n-          \"http://localhost:3000/api/users/profile/password\",\r\n-          {\r\n-            currentPassword: formData.currentPassword,\r\n-            newPassword: formData.newPassword,\r\n-          },\r\n-          {\r\n-            headers: { Authorization: `Bearer ${token}` },\r\n-          }\r\n-        );\r\n-      }\r\n+    // Update password if provided\r\n+    if (formData.newPassword) {\r\n+      await axios.put(\r\n+        \"http://localhost:3000/api/users/profile/password\",\r\n+        {\r\n+          currentPassword: formData.currentPassword,\r\n+          newPassword: formData.newPassword,\r\n+        },\r\n+        {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        }\r\n+      );\r\n+    }\r\n \r\n-      setShowSuccess(true);\r\n-      setFormData((prev) => ({\r\n-        ...prev,\r\n-        currentPassword: \"\",\r\n-        newPassword: \"\",\r\n-        confirmPassword: \"\",\r\n-      }));\r\n-      setTimeout(() => setShowSuccess(false), 3000);\r\n-    } catch (err) {\r\n-      console.error(err);\r\n+    setShowSuccess(true);\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      currentPassword: \"\",\r\n+      newPassword: \"\",\r\n+      confirmPassword: \"\",\r\n+    }));\r\n+    setTimeout(() => setShowSuccess(false), 3000);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    if (err.response && err.response.data && err.response.data.error) {\r\n+      setError(err.response.data.error);\r\n+    } else {\r\n       setError(\"Failed to update profile.\");\r\n     }\r\n-  };\r\n+  }\r\n+};\r\n \r\n-  const confirmDelete = async () => {\r\n+const confirmDelete = async () => {\r\n     try {\r\n       await deleteClientAccount(token);\r\n       logout();\r\n       navigate(\"/\");\r\n"
                }
            ],
            "date": 1751209680178,
            "name": "Commit-0",
            "content": "// src/pages/ProfileClient.jsx\r\nimport React, { useState, useContext } from \"react\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ProfileClient = () => {\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { token, logout } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle profile update (mock for now)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowSuccess(true);\r\n    setTimeout(() => setShowSuccess(false), 3000);\r\n  };\r\n\r\n  // Confirm account deletion\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await axios.delete(\"http://localhost:3000/api/users/profile\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      logout();\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting account:\", error);\r\n      alert(\"Failed to delete account. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-8\">Manage Your Profile</h1>\r\n\r\n      <div className=\"max-w-xl mx-auto bg-white p-6 rounded-2xl shadow\">\r\n        {showSuccess && (\r\n          <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded text-center flex items-center justify-center gap-2\">\r\n            <FaCheckCircle />\r\n            <span>Profile updated successfully!</span>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Phone Number\"\r\n            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n          />\r\n\r\n          {/* Change Password */}\r\n          <div className=\"border-t pt-4 mt-4\">\r\n            <h2 className=\"text-lg font-semibold mb-2\">Change Password</h2>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Current Password\"\r\n              className=\"w-full mb-2 px-4 py-2 border rounded focus:outline-none\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              className=\"w-full mb-2 px-4 py-2 border rounded focus:outline-none\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm New Password\"\r\n              className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n          >\r\n            Save Changes\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowConfirm(true)}\r\n            className=\"w-full bg-red-500 hover:bg-red-600 text-white py-2 rounded transition mt-2\"\r\n          >\r\n            Delete Account\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Confirmation Modal */}\r\n      {showConfirm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md text-center\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Confirm Account Deletion</h2>\r\n            <p className=\"mb-6\">\r\n              Are you sure you want to delete your account? This action cannot be undone.\r\n            </p>\r\n            <div className=\"flex justify-center gap-4\">\r\n              <button\r\n                onClick={() => setShowConfirm(false)}\r\n                className=\"px-4 py-2 rounded border border-gray-300 hover:bg-gray-100\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={confirmDelete}\r\n                className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\r\n              >\r\n                Yes, Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProfileClient;\r\n"
        }
    ]
}