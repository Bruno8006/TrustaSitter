{
    "sourceFile": "trustasitter-frontend/src/pages/HomeBabysitter.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1751116240896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751116257786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,5 +53,50 @@\n                   <p className=\"text-gray-600\">\r\n                     Time: {booking.time}\r\n                   </p>\r\n                   <p\r\n-                    cl\r\n+                    className={`mt-1 font-semibold ${\r\n+                      booking.status === \"Confirmed\"\r\n+                        ? \"text-green-600\"\r\n+                        : \"text-yellow-600\"\r\n+                    }`}\r\n+                  >\r\n+                    {booking.status}\r\n+                  </p>\r\n+                </div>\r\n+                {booking.status === \"Pending Approval\" && (\r\n+                  <button className=\"mt-3 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+                    Approve Booking\r\n+                  </button>\r\n+                )}\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+\r\n+      {/* Actions */}\r\n+      <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\r\n+        <Link\r\n+          to=\"/\"\r\n+          className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n+        >\r\n+          Back to Home\r\n+        </Link>\r\n+        <Link\r\n+          to=\"/profile\"\r\n+          className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded font-semibold transition\"\r\n+        >\r\n+          Manage Profile\r\n+        </Link>\r\n+        <Link\r\n+          to=\"/login\"\r\n+          className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-3 rounded font-semibold transition\"\r\n+        >\r\n+          Logout\r\n+        </Link>\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n+\r\n+export default HomeBabysitter;\r\n"
                },
                {
                    "date": 1751118056379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,102 +1,109 @@\n-// src/pages/HomeBabysitter.jsx\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n+// src/pages/RegisterBabysitter.jsx\r\n+import React from \"react\";\r\n+import { FaUser } from \"react-icons/fa\";\r\n \r\n-const HomeBabysitter = () => {\r\n-  // Mock data to simulate upcoming bookings\r\n-  const [bookings] = useState([\r\n-    {\r\n-      id: 1,\r\n-      parentName: \"Sarah Johnson\",\r\n-      date: \"2024-07-12\",\r\n-      time: \"09:00 AM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      parentName: \"Michael Brown\",\r\n-      date: \"2024-07-15\",\r\n-      time: \"02:00 PM\",\r\n-      status: \"Pending Approval\",\r\n-    },\r\n-  ]);\r\n-\r\n+const RegisterBabysitter = () => {\r\n   return (\r\n-    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Welcome message */}\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n-      </h1>\r\n+    <div className=\"flex items-start justify-center min-h-screen bg-gradient-to-b from-purple-100 via-white to-purple-100 px-4 pt-20\">\r\n+      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+        <div className=\"flex flex-col items-center mb-6\">\r\n+          <FaUser className=\"text-purple-600 text-4xl mb-2\" />\r\n+          <h2 className=\"text-2xl font-bold text-gray-800\">Babysitter Registration</h2>\r\n+          <p className=\"text-sm text-gray-500 text-center mt-1\">\r\n+            Fill in your details to join our platform as a trusted babysitter.\r\n+          </p>\r\n+        </div>\r\n \r\n-      {/* Bookings section */}\r\n-      <section className=\"max-w-4xl mx-auto mb-12\">\r\n-        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n-          Your Upcoming Bookings\r\n-        </h2>\r\n+        <form className=\"space-y-4\">\r\n+          <input\r\n+            type=\"text\"\r\n+            placeholder=\"Full Name\"\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+          />\r\n+          <input\r\n+            type=\"email\"\r\n+            placeholder=\"Email Address\"\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+          />\r\n+          <input\r\n+            type=\"text\"\r\n+            placeholder=\"Phone Number\"\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+          />\r\n+          <select className=\"w-full px-4 py-2 border rounded focus:outline-none\">\r\n+            <option value=\"\">Select Region</option>\r\n+            <option value=\"Central\">Central</option>\r\n+            <option value=\"East\">East</option>\r\n+            <option value=\"West\">West</option>\r\n+            <option value=\"North\">North</option>\r\n+            <option value=\"South\">South</option>\r\n+          </select>\r\n+          <input\r\n+            type=\"text\"\r\n+            placeholder=\"Hourly Rate ($)\"\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+          />\r\n \r\n-        {bookings.length === 0 ? (\r\n-          <p className=\"text-gray-600\">You have no upcoming bookings.</p>\r\n-        ) : (\r\n-          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-            {bookings.map((booking) => (\r\n-              <div\r\n-                key={booking.id}\r\n-                className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n-              >\r\n-                <div>\r\n-                  <p className=\"text-gray-800 font-medium\">\r\n-                    Parent: {booking.parentName}\r\n-                  </p>\r\n-                  <p className=\"text-gray-600\">\r\n-                    Date: {booking.date}\r\n-                  </p>\r\n-                  <p className=\"text-gray-600\">\r\n-                    Time: {booking.time}\r\n-                  </p>\r\n-                  <p\r\n-                    className={`mt-1 font-semibold ${\r\n-                      booking.status === \"Confirmed\"\r\n-                        ? \"text-green-600\"\r\n-                        : \"text-yellow-600\"\r\n-                    }`}\r\n-                  >\r\n-                    {booking.status}\r\n-                  </p>\r\n-                </div>\r\n-                {booking.status === \"Pending Approval\" && (\r\n-                  <button className=\"mt-3 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n-                    Approve Booking\r\n-                  </button>\r\n-                )}\r\n-              </div>\r\n-            ))}\r\n+          {/* Available Days */}\r\n+          <div>\r\n+            <label className=\"block mb-1 text-gray-700 font-medium\">\r\n+              Available Days\r\n+            </label>\r\n+            <div className=\"grid grid-cols-2 gap-2\">\r\n+              {[\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"].map((day) => (\r\n+                <label key={day} className=\"flex items-center gap-2\">\r\n+                  <input type=\"checkbox\" />\r\n+                  <span>{day}</span>\r\n+                </label>\r\n+              ))}\r\n+            </div>\r\n           </div>\r\n-        )}\r\n-      </section>\r\n \r\n-      {/* Actions */}\r\n-      <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\r\n-        <Link\r\n-          to=\"/\"\r\n-          className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n-        >\r\n-          Back to Home\r\n-        </Link>\r\n-        <Link\r\n-          to=\"/profile\"\r\n-          className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded font-semibold transition\"\r\n-        >\r\n-          Manage Profile\r\n-        </Link>\r\n-        <Link\r\n-          to=\"/login\"\r\n-          className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-3 rounded font-semibold transition\"\r\n-        >\r\n-          Logout\r\n-        </Link>\r\n+          {/* Available Hours */}\r\n+          <div className=\"flex gap-4\">\r\n+            <div className=\"w-1/2\">\r\n+              <label className=\"block mb-1 text-gray-700 font-medium\">Available From</label>\r\n+              <input type=\"time\" className=\"w-full px-3 py-2 border rounded focus:outline-none\" />\r\n+            </div>\r\n+            <div className=\"w-1/2\">\r\n+              <label className=\"block mb-1 text-gray-700 font-medium\">Available To</label>\r\n+              <input type=\"time\" className=\"w-full px-3 py-2 border rounded focus:outline-none\" />\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* About Me */}\r\n+          <textarea\r\n+            placeholder=\"About Me\"\r\n+            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n+            rows=\"3\"\r\n+          />\r\n+\r\n+          {/* Upload Profile Picture */}\r\n+          <div>\r\n+            <label className=\"block mb-1 text-gray-700 font-medium\">\r\n+              Upload Profile Picture\r\n+            </label>\r\n+            <input type=\"file\" className=\"w-full\" />\r\n+          </div>\r\n+\r\n+          {/* Upload Certificates */}\r\n+          <div>\r\n+            <label className=\"block mb-1 text-gray-700 font-medium\">\r\n+              Upload Certificates\r\n+            </label>\r\n+            <input type=\"file\" className=\"w-full\" multiple />\r\n+          </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            className=\"w-full bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n+          >\r\n+            Register\r\n+          </button>\r\n+        </form>\r\n       </div>\r\n-    </main>\r\n+    </div>\r\n   );\r\n };\r\n \r\n-export default HomeBabysitter;\r\n+export default RegisterBabysitter;\r\n"
                },
                {
                    "date": 1751118106562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,109 +1,102 @@\n-// src/pages/RegisterBabysitter.jsx\r\n-import React from \"react\";\r\n-import { FaUser } from \"react-icons/fa\";\r\n+// src/pages/HomeBabysitter.jsx\r\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n \r\n-const RegisterBabysitter = () => {\r\n+const HomeBabysitter = () => {\r\n+  // Mock data to simulate upcoming bookings\r\n+  const [bookings] = useState([\r\n+    {\r\n+      id: 1,\r\n+      parentName: \"Sarah Johnson\",\r\n+      date: \"2024-07-12\",\r\n+      time: \"09:00 AM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      parentName: \"Michael Brown\",\r\n+      date: \"2024-07-15\",\r\n+      time: \"02:00 PM\",\r\n+      status: \"Pending Approval\",\r\n+    },\r\n+  ]);\r\n+\r\n   return (\r\n-    <div className=\"flex items-start justify-center min-h-screen bg-gradient-to-b from-purple-100 via-white to-purple-100 px-4 pt-20\">\r\n-      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-        <div className=\"flex flex-col items-center mb-6\">\r\n-          <FaUser className=\"text-purple-600 text-4xl mb-2\" />\r\n-          <h2 className=\"text-2xl font-bold text-gray-800\">Babysitter Registration</h2>\r\n-          <p className=\"text-sm text-gray-500 text-center mt-1\">\r\n-            Fill in your details to join our platform as a trusted babysitter.\r\n-          </p>\r\n-        </div>\r\n+    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Welcome message */}\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n+      </h1>\r\n \r\n-        <form className=\"space-y-4\">\r\n-          <input\r\n-            type=\"text\"\r\n-            placeholder=\"Full Name\"\r\n-            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n-          />\r\n-          <input\r\n-            type=\"email\"\r\n-            placeholder=\"Email Address\"\r\n-            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n-          />\r\n-          <input\r\n-            type=\"text\"\r\n-            placeholder=\"Phone Number\"\r\n-            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n-          />\r\n-          <select className=\"w-full px-4 py-2 border rounded focus:outline-none\">\r\n-            <option value=\"\">Select Region</option>\r\n-            <option value=\"Central\">Central</option>\r\n-            <option value=\"East\">East</option>\r\n-            <option value=\"West\">West</option>\r\n-            <option value=\"North\">North</option>\r\n-            <option value=\"South\">South</option>\r\n-          </select>\r\n-          <input\r\n-            type=\"text\"\r\n-            placeholder=\"Hourly Rate ($)\"\r\n-            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n-          />\r\n+      {/* Bookings section */}\r\n+      <section className=\"max-w-4xl mx-auto mb-12\">\r\n+        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n+          Your Upcoming Bookings\r\n+        </h2>\r\n \r\n-          {/* Available Days */}\r\n-          <div>\r\n-            <label className=\"block mb-1 text-gray-700 font-medium\">\r\n-              Available Days\r\n-            </label>\r\n-            <div className=\"grid grid-cols-2 gap-2\">\r\n-              {[\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"].map((day) => (\r\n-                <label key={day} className=\"flex items-center gap-2\">\r\n-                  <input type=\"checkbox\" />\r\n-                  <span>{day}</span>\r\n-                </label>\r\n-              ))}\r\n-            </div>\r\n+        {bookings.length === 0 ? (\r\n+          <p className=\"text-gray-600\">You have no upcoming bookings.</p>\r\n+        ) : (\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+            {bookings.map((booking) => (\r\n+              <div\r\n+                key={booking.id}\r\n+                className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+              >\r\n+                <div>\r\n+                  <p className=\"text-gray-800 font-medium\">\r\n+                    Parent: {booking.parentName}\r\n+                  </p>\r\n+                  <p className=\"text-gray-600\">\r\n+                    Date: {booking.date}\r\n+                  </p>\r\n+                  <p className=\"text-gray-600\">\r\n+                    Time: {booking.time}\r\n+                  </p>\r\n+                  <p\r\n+                    className={`mt-1 font-semibold ${\r\n+                      booking.status === \"Confirmed\"\r\n+                        ? \"text-green-600\"\r\n+                        : \"text-yellow-600\"\r\n+                    }`}\r\n+                  >\r\n+                    {booking.status}\r\n+                  </p>\r\n+                </div>\r\n+                {booking.status === \"Pending Approval\" && (\r\n+                  <button className=\"mt-3 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n+                    Approve Booking\r\n+                  </button>\r\n+                )}\r\n+              </div>\r\n+            ))}\r\n           </div>\r\n+        )}\r\n+      </section>\r\n \r\n-          {/* Available Hours */}\r\n-          <div className=\"flex gap-4\">\r\n-            <div className=\"w-1/2\">\r\n-              <label className=\"block mb-1 text-gray-700 font-medium\">Available From</label>\r\n-              <input type=\"time\" className=\"w-full px-3 py-2 border rounded focus:outline-none\" />\r\n-            </div>\r\n-            <div className=\"w-1/2\">\r\n-              <label className=\"block mb-1 text-gray-700 font-medium\">Available To</label>\r\n-              <input type=\"time\" className=\"w-full px-3 py-2 border rounded focus:outline-none\" />\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* About Me */}\r\n-          <textarea\r\n-            placeholder=\"About Me\"\r\n-            className=\"w-full px-4 py-2 border rounded focus:outline-none\"\r\n-            rows=\"3\"\r\n-          />\r\n-\r\n-          {/* Upload Profile Picture */}\r\n-          <div>\r\n-            <label className=\"block mb-1 text-gray-700 font-medium\">\r\n-              Upload Profile Picture\r\n-            </label>\r\n-            <input type=\"file\" className=\"w-full\" />\r\n-          </div>\r\n-\r\n-          {/* Upload Certificates */}\r\n-          <div>\r\n-            <label className=\"block mb-1 text-gray-700 font-medium\">\r\n-              Upload Certificates\r\n-            </label>\r\n-            <input type=\"file\" className=\"w-full\" multiple />\r\n-          </div>\r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            className=\"w-full bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\"\r\n-          >\r\n-            Register\r\n-          </button>\r\n-        </form>\r\n+      {/* Actions */}\r\n+      <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\r\n+        <Link\r\n+          to=\"/\"\r\n+          className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n+        >\r\n+          Back to Home\r\n+        </Link>\r\n+        <Link\r\n+          to=\"/profile\"\r\n+          className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded font-semibold transition\"\r\n+        >\r\n+          Manage Profile\r\n+        </Link>\r\n+        <Link\r\n+          to=\"/login\"\r\n+          className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-3 rounded font-semibold transition\"\r\n+        >\r\n+          Logout\r\n+        </Link>\r\n       </div>\r\n-    </div>\r\n+    </main>\r\n   );\r\n };\r\n \r\n-export default RegisterBabysitter;\r\n+export default HomeBabysitter;\r\n"
                },
                {
                    "date": 1751353725686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,79 +1,135 @@\n // src/pages/HomeBabysitter.jsx\r\n-import React, { useState } from \"react\";\r\n+import React, { useEffect, useState, useContext } from \"react\";\r\n import { Link } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n \r\n const HomeBabysitter = () => {\r\n-  // Mock data to simulate upcoming bookings\r\n-  const [bookings] = useState([\r\n-    {\r\n-      id: 1,\r\n-      parentName: \"Sarah Johnson\",\r\n-      date: \"2024-07-12\",\r\n-      time: \"09:00 AM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      parentName: \"Michael Brown\",\r\n-      date: \"2024-07-15\",\r\n-      time: \"02:00 PM\",\r\n-      status: \"Pending Approval\",\r\n-    },\r\n-  ]);\r\n+  const { token, user } = useContext(AuthContext);\r\n \r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [successMessage, setSuccessMessage] = useState(\"\");\r\n+\r\n+  // Fetch bookings on mount\r\n+  useEffect(() => {\r\n+    const fetchBookings = async () => {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n+          {\r\n+            headers: { Authorization: `Bearer ${token}` },\r\n+          }\r\n+        );\r\n+        setBookings(response.data);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        setError(\"Failed to load bookings.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBookings();\r\n+  }, [token, user]);\r\n+\r\n+  // Function to approve or reject a booking\r\n+  const handleUpdateStatus = async (bookingId, newStatus) => {\r\n+    try {\r\n+      await axios.put(\r\n+        `http://localhost:3000/api/bookings/${bookingId}/status`,\r\n+        { status: newStatus },\r\n+        { headers: { Authorization: `Bearer ${token}` } }\r\n+      );\r\n+\r\n+      setBookings((prev) =>\r\n+        prev.map((b) =>\r\n+          b.id === bookingId ? { ...b, status: newStatus } : b\r\n+        )\r\n+      );\r\n+      setSuccessMessage(`Booking ${newStatus} successfully.`);\r\n+      setTimeout(() => setSuccessMessage(\"\"), 3000);\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError(\"Failed to update booking status.\");\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Welcome message */}\r\n       <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n         Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n       </h1>\r\n \r\n-      {/* Bookings section */}\r\n-      <section className=\"max-w-4xl mx-auto mb-12\">\r\n-        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n-          Your Upcoming Bookings\r\n-        </h2>\r\n-\r\n-        {bookings.length === 0 ? (\r\n-          <p className=\"text-gray-600\">You have no upcoming bookings.</p>\r\n-        ) : (\r\n-          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-            {bookings.map((booking) => (\r\n-              <div\r\n-                key={booking.id}\r\n-                className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n-              >\r\n-                <div>\r\n-                  <p className=\"text-gray-800 font-medium\">\r\n-                    Parent: {booking.parentName}\r\n-                  </p>\r\n-                  <p className=\"text-gray-600\">\r\n-                    Date: {booking.date}\r\n-                  </p>\r\n-                  <p className=\"text-gray-600\">\r\n-                    Time: {booking.time}\r\n-                  </p>\r\n-                  <p\r\n-                    className={`mt-1 font-semibold ${\r\n-                      booking.status === \"Confirmed\"\r\n-                        ? \"text-green-600\"\r\n-                        : \"text-yellow-600\"\r\n-                    }`}\r\n-                  >\r\n-                    {booking.status}\r\n-                  </p>\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : (\r\n+        <section className=\"max-w-4xl mx-auto mb-12\">\r\n+          {successMessage && (\r\n+            <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n+              {successMessage}\r\n+            </div>\r\n+          )}\r\n+          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n+            Your Upcoming Bookings\r\n+          </h2>\r\n+          {bookings.length === 0 ? (\r\n+            <p className=\"text-gray-600\">You have no upcoming bookings.</p>\r\n+          ) : (\r\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+              {bookings.map((booking) => (\r\n+                <div\r\n+                  key={booking.id}\r\n+                  className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+                >\r\n+                  <div>\r\n+                    <p className=\"text-gray-800 font-medium\">\r\n+                      Parent: {booking.parent_name || \"Unknown\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Date: {new Date(booking.date).toLocaleDateString()}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Time: {booking.time_start} - {booking.time_end}\r\n+                    </p>\r\n+                    <p\r\n+                      className={`mt-1 font-semibold ${\r\n+                        booking.status === \"confirmed\"\r\n+                          ? \"text-green-600\"\r\n+                          : booking.status === \"cancelled\"\r\n+                          ? \"text-red-600\"\r\n+                          : \"text-yellow-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {booking.status}\r\n+                    </p>\r\n+                  </div>\r\n+                  {booking.status === \"pending\" && (\r\n+                    <div className=\"flex gap-2 mt-3\">\r\n+                      <button\r\n+                        onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n+                        className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n+                      >\r\n+                        Approve\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n+                        className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+                      >\r\n+                        Reject\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n                 </div>\r\n-                {booking.status === \"Pending Approval\" && (\r\n-                  <button className=\"mt-3 bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition\">\r\n-                    Approve Booking\r\n-                  </button>\r\n-                )}\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n+              ))}\r\n+            </div>\r\n+          )}\r\n+        </section>\r\n+      )}\r\n \r\n       {/* Actions */}\r\n       <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\r\n         <Link\r\n"
                },
                {
                    "date": 1751354944088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,10 +92,22 @@\n                     <p className=\"text-gray-600\">\r\n                       Date: {new Date(booking.date).toLocaleDateString()}\r\n                     </p>\r\n                     <p className=\"text-gray-600\">\r\n-                      Time: {booking.time_start} - {booking.time_end}\r\n+                      Time:{\" \"}\r\n+                      {new Date(`1970-01-01T${booking.time_start}`).toLocaleTimeString([], {\r\n+                        hour: \"numeric\",\r\n+                        minute: \"2-digit\",\r\n+                        hour12: true,\r\n+                      })}{\" \"}\r\n+                      -{\" \"}\r\n+                      {new Date(`1970-01-01T${booking.time_end}`).toLocaleTimeString([], {\r\n+                        hour: \"numeric\",\r\n+                        minute: \"2-digit\",\r\n+                        hour12: true,\r\n+                      })}\r\n                     </p>\r\n+\r\n                     <p\r\n                       className={`mt-1 font-semibold ${\r\n                         booking.status === \"confirmed\"\r\n                           ? \"text-green-600\"\r\n"
                },
                {
                    "date": 1751365766858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import React, { useEffect, useState, useContext } from \"react\";\r\n import { Link } from \"react-router-dom\";\r\n import axios from \"axios\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n+import { FaCalendarAlt } from \"react-icons/fa\"; // Icon for empty state\r\n \r\n const HomeBabysitter = () => {\r\n   const { token, user } = useContext(AuthContext);\r\n \r\n@@ -11,9 +12,9 @@\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(\"\");\r\n   const [successMessage, setSuccessMessage] = useState(\"\");\r\n \r\n-  // Fetch bookings on mount\r\n+  // Fetch bookings when component mounts\r\n   useEffect(() => {\r\n     const fetchBookings = async () => {\r\n       try {\r\n         const response = await axios.get(\r\n@@ -57,28 +58,43 @@\n   };\r\n \r\n   return (\r\n     <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Title */}\r\n       <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n         Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n       </h1>\r\n \r\n+      {/* Loading or error */}\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n       ) : error ? (\r\n         <p className=\"text-center text-red-500\">{error}</p>\r\n       ) : (\r\n         <section className=\"max-w-4xl mx-auto mb-12\">\r\n+          {/* Success message */}\r\n           {successMessage && (\r\n             <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n               {successMessage}\r\n             </div>\r\n           )}\r\n           <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n             Your Upcoming Bookings\r\n           </h2>\r\n+\r\n+          {/* If no bookings */}\r\n           {bookings.length === 0 ? (\r\n-            <p className=\"text-gray-600\">You have no upcoming bookings.</p>\r\n+            <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n+              <FaCalendarAlt className=\"text-5xl mb-3 text-purple-400\" />\r\n+              <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n+              <p className=\"mb-4\">Once a parent books you, it will appear here.</p>\r\n+              <Link\r\n+                to=\"/\"\r\n+                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition\"\r\n+              >\r\n+                Back to Home\r\n+              </Link>\r\n+            </div>\r\n           ) : (\r\n             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n               {bookings.map((booking) => (\r\n                 <div\r\n@@ -92,22 +108,10 @@\n                     <p className=\"text-gray-600\">\r\n                       Date: {new Date(booking.date).toLocaleDateString()}\r\n                     </p>\r\n                     <p className=\"text-gray-600\">\r\n-                      Time:{\" \"}\r\n-                      {new Date(`1970-01-01T${booking.time_start}`).toLocaleTimeString([], {\r\n-                        hour: \"numeric\",\r\n-                        minute: \"2-digit\",\r\n-                        hour12: true,\r\n-                      })}{\" \"}\r\n-                      -{\" \"}\r\n-                      {new Date(`1970-01-01T${booking.time_end}`).toLocaleTimeString([], {\r\n-                        hour: \"numeric\",\r\n-                        minute: \"2-digit\",\r\n-                        hour12: true,\r\n-                      })}\r\n+                      Time: {booking.time_start} - {booking.time_end}\r\n                     </p>\r\n-\r\n                     <p\r\n                       className={`mt-1 font-semibold ${\r\n                         booking.status === \"confirmed\"\r\n                           ? \"text-green-600\"\r\n@@ -141,9 +145,9 @@\n           )}\r\n         </section>\r\n       )}\r\n \r\n-      {/* Actions */}\r\n+      {/* Action buttons */}\r\n       <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\r\n         <Link\r\n           to=\"/\"\r\n           className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n"
                },
                {
                    "date": 1751366396167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,118 +57,119 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Title */}\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n-      </h1>\r\n+    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n+  {/* Title */}\r\n+  <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+    Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n+  </h1>\r\n \r\n-      {/* Loading or error */}\r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n+  {loading ? (\r\n+    <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n+  ) : error ? (\r\n+    <p className=\"text-center text-red-500\">{error}</p>\r\n+  ) : (\r\n+    <section className=\"w-full max-w-4xl mb-12\">\r\n+      {/* Success message */}\r\n+      {successMessage && (\r\n+        <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n+          {successMessage}\r\n+        </div>\r\n+      )}\r\n+\r\n+      <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n+        Your Upcoming Bookings\r\n+      </h2>\r\n+\r\n+      {/* If no bookings */}\r\n+      {bookings.length === 0 ? (\r\n+        <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n+          <FaCalendarAlt className=\"text-5xl mb-3 text-purple-400\" />\r\n+          <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n+          <p className=\"mb-6\">Once a parent books you, it will appear here.</p>\r\n+          <Link\r\n+            to=\"/\"\r\n+            className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition\"\r\n+          >\r\n+            Back to Home\r\n+          </Link>\r\n+        </div>\r\n       ) : (\r\n-        <section className=\"max-w-4xl mx-auto mb-12\">\r\n-          {/* Success message */}\r\n-          {successMessage && (\r\n-            <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n-              {successMessage}\r\n-            </div>\r\n-          )}\r\n-          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n-            Your Upcoming Bookings\r\n-          </h2>\r\n-\r\n-          {/* If no bookings */}\r\n-          {bookings.length === 0 ? (\r\n-            <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n-              <FaCalendarAlt className=\"text-5xl mb-3 text-purple-400\" />\r\n-              <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n-              <p className=\"mb-4\">Once a parent books you, it will appear here.</p>\r\n-              <Link\r\n-                to=\"/\"\r\n-                className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition\"\r\n-              >\r\n-                Back to Home\r\n-              </Link>\r\n-            </div>\r\n-          ) : (\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-              {bookings.map((booking) => (\r\n-                <div\r\n-                  key={booking.id}\r\n-                  className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+          {bookings.map((booking) => (\r\n+            <div\r\n+              key={booking.id}\r\n+              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+            >\r\n+              <div>\r\n+                <p className=\"text-gray-800 font-medium\">\r\n+                  Parent: {booking.parent_name || \"Unknown\"}\r\n+                </p>\r\n+                <p className=\"text-gray-600\">\r\n+                  Date: {new Date(booking.date).toLocaleDateString()}\r\n+                </p>\r\n+                <p className=\"text-gray-600\">\r\n+                  Time: {booking.time_start} - {booking.time_end}\r\n+                </p>\r\n+                <p\r\n+                  className={`mt-1 font-semibold ${\r\n+                    booking.status === \"confirmed\"\r\n+                      ? \"text-green-600\"\r\n+                      : booking.status === \"cancelled\"\r\n+                      ? \"text-red-600\"\r\n+                      : \"text-yellow-600\"\r\n+                  }`}\r\n                 >\r\n-                  <div>\r\n-                    <p className=\"text-gray-800 font-medium\">\r\n-                      Parent: {booking.parent_name || \"Unknown\"}\r\n-                    </p>\r\n-                    <p className=\"text-gray-600\">\r\n-                      Date: {new Date(booking.date).toLocaleDateString()}\r\n-                    </p>\r\n-                    <p className=\"text-gray-600\">\r\n-                      Time: {booking.time_start} - {booking.time_end}\r\n-                    </p>\r\n-                    <p\r\n-                      className={`mt-1 font-semibold ${\r\n-                        booking.status === \"confirmed\"\r\n-                          ? \"text-green-600\"\r\n-                          : booking.status === \"cancelled\"\r\n-                          ? \"text-red-600\"\r\n-                          : \"text-yellow-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {booking.status}\r\n-                    </p>\r\n-                  </div>\r\n-                  {booking.status === \"pending\" && (\r\n-                    <div className=\"flex gap-2 mt-3\">\r\n-                      <button\r\n-                        onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n-                        className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n-                      >\r\n-                        Approve\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n-                        className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-                      >\r\n-                        Reject\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n+                  {booking.status}\r\n+                </p>\r\n+              </div>\r\n+              {booking.status === \"pending\" && (\r\n+                <div className=\"flex gap-2 mt-3\">\r\n+                  <button\r\n+                    onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n+                    className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n+                  >\r\n+                    Approve\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n+                    className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+                  >\r\n+                    Reject\r\n+                  </button>\r\n                 </div>\r\n-              ))}\r\n+              )}\r\n             </div>\r\n-          )}\r\n-        </section>\r\n+          ))}\r\n+        </div>\r\n       )}\r\n+    </section>\r\n+  )}\r\n \r\n-      {/* Action buttons */}\r\n-      <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\r\n-        <Link\r\n-          to=\"/\"\r\n-          className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n-        >\r\n-          Back to Home\r\n-        </Link>\r\n-        <Link\r\n-          to=\"/profile\"\r\n-          className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded font-semibold transition\"\r\n-        >\r\n-          Manage Profile\r\n-        </Link>\r\n-        <Link\r\n-          to=\"/login\"\r\n-          className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-3 rounded font-semibold transition\"\r\n-        >\r\n-          Logout\r\n-        </Link>\r\n-      </div>\r\n-    </main>\r\n+  {/* Action buttons */}\r\n+  <div className=\"flex flex-col sm:flex-row justify-center gap-4 mt-4\">\r\n+    <Link\r\n+      to=\"/\"\r\n+      className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n+    >\r\n+      Back to Home\r\n+    </Link>\r\n+    <Link\r\n+      to=\"/profile\"\r\n+      className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded font-semibold transition\"\r\n+    >\r\n+      Manage Profile\r\n+    </Link>\r\n+    <Link\r\n+      to=\"/login\"\r\n+      className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-3 rounded font-semibold transition\"\r\n+    >\r\n+      Logout\r\n+    </Link>\r\n+  </div>\r\n+</main>\r\n+\r\n   );\r\n };\r\n \r\n export default HomeBabysitter;\r\n"
                },
                {
                    "date": 1751367158579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,119 +57,88 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n-  {/* Title */}\r\n-  <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-    Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n-  </h1>\r\n+        <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n+      {/* Welcome */}\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n+      </h1>\r\n \r\n-  {loading ? (\r\n-    <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n-  ) : error ? (\r\n-    <p className=\"text-center text-red-500\">{error}</p>\r\n-  ) : (\r\n-    <section className=\"w-full max-w-4xl mb-12\">\r\n-      {/* Success message */}\r\n-      {successMessage && (\r\n-        <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n-          {successMessage}\r\n-        </div>\r\n-      )}\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : (\r\n+        <section className=\"w-full max-w-4xl mb-12\">\r\n+          {successMessage && (\r\n+            <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n+              {successMessage}\r\n+            </div>\r\n+          )}\r\n \r\n-      <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n-        Your Upcoming Bookings\r\n-      </h2>\r\n+          <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n+            Your Upcoming Bookings\r\n+          </h2>\r\n \r\n-      {/* If no bookings */}\r\n-      {bookings.length === 0 ? (\r\n-        <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n-          <FaCalendarAlt className=\"text-5xl mb-3 text-purple-400\" />\r\n-          <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n-          <p className=\"mb-6\">Once a parent books you, it will appear here.</p>\r\n-          <Link\r\n-            to=\"/\"\r\n-            className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition\"\r\n-          >\r\n-            Back to Home\r\n-          </Link>\r\n-        </div>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-          {bookings.map((booking) => (\r\n-            <div\r\n-              key={booking.id}\r\n-              className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n-            >\r\n-              <div>\r\n-                <p className=\"text-gray-800 font-medium\">\r\n-                  Parent: {booking.parent_name || \"Unknown\"}\r\n-                </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  Date: {new Date(booking.date).toLocaleDateString()}\r\n-                </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  Time: {booking.time_start} - {booking.time_end}\r\n-                </p>\r\n-                <p\r\n-                  className={`mt-1 font-semibold ${\r\n-                    booking.status === \"confirmed\"\r\n-                      ? \"text-green-600\"\r\n-                      : booking.status === \"cancelled\"\r\n-                      ? \"text-red-600\"\r\n-                      : \"text-yellow-600\"\r\n-                  }`}\r\n+          {bookings.length === 0 ? (\r\n+            <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n+              <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n+              <p className=\"\">Once a parent books you, it will appear here.</p>\r\n+            </div>\r\n+          ) : (\r\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+              {bookings.map((booking) => (\r\n+                <div\r\n+                  key={booking.id}\r\n+                  className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n                 >\r\n-                  {booking.status}\r\n-                </p>\r\n-              </div>\r\n-              {booking.status === \"pending\" && (\r\n-                <div className=\"flex gap-2 mt-3\">\r\n-                  <button\r\n-                    onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n-                    className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n-                  >\r\n-                    Approve\r\n-                  </button>\r\n-                  <button\r\n-                    onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n-                    className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-                  >\r\n-                    Reject\r\n-                  </button>\r\n+                  <div>\r\n+                    <p className=\"text-gray-800 font-medium\">\r\n+                      Parent: {booking.parent_name || \"Unknown\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Date: {new Date(booking.date).toLocaleDateString()}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Time: {booking.time_start} - {booking.time_end}\r\n+                    </p>\r\n+                    <p\r\n+                      className={`mt-1 font-semibold ${\r\n+                        booking.status === \"confirmed\"\r\n+                          ? \"text-green-600\"\r\n+                          : booking.status === \"cancelled\"\r\n+                          ? \"text-red-600\"\r\n+                          : \"text-yellow-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {booking.status}\r\n+                    </p>\r\n+                  </div>\r\n+                  {booking.status === \"pending\" && (\r\n+                    <div className=\"flex gap-2 mt-3\">\r\n+                      <button\r\n+                        onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n+                        className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n+                      >\r\n+                        Approve\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n+                        className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+                      >\r\n+                        Reject\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n                 </div>\r\n-              )}\r\n+              ))}\r\n             </div>\r\n-          ))}\r\n-        </div>\r\n+          )}\r\n+        </section>\r\n       )}\r\n-    </section>\r\n-  )}\r\n+    </main>\r\n \r\n-  {/* Action buttons */}\r\n-  <div className=\"flex flex-col sm:flex-row justify-center gap-4 mt-4\">\r\n-    <Link\r\n-      to=\"/\"\r\n-      className=\"bg-white text-purple-600 px-6 py-3 rounded font-semibold hover:bg-gray-100 transition\"\r\n-    >\r\n-      Back to Home\r\n-    </Link>\r\n-    <Link\r\n-      to=\"/profile\"\r\n-      className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded font-semibold transition\"\r\n-    >\r\n-      Manage Profile\r\n-    </Link>\r\n-    <Link\r\n-      to=\"/login\"\r\n-      className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-3 rounded font-semibold transition\"\r\n-    >\r\n-      Logout\r\n-    </Link>\r\n-  </div>\r\n-</main>\r\n-\r\n   );\r\n };\r\n \r\n export default HomeBabysitter;\r\n"
                },
                {
                    "date": 1751446411709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,29 +13,33 @@\n   const [error, setError] = useState(\"\");\r\n   const [successMessage, setSuccessMessage] = useState(\"\");\r\n \r\n   // Fetch bookings when component mounts\r\n-  useEffect(() => {\r\n-    const fetchBookings = async () => {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n-          {\r\n-            headers: { Authorization: `Bearer ${token}` },\r\n-          }\r\n-        );\r\n-        setBookings(response.data);\r\n-      } catch (err) {\r\n-        console.error(err);\r\n-        setError(\"Failed to load bookings.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n+    useEffect(() => {\r\n+  // Wait until user is loaded\r\n+  if (!user) return;\r\n \r\n-    fetchBookings();\r\n-  }, [token, user]);\r\n+  const fetchBookings = async () => {\r\n+    try {\r\n+      const response = await axios.get(\r\n+        `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n+        {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        }\r\n+      );\r\n+      setBookings(response.data);\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError(\"Failed to load bookings.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n \r\n+  fetchBookings();\r\n+}, [token, user]);\r\n+\r\n+\r\n   // Function to approve or reject a booking\r\n   const handleUpdateStatus = async (bookingId, newStatus) => {\r\n     try {\r\n       await axios.put(\r\n"
                },
                {
                    "date": 1751452945070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+// src/pages/HomeBabysitter.jsx\r\n+import React, { useEffect, useState, useContext } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import axios from \"axios\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n+import { FaCalendarAlt } from \"react-icons/fa\"; // Icon for empty state\r\n+\r\n+const HomeBabysitter = () => {\r\n+  const { token, user } = useContext(AuthContext);\r\n+\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [successMessage, setSuccessMessage] = useState(\"\");\r\n+\r\n+  // Fetch bookings when component mounts\r\n+    useEffect(() => {\r\n+  // Wait until user is loaded\r\n+  if (!user) return;\r\n+\r\n+  const fetchBookings = async () => {\r\n+    try {\r\n+      const response = await axios.get(\r\n+        `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n+        {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        }\r\n+      );\r\n+      setBookings(response.data);\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError(\"Failed to load bookings.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  fetchBookings();\r\n+}, [token, user]);\r\n+\r\n+\r\n+  // Function to approve or reject a booking\r\n+  const handleUpdateStatus = async (bookingId, newStatus) => {\r\n+    try {\r\n+      await axios.put(\r\n+        `http://localhost:3000/api/bookings/${bookingId}/status`,\r\n+        { status: newStatus },\r\n+        { headers: { Authorization: `Bearer ${token}` } }\r\n+      );\r\n+\r\n+      setBookings((prev) =>\r\n+        prev.map((b) =>\r\n+          b.id === bookingId ? { ...b, status: newStatus } : b\r\n+        )\r\n+      );\r\n+      setSuccessMessage(`Booking ${newStatus} successfully.`);\r\n+      setTimeout(() => setSuccessMessage(\"\"), 3000);\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError(\"Failed to update booking status.\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+        <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n+      {/* Welcome */}\r\n+      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n+        Welcome back,\r\n+        {user?.name && (\r\n+          <span className=\"text-purple-600\"> {user.name}!</span>\r\n+        )}\r\n+      </h1>\r\n+\r\n+\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n+      ) : error ? (\r\n+        <p className=\"text-center text-red-500\">{error}</p>\r\n+      ) : (\r\n+        <section className=\"w-full max-w-4xl mb-12\">\r\n+          {successMessage && (\r\n+            <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n+              {successMessage}\r\n+            </div>\r\n+          )}\r\n+\r\n+          <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n+            Your Upcoming Bookings\r\n+          </h2>\r\n+\r\n+          {bookings.length === 0 ? (\r\n+            <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n+              <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n+              <p className=\"\">Once a parent books you, it will appear here.</p>\r\n+            </div>\r\n+          ) : (\r\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+              {bookings.map((booking) => (\r\n+                <div\r\n+                  key={booking.id}\r\n+                  className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n+                >\r\n+                  <div>\r\n+                    <p className=\"text-gray-800 font-medium\">\r\n+                      Parent: {booking.parent_name || \"Unknown\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Date: {new Date(booking.date).toLocaleDateString()}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Time: {booking.time_start} - {booking.time_end}\r\n+                    </p>\r\n+                    <p\r\n+                      className={`mt-1 font-semibold ${\r\n+                        booking.status === \"confirmed\"\r\n+                          ? \"text-green-600\"\r\n+                          : booking.status === \"cancelled\"\r\n+                          ? \"text-red-600\"\r\n+                          : \"text-yellow-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {booking.status}\r\n+                    </p>\r\n+                  </div>\r\n+                  {booking.status === \"pending\" && (\r\n+                    <div className=\"flex gap-2 mt-3\">\r\n+                      <button\r\n+                        onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n+                        className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n+                      >\r\n+                        Approve\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n+                        className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+                      >\r\n+                        Reject\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          )}\r\n+        </section>\r\n+      )}\r\n+    </main>\r\n+\r\n+  );\r\n+};\r\n+\r\n+export default HomeBabysitter;\r\n"
                },
                {
                    "date": 1751554078917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n // src/pages/HomeBabysitter.jsx\r\n import React, { useEffect, useState, useContext } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n import axios from \"axios\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n-import { FaCalendarAlt } from \"react-icons/fa\"; // Icon for empty state\r\n \r\n const HomeBabysitter = () => {\r\n   const { token, user } = useContext(AuthContext);\r\n \r\n@@ -12,35 +10,33 @@\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(\"\");\r\n   const [successMessage, setSuccessMessage] = useState(\"\");\r\n \r\n-  // Fetch bookings when component mounts\r\n-    useEffect(() => {\r\n-  // Wait until user is loaded\r\n-  if (!user) return;\r\n+  // Fetch bookings\r\n+  useEffect(() => {\r\n+    if (!user) return;\r\n \r\n-  const fetchBookings = async () => {\r\n-    try {\r\n-      const response = await axios.get(\r\n-        `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n-        {\r\n-          headers: { Authorization: `Bearer ${token}` },\r\n-        }\r\n-      );\r\n-      setBookings(response.data);\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError(\"Failed to load bookings.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n+    const fetchBookings = async () => {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n+          {\r\n+            headers: { Authorization: `Bearer ${token}` },\r\n+          }\r\n+        );\r\n+        setBookings(response.data);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        setError(\"Failed to load bookings.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n \r\n-  fetchBookings();\r\n-}, [token, user]);\r\n+    fetchBookings();\r\n+  }, [token, user]);\r\n \r\n-\r\n-  // Function to approve or reject a booking\r\n+  // Update booking status\r\n   const handleUpdateStatus = async (bookingId, newStatus) => {\r\n     try {\r\n       await axios.put(\r\n         `http://localhost:3000/api/bookings/${bookingId}/status`,\r\n@@ -61,18 +57,16 @@\n     }\r\n   };\r\n \r\n   return (\r\n-        <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n-      {/* Welcome */}\r\n+    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n       <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n         Welcome back,\r\n         {user?.name && (\r\n           <span className=\"text-purple-600\"> {user.name}!</span>\r\n         )}\r\n       </h1>\r\n \r\n-\r\n       {loading ? (\r\n         <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n       ) : error ? (\r\n         <p className=\"text-center text-red-500\">{error}</p>\r\n@@ -84,15 +78,15 @@\n             </div>\r\n           )}\r\n \r\n           <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n-            Your Upcoming Bookings\r\n+            Your Bookings\r\n           </h2>\r\n \r\n           {bookings.length === 0 ? (\r\n-            <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n-              <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n-              <p className=\"\">Once a parent books you, it will appear here.</p>\r\n+            <div className=\"text-center text-gray-600\">\r\n+              <p>You don’t have any bookings yet.</p>\r\n+              <p>Once a parent books you, it will appear here.</p>\r\n             </div>\r\n           ) : (\r\n             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n               {bookings.map((booking) => (\r\n@@ -101,19 +95,24 @@\n                   className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n                 >\r\n                   <div>\r\n                     <p className=\"text-gray-800 font-medium\">\r\n-                      Parent: {booking.parent_name || \"Unknown\"}\r\n+                      Client: {booking.parent_name || \"Unknown\"}\r\n                     </p>\r\n+                    {booking.client_address && (\r\n+                      <p className=\"text-gray-600\">\r\n+                        Address: {booking.client_address}\r\n+                      </p>\r\n+                    )}\r\n                     <p className=\"text-gray-600\">\r\n                       Date: {new Date(booking.date).toLocaleDateString()}\r\n                     </p>\r\n                     <p className=\"text-gray-600\">\r\n                       Time: {booking.time_start} - {booking.time_end}\r\n                     </p>\r\n                     <p\r\n                       className={`mt-1 font-semibold ${\r\n-                        booking.status === \"confirmed\"\r\n+                        booking.status === \"approved\"\r\n                           ? \"text-green-600\"\r\n                           : booking.status === \"cancelled\"\r\n                           ? \"text-red-600\"\r\n                           : \"text-yellow-600\"\r\n@@ -121,169 +120,26 @@\n                     >\r\n                       {booking.status}\r\n                     </p>\r\n                   </div>\r\n-                  {booking.status === \"pending\" && (\r\n-                    <div className=\"flex gap-2 mt-3\">\r\n-                      <button\r\n-                        onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n-                        className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n-                      >\r\n-                        Approve\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n-                        className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-                      >\r\n-                        Reject\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          )}\r\n-        </section>\r\n-      )}\r\n-    </main>\r\n \r\n-  );\r\n-};\r\n-\r\n-export default HomeBabysitter;\r\n-// src/pages/HomeBabysitter.jsx\r\n-import React, { useEffect, useState, useContext } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import axios from \"axios\";\r\n-import { AuthContext } from \"../context/AuthContext\";\r\n-import { FaCalendarAlt } from \"react-icons/fa\"; // Icon for empty state\r\n-\r\n-const HomeBabysitter = () => {\r\n-  const { token, user } = useContext(AuthContext);\r\n-\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(\"\");\r\n-  const [successMessage, setSuccessMessage] = useState(\"\");\r\n-\r\n-  // Fetch bookings when component mounts\r\n-    useEffect(() => {\r\n-  // Wait until user is loaded\r\n-  if (!user) return;\r\n-\r\n-  const fetchBookings = async () => {\r\n-    try {\r\n-      const response = await axios.get(\r\n-        `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n-        {\r\n-          headers: { Authorization: `Bearer ${token}` },\r\n-        }\r\n-      );\r\n-      setBookings(response.data);\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError(\"Failed to load bookings.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  fetchBookings();\r\n-}, [token, user]);\r\n-\r\n-\r\n-  // Function to approve or reject a booking\r\n-  const handleUpdateStatus = async (bookingId, newStatus) => {\r\n-    try {\r\n-      await axios.put(\r\n-        `http://localhost:3000/api/bookings/${bookingId}/status`,\r\n-        { status: newStatus },\r\n-        { headers: { Authorization: `Bearer ${token}` } }\r\n-      );\r\n-\r\n-      setBookings((prev) =>\r\n-        prev.map((b) =>\r\n-          b.id === bookingId ? { ...b, status: newStatus } : b\r\n-        )\r\n-      );\r\n-      setSuccessMessage(`Booking ${newStatus} successfully.`);\r\n-      setTimeout(() => setSuccessMessage(\"\"), 3000);\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError(\"Failed to update booking status.\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-        <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n-      {/* Welcome */}\r\n-      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n-        Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n-      </h1>\r\n-\r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading bookings...</p>\r\n-      ) : error ? (\r\n-        <p className=\"text-center text-red-500\">{error}</p>\r\n-      ) : (\r\n-        <section className=\"w-full max-w-4xl mb-12\">\r\n-          {successMessage && (\r\n-            <div className=\"mb-4 bg-green-100 text-green-700 p-3 rounded text-center\">\r\n-              {successMessage}\r\n-            </div>\r\n-          )}\r\n-\r\n-          <h2 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\r\n-            Your Upcoming Bookings\r\n-          </h2>\r\n-\r\n-          {bookings.length === 0 ? (\r\n-            <div className=\"text-center text-gray-600 flex flex-col items-center\">\r\n-              <p className=\"mb-2\">You don’t have any bookings yet.</p>\r\n-              <p className=\"\">Once a parent books you, it will appear here.</p>\r\n-            </div>\r\n-          ) : (\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-              {bookings.map((booking) => (\r\n-                <div\r\n-                  key={booking.id}\r\n-                  className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n-                >\r\n-                  <div>\r\n-                    <p className=\"text-gray-800 font-medium\">\r\n-                      Parent: {booking.parent_name || \"Unknown\"}\r\n-                    </p>\r\n-                    <p className=\"text-gray-600\">\r\n-                      Date: {new Date(booking.date).toLocaleDateString()}\r\n-                    </p>\r\n-                    <p className=\"text-gray-600\">\r\n-                      Time: {booking.time_start} - {booking.time_end}\r\n-                    </p>\r\n-                    <p\r\n-                      className={`mt-1 font-semibold ${\r\n-                        booking.status === \"confirmed\"\r\n-                          ? \"text-green-600\"\r\n-                          : booking.status === \"cancelled\"\r\n-                          ? \"text-red-600\"\r\n-                          : \"text-yellow-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {booking.status}\r\n-                    </p>\r\n-                  </div>\r\n                   {booking.status === \"pending\" && (\r\n                     <div className=\"flex gap-2 mt-3\">\r\n                       <button\r\n-                        onClick={() => handleUpdateStatus(booking.id, \"confirmed\")}\r\n+                        onClick={() =>\r\n+                          handleUpdateStatus(booking.id, \"approved\")\r\n+                        }\r\n                         className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n                       >\r\n                         Approve\r\n                       </button>\r\n                       <button\r\n-                        onClick={() => handleUpdateStatus(booking.id, \"cancelled\")}\r\n+                        onClick={() =>\r\n+                          handleUpdateStatus(booking.id, \"cancelled\")\r\n+                        }\r\n                         className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n                       >\r\n-                        Reject\r\n+                        Cancel\r\n                       </button>\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n@@ -292,9 +148,8 @@\n           )}\r\n         </section>\r\n       )}\r\n     </main>\r\n-\r\n   );\r\n };\r\n \r\n export default HomeBabysitter;\r\n"
                },
                {
                    "date": 1751554639541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   // Update booking status\r\n   const handleUpdateStatus = async (bookingId, newStatus) => {\r\n     try {\r\n       await axios.put(\r\n-        `http://localhost:3000/api/bookings/${bookingId}/status`,\r\n+        `http://localhost:3000/api/babysitters/bookings/${bookingId}/status`,\r\n         { status: newStatus },\r\n         { headers: { Authorization: `Bearer ${token}` } }\r\n       );\r\n \r\n"
                },
                {
                    "date": 1751555501049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,14 +97,24 @@\n                   <div>\r\n                     <p className=\"text-gray-800 font-medium\">\r\n                       Client: {booking.parent_name || \"Unknown\"}\r\n                     </p>\r\n-                    {booking.client_address && (\r\n-                      <p className=\"text-gray-600\">\r\n-                        Address: {booking.client_address}\r\n-                      </p>\r\n-                    )}\r\n                     <p className=\"text-gray-600\">\r\n+                      Phone: {booking.client_phone || \"Not specified\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Address: {booking.client_address || \"Not specified\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Region: {booking.client_region || \"Not specified\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      Children:{\" \"}\r\n+                      {booking.client_children !== null\r\n+                        ? booking.client_children\r\n+                        : \"Not specified\"}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n                       Date: {new Date(booking.date).toLocaleDateString()}\r\n                     </p>\r\n                     <p className=\"text-gray-600\">\r\n                       Time: {booking.time_start} - {booking.time_end}\r\n@@ -121,20 +131,22 @@\n                       {booking.status}\r\n                     </p>\r\n                   </div>\r\n \r\n-                  {booking.status === \"pending\" && (\r\n+                  {(booking.status === \"pending\" || booking.status === \"approved\") && (\r\n                     <div className=\"flex gap-2 mt-3\">\r\n+                      {booking.status === \"pending\" && (\r\n+                        <button\r\n+                          onClick={() =>\r\n+                            handleUpdateStatus(booking.id, \"approved\")\r\n+                          }\r\n+                          className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n+                        >\r\n+                          Approve\r\n+                        </button>\r\n+                      )}\r\n                       <button\r\n                         onClick={() =>\r\n-                          handleUpdateStatus(booking.id, \"approved\")\r\n-                        }\r\n-                        className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 rounded transition\"\r\n-                      >\r\n-                        Approve\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() =>\r\n                           handleUpdateStatus(booking.id, \"cancelled\")\r\n                         }\r\n                         className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n                       >\r\n"
                },
                {
                    "date": 1751598517145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,15 @@\n import axios from \"axios\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n \r\n const HomeBabysitter = () => {\r\n-  const { token, user } = useContext(AuthContext);\r\n+  const { token, user, isLoading } = useContext(AuthContext);\r\n \r\n   const [bookings, setBookings] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(\"\");\r\n   const [successMessage, setSuccessMessage] = useState(\"\");\r\n \r\n-  // Fetch bookings\r\n   useEffect(() => {\r\n     if (!user) return;\r\n \r\n     const fetchBookings = async () => {\r\n@@ -34,9 +33,8 @@\n \r\n     fetchBookings();\r\n   }, [token, user]);\r\n \r\n-  // Update booking status\r\n   const handleUpdateStatus = async (bookingId, newStatus) => {\r\n     try {\r\n       await axios.put(\r\n         `http://localhost:3000/api/babysitters/bookings/${bookingId}/status`,\r\n@@ -56,8 +54,16 @@\n       setError(\"Failed to update booking status.\");\r\n     }\r\n   };\r\n \r\n+  if (isLoading || !user) {\r\n+    return (\r\n+      <main className=\"flex items-center justify-center min-h-screen\">\r\n+        <p className=\"text-gray-600\">Loading your dashboard...</p>\r\n+      </main>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6 flex flex-col items-center\">\r\n       <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n         Welcome back,\r\n"
                },
                {
                    "date": 1751598823530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,24 +14,29 @@\n   useEffect(() => {\r\n     if (!user) return;\r\n \r\n     const fetchBookings = async () => {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n-          {\r\n-            headers: { Authorization: `Bearer ${token}` },\r\n-          }\r\n-        );\r\n-        setBookings(response.data);\r\n-      } catch (err) {\r\n-        console.error(err);\r\n+    try {\r\n+      const response = await axios.get(\r\n+        `http://localhost:3000/api/babysitters/${user.id}/bookings`,\r\n+        {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        }\r\n+      );\r\n+      setBookings(response.data);\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      if (err.response && err.response.status === 404) {\r\n+        setBookings([]); // Sem bookings, tudo bem\r\n+      } else {\r\n         setError(\"Failed to load bookings.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n       }\r\n-    };\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n \r\n+\r\n     fetchBookings();\r\n   }, [token, user]);\r\n \r\n   const handleUpdateStatus = async (bookingId, newStatus) => {\r\n"
                },
                {
                    "date": 1751601956952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n       setBookings(response.data);\r\n     } catch (err) {\r\n       console.error(err);\r\n       if (err.response && err.response.status === 404) {\r\n-        setBookings([]); // Sem bookings, tudo bem\r\n+        setBookings([]); \r\n       } else {\r\n         setError(\"Failed to load bookings.\");\r\n       }\r\n     } finally {\r\n"
                }
            ],
            "date": 1751116240896,
            "name": "Commit-0",
            "content": "// src/pages/HomeBabysitter.jsx\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeBabysitter = () => {\r\n  // Mock data to simulate upcoming bookings\r\n  const [bookings] = useState([\r\n    {\r\n      id: 1,\r\n      parentName: \"Sarah Johnson\",\r\n      date: \"2024-07-12\",\r\n      time: \"09:00 AM\",\r\n      status: \"Confirmed\",\r\n    },\r\n    {\r\n      id: 2,\r\n      parentName: \"Michael Brown\",\r\n      date: \"2024-07-15\",\r\n      time: \"02:00 PM\",\r\n      status: \"Pending Approval\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <main className=\"bg-gradient-to-br from-purple-50 to-purple-100 min-h-screen py-12 px-6\">\r\n      {/* Welcome message */}\r\n      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n        Welcome back, <span className=\"text-purple-600\">Babysitter!</span>\r\n      </h1>\r\n\r\n      {/* Bookings section */}\r\n      <section className=\"max-w-4xl mx-auto mb-12\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n          Your Upcoming Bookings\r\n        </h2>\r\n\r\n        {bookings.length === 0 ? (\r\n          <p className=\"text-gray-600\">You have no upcoming bookings.</p>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {bookings.map((booking) => (\r\n              <div\r\n                key={booking.id}\r\n                className=\"bg-white rounded shadow p-4 flex flex-col justify-between\"\r\n              >\r\n                <div>\r\n                  <p className=\"text-gray-800 font-medium\">\r\n                    Parent: {booking.parentName}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    Date: {booking.date}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    Time: {booking.time}\r\n                  </p>\r\n                  <p\r\n                    cl\r\n"
        }
    ]
}