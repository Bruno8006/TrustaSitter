{
    "sourceFile": "trustasitter-frontend/src/pages/Bookings.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1750492959333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751114630085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,85 @@\n-// Page: Bookings\r\n-import React from 'react';\r\n+// src/pages/Bookings.jsx\r\n+import React, { useState } from \"react\";\r\n \r\n const Bookings = () => {\r\n+  // Mock data to simulate user bookings\r\n+  const [bookings, setBookings] = useState([\r\n+    {\r\n+      id: 1,\r\n+      babysitter: \"Anna Smith\",\r\n+      date: \"2024-07-10\",\r\n+      time: \"09:00 AM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      babysitter: \"James Brown\",\r\n+      date: \"2024-07-12\",\r\n+      time: \"02:00 PM\",\r\n+      status: \"Pending\",\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      babysitter: \"Lisa Johnson\",\r\n+      date: \"2024-07-15\",\r\n+      time: \"06:00 PM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+  ]);\r\n+\r\n+  // Handle booking cancellation\r\n+  const handleCancel = (id) => {\r\n+    // For now, just remove booking from mock list\r\n+    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n+    setBookings(updatedBookings);\r\n+  };\r\n+\r\n   return (\r\n-    <div>\r\n-      <h2>My Bookings</h2>\r\n-      <p>View your upcoming and past babysitter bookings here.</p>\r\n-    </div>\r\n+    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Page title */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">My</span>{\" \"}\r\n+        <span className=\"text-purple-500\">Bookings</span>\r\n+      </h1>\r\n+\r\n+      {/* If no bookings */}\r\n+      {bookings.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">\r\n+          You have no bookings yet.\r\n+        </p>\r\n+      ) : (\r\n+        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+          {bookings.map((booking) => (\r\n+            <div\r\n+              key={booking.id}\r\n+              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+            >\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                  Babysitter: {booking.babysitter}\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Date:</strong> {booking.date}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Time:</strong> {booking.time}\r\n+                </p>\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>Status:</strong> {booking.status}\r\n+                </p>\r\n+              </div>\r\n+              <button\r\n+                onClick={() => handleCancel(booking.id)}\r\n+                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+              >\r\n+                Cancel Booking\r\n+              </button>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </main>\r\n   );\r\n };\r\n \r\n export default Bookings;\r\n"
                },
                {
                    "date": 1751282822763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,80 +1,81 @@\n // src/pages/Bookings.jsx\r\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect, useContext } from \"react\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n+import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n const Bookings = () => {\r\n-  // Mock data to simulate user bookings\r\n-  const [bookings, setBookings] = useState([\r\n-    {\r\n-      id: 1,\r\n-      babysitter: \"Anna Smith\",\r\n-      date: \"2024-07-10\",\r\n-      time: \"09:00 AM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      babysitter: \"James Brown\",\r\n-      date: \"2024-07-12\",\r\n-      time: \"02:00 PM\",\r\n-      status: \"Pending\",\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      babysitter: \"Lisa Johnson\",\r\n-      date: \"2024-07-15\",\r\n-      time: \"06:00 PM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-  ]);\r\n+  const { user, token } = useContext(AuthContext);\r\n+  const navigate = useNavigate();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n-  // Handle booking cancellation\r\n-  const handleCancel = (id) => {\r\n-    // For now, just remove booking from mock list\r\n-    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n-    setBookings(updatedBookings);\r\n-  };\r\n+  useEffect(() => {\r\n+    if (!user) {\r\n+      // Not logged in\r\n+      navigate(\"/login\");\r\n+      return;\r\n+    }\r\n \r\n+    const fetchBookings = async () => {\r\n+      try {\r\n+        const res = await axios.get(\r\n+          `http://localhost:3000/api/bookings/${user.id}`,\r\n+          {\r\n+            headers: { Authorization: `Bearer ${token}` },\r\n+          }\r\n+        );\r\n+        setBookings(res.data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching bookings:\", error);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBookings();\r\n+  }, [user, token, navigate]);\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <main className=\"min-h-screen flex items-center justify-center\">\r\n+        <p className=\"text-gray-600\">Loading...</p>\r\n+      </main>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n-      {/* If no bookings */}\r\n       {bookings.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          You have no bookings yet.\r\n-        </p>\r\n+        <p className=\"text-center text-gray-600\">You have no bookings yet.</p>\r\n       ) : (\r\n         <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n           {bookings.map((booking) => (\r\n             <div\r\n               key={booking.id}\r\n-              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+              className=\"bg-white rounded-xl shadow p-6 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter}\r\n+                  Babysitter: {booking.babysitter_name}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Date:</strong> {booking.date}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time}\r\n+                  <strong>Time:</strong> {booking.time_start} - {booking.time_end}\r\n                 </p>\r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong> {booking.status}\r\n                 </p>\r\n               </div>\r\n-              <button\r\n-                onClick={() => handleCancel(booking.id)}\r\n-                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-              >\r\n-                Cancel Booking\r\n-              </button>\r\n+              {/* You could add cancellation logic here */}\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751282854216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,81 +1,80 @@\n // src/pages/Bookings.jsx\r\n-import React, { useState, useEffect, useContext } from \"react\";\r\n-import { AuthContext } from \"../context/AuthContext\";\r\n-import axios from \"axios\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import React, { useState } from \"react\";\r\n \r\n const Bookings = () => {\r\n-  const { user, token } = useContext(AuthContext);\r\n-  const navigate = useNavigate();\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+  // Mock data to simulate user bookings\r\n+  const [bookings, setBookings] = useState([\r\n+    {\r\n+      id: 1,\r\n+      babysitter: \"Anna Smith\",\r\n+      date: \"2024-07-10\",\r\n+      time: \"09:00 AM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      babysitter: \"James Brown\",\r\n+      date: \"2024-07-12\",\r\n+      time: \"02:00 PM\",\r\n+      status: \"Pending\",\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      babysitter: \"Lisa Johnson\",\r\n+      date: \"2024-07-15\",\r\n+      time: \"06:00 PM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+  ]);\r\n \r\n-  useEffect(() => {\r\n-    if (!user) {\r\n-      // Not logged in\r\n-      navigate(\"/login\");\r\n-      return;\r\n-    }\r\n+  // Handle booking cancellation\r\n+  const handleCancel = (id) => {\r\n+    // For now, just remove booking from mock list\r\n+    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n+    setBookings(updatedBookings);\r\n+  };\r\n \r\n-    const fetchBookings = async () => {\r\n-      try {\r\n-        const res = await axios.get(\r\n-          `http://localhost:3000/api/bookings/${user.id}`,\r\n-          {\r\n-            headers: { Authorization: `Bearer ${token}` },\r\n-          }\r\n-        );\r\n-        setBookings(res.data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching bookings:\", error);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBookings();\r\n-  }, [user, token, navigate]);\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <main className=\"min-h-screen flex items-center justify-center\">\r\n-        <p className=\"text-gray-600\">Loading...</p>\r\n-      </main>\r\n-    );\r\n-  }\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Page title */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n+      {/* If no bookings */}\r\n       {bookings.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">You have no bookings yet.</p>\r\n+        <p className=\"text-center text-gray-600\">\r\n+          You have no bookings yet.\r\n+        </p>\r\n       ) : (\r\n         <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n           {bookings.map((booking) => (\r\n             <div\r\n               key={booking.id}\r\n-              className=\"bg-white rounded-xl shadow p-6 flex flex-col justify-between\"\r\n+              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter_name}\r\n+                  Babysitter: {booking.babysitter}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Date:</strong> {booking.date}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time_start} - {booking.time_end}\r\n+                  <strong>Time:</strong> {booking.time}\r\n                 </p>\r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong> {booking.status}\r\n                 </p>\r\n               </div>\r\n-              {/* You could add cancellation logic here */}\r\n+              <button\r\n+                onClick={() => handleCancel(booking.id)}\r\n+                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+              >\r\n+                Cancel Booking\r\n+              </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751289319455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,69 @@\n // src/pages/Bookings.jsx\r\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect, useContext } from \"react\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n+import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n const Bookings = () => {\r\n-  // Mock data to simulate user bookings\r\n-  const [bookings, setBookings] = useState([\r\n-    {\r\n-      id: 1,\r\n-      babysitter: \"Anna Smith\",\r\n-      date: \"2024-07-10\",\r\n-      time: \"09:00 AM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      babysitter: \"James Brown\",\r\n-      date: \"2024-07-12\",\r\n-      time: \"02:00 PM\",\r\n-      status: \"Pending\",\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      babysitter: \"Lisa Johnson\",\r\n-      date: \"2024-07-15\",\r\n-      time: \"06:00 PM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-  ]);\r\n+  const { user, token } = useContext(AuthContext);\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const navigate = useNavigate();\r\n \r\n-  // Handle booking cancellation\r\n+  // Fetch bookings on component mount\r\n+  useEffect(() => {\r\n+    if (!user) {\r\n+      navigate(\"/login\");\r\n+      return;\r\n+    }\r\n+\r\n+    const fetchBookings = async () => {\r\n+      try {\r\n+        const res = await axios.get(`http://localhost:3000/api/bookings/${user.id}`, {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        });\r\n+        setBookings(res.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching bookings:\", err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBookings();\r\n+  }, [user, token, navigate]);\r\n+\r\n+  // Handle booking cancellation (for future implementation)\r\n   const handleCancel = (id) => {\r\n-    // For now, just remove booking from mock list\r\n-    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n-    setBookings(updatedBookings);\r\n+    alert(\"Cancel functionality not implemented yet.\");\r\n   };\r\n \r\n+  if (loading) {\r\n+    return (\r\n+      <main className=\"flex items-center justify-center min-h-screen\">\r\n+        <p className=\"text-gray-600\">Loading bookings...</p>\r\n+      </main>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n-      {/* If no bookings */}\r\n       {bookings.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          You have no bookings yet.\r\n-        </p>\r\n+        <div className=\"text-center\">\r\n+          <p className=\"text-gray-600 mb-4\">You have no bookings yet.</p>\r\n+          <button\r\n+            onClick={() => navigate(\"/search\")}\r\n+            className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition\"\r\n+          >\r\n+            Find a Babysitter\r\n+          </button>\r\n+        </div>\r\n       ) : (\r\n         <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n           {bookings.map((booking) => (\r\n             <div\r\n@@ -55,18 +71,19 @@\n               className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter}\r\n+                  Babysitter: {booking.babysitter_name}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Date:</strong> {booking.date}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time}\r\n+                  <strong>Time:</strong> {booking.time_start} - {booking.time_end}\r\n                 </p>\r\n                 <p className=\"text-gray-600\">\r\n-                  <strong>Status:</strong> {booking.status}\r\n+                  <strong>Status:</strong>{\" \"}\r\n+                  {booking.status ? booking.status : \"Pending\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n                 onClick={() => handleCancel(booking.id)}\r\n"
                },
                {
                    "date": 1751289532837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,12 @@\n   const [bookings, setBookings] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const navigate = useNavigate();\r\n \r\n-  // Fetch bookings on component mount\r\n   useEffect(() => {\r\n+    // If still loading context, wait\r\n+    if (user === undefined) return;\r\n+\r\n     if (!user) {\r\n       navigate(\"/login\");\r\n       return;\r\n     }\r\n@@ -32,14 +34,9 @@\n \r\n     fetchBookings();\r\n   }, [user, token, navigate]);\r\n \r\n-  // Handle booking cancellation (for future implementation)\r\n-  const handleCancel = (id) => {\r\n-    alert(\"Cancel functionality not implemented yet.\");\r\n-  };\r\n-\r\n-  if (loading) {\r\n+  if (loading || user === null) {\r\n     return (\r\n       <main className=\"flex items-center justify-center min-h-screen\">\r\n         <p className=\"text-gray-600\">Loading bookings...</p>\r\n       </main>\r\n@@ -85,9 +82,9 @@\n                   {booking.status ? booking.status : \"Pending\"}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                onClick={() => handleCancel(booking.id)}\r\n+                onClick={() => alert(\"Cancel functionality not implemented yet.\")}\r\n                 className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n               >\r\n                 Cancel Booking\r\n               </button>\r\n"
                },
                {
                    "date": 1751289901261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,17 @@\n-// src/pages/Bookings.jsx\r\n import React, { useState, useEffect, useContext } from \"react\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n import axios from \"axios\";\r\n import { useNavigate } from \"react-router-dom\";\r\n \r\n const Bookings = () => {\r\n-  const { user, token } = useContext(AuthContext);\r\n+  const { user, token, isLoading } = useContext(AuthContext);\r\n   const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+  const [loadingBookings, setLoadingBookings] = useState(true);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    // If still loading context, wait\r\n-    if (user === undefined) return;\r\n+    if (isLoading) return; // Espera AuthContext carregar\r\n \r\n     if (!user) {\r\n       navigate(\"/login\");\r\n       return;\r\n@@ -27,16 +25,16 @@\n         setBookings(res.data);\r\n       } catch (err) {\r\n         console.error(\"Error fetching bookings:\", err);\r\n       } finally {\r\n-        setLoading(false);\r\n+        setLoadingBookings(false);\r\n       }\r\n     };\r\n \r\n     fetchBookings();\r\n-  }, [user, token, navigate]);\r\n+  }, [user, token, isLoading, navigate]);\r\n \r\n-  if (loading || user === null) {\r\n+  if (isLoading || loadingBookings) {\r\n     return (\r\n       <main className=\"flex items-center justify-center min-h-screen\">\r\n         <p className=\"text-gray-600\">Loading bookings...</p>\r\n       </main>\r\n"
                },
                {
                    "date": 1751289913765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,9 @@\n   const [loadingBookings, setLoadingBookings] = useState(true);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    if (isLoading) return; // Espera AuthContext carregar\r\n-\r\n+    if (isLoading) return; // Wait until AuthContext is loaded\r\n     if (!user) {\r\n       navigate(\"/login\");\r\n       return;\r\n     }\r\n"
                },
                {
                    "date": 1751334200480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+import React, { useState, useEffect, useContext } from \"react\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n+import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+\r\n+const Bookings = () => {\r\n+  const { user, token, isLoading } = useContext(AuthContext);\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loadingBookings, setLoadingBookings] = useState(true);\r\n+  const navigate = useNavigate();\r\n+\r\n+  useEffect(() => {\r\n+    if (isLoading) return; // Wait until AuthContext is loaded\r\n+    if (!user) {\r\n+      navigate(\"/login\");\r\n+      return;\r\n+    }\r\n+\r\n+    const fetchBookings = async () => {\r\n+      try {\r\n+        const res = await axios.get(`http://localhost:3000/api/bookings/${user.id}`, {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        });\r\n+        setBookings(res.data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching bookings:\", err);\r\n+      } finally {\r\n+        setLoadingBookings(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBookings();\r\n+  }, [user, token, isLoading, navigate]);\r\n+\r\n+  if (isLoading || loadingBookings) {\r\n+    return (\r\n+      <main className=\"flex items-center justify-center min-h-screen\">\r\n+        <p className=\"text-gray-600\">Loading bookings...</p>\r\n+      </main>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">My</span>{\" \"}\r\n+        <span className=\"text-purple-500\">Bookings</span>\r\n+      </h1>\r\n+\r\n+      {bookings.length === 0 ? (\r\n+        <div className=\"text-center\">\r\n+          <p className=\"text-gray-600 mb-4\">You have no bookings yet.</p>\r\n+          <button\r\n+            onClick={() => navigate(\"/search\")}\r\n+            className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition\"\r\n+          >\r\n+            Find a Babysitter\r\n+          </button>\r\n+        </div>\r\n+      ) : (\r\n+        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+          {bookings.map((booking) => (\r\n+            <div\r\n+              key={booking.id}\r\n+              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+            >\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                  Babysitter: {booking.babysitter_name}\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Date:</strong> {\" \"}\r\n+                  {new Date(booking.date).toLocaleDateString(\"en-NZ\", {\r\n+                    year: \"numeric\",\r\n+                    month: \"long\",\r\n+                    day: \"numeric\",\r\n+                  })}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Time:</strong> {\" \"}\r\n+                  {new Date('1970-01-01T${booking.start_time}Z').toLocaleTimeString(\"en-NZ\", {\r\n+                    hour: \"numeric\",\r\n+                    minute: \"2-digit\",\r\n+                    hour12: true\r\n+                  })} \r\n+                  {\" \"}\r\n+                  {new Date('1970-01-01T${booking.end_time}').toLocaleTimeString(\"en-NZ\", {\r\n+                    hour: \"numeric\",\r\n+                    minute: \"2-digit\",\r\n+                    hour12: true\r\n+                  })}\r\n+                </p>\r\n+                \r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>Status:</strong>{\" \"}\r\n+                  {booking.status ? booking.status : \"Pending\"}\r\n+                </p>\r\n+              </div>\r\n+              <button\r\n+                onClick={() => alert(\"Cancel functionality not implemented yet.\")}\r\n+                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+              >\r\n+                Cancel Booking\r\n+              </button>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </main>\r\n+  );\r\n+};\r\n+\r\n+export default Bookings;\r\n"
                },
                {
                    "date": 1751334210814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,100 +110,4 @@\n   );\r\n };\r\n \r\n export default Bookings;\r\n-import React, { useState, useEffect, useContext } from \"react\";\r\n-import { AuthContext } from \"../context/AuthContext\";\r\n-import axios from \"axios\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-\r\n-const Bookings = () => {\r\n-  const { user, token, isLoading } = useContext(AuthContext);\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loadingBookings, setLoadingBookings] = useState(true);\r\n-  const navigate = useNavigate();\r\n-\r\n-  useEffect(() => {\r\n-    if (isLoading) return; // Wait until AuthContext is loaded\r\n-    if (!user) {\r\n-      navigate(\"/login\");\r\n-      return;\r\n-    }\r\n-\r\n-    const fetchBookings = async () => {\r\n-      try {\r\n-        const res = await axios.get(`http://localhost:3000/api/bookings/${user.id}`, {\r\n-          headers: { Authorization: `Bearer ${token}` },\r\n-        });\r\n-        setBookings(res.data);\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching bookings:\", err);\r\n-      } finally {\r\n-        setLoadingBookings(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBookings();\r\n-  }, [user, token, isLoading, navigate]);\r\n-\r\n-  if (isLoading || loadingBookings) {\r\n-    return (\r\n-      <main className=\"flex items-center justify-center min-h-screen\">\r\n-        <p className=\"text-gray-600\">Loading bookings...</p>\r\n-      </main>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n-        <span className=\"text-blue-600\">My</span>{\" \"}\r\n-        <span className=\"text-purple-500\">Bookings</span>\r\n-      </h1>\r\n-\r\n-      {bookings.length === 0 ? (\r\n-        <div className=\"text-center\">\r\n-          <p className=\"text-gray-600 mb-4\">You have no bookings yet.</p>\r\n-          <button\r\n-            onClick={() => navigate(\"/search\")}\r\n-            className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition\"\r\n-          >\r\n-            Find a Babysitter\r\n-          </button>\r\n-        </div>\r\n-      ) : (\r\n-        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-          {bookings.map((booking) => (\r\n-            <div\r\n-              key={booking.id}\r\n-              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-            >\r\n-              <div>\r\n-                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter_name}\r\n-                </h2>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Date:</strong> {booking.date}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time_start} - {booking.time_end}\r\n-                </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  <strong>Status:</strong>{\" \"}\r\n-                  {booking.status ? booking.status : \"Pending\"}\r\n-                </p>\r\n-              </div>\r\n-              <button\r\n-                onClick={() => alert(\"Cancel functionality not implemented yet.\")}\r\n-                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-              >\r\n-                Cancel Booking\r\n-              </button>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </main>\r\n-  );\r\n-};\r\n-\r\n-export default Bookings;\r\n"
                },
                {
                    "date": 1751334220654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,10 +88,9 @@\n                     hour: \"numeric\",\r\n                     minute: \"2-digit\",\r\n                     hour12: true\r\n                   })}\r\n-                </p>\r\n-                \r\n+                </p>                \r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong>{\" \"}\r\n                   {booking.status ? booking.status : \"Pending\"}\r\n                 </p>\r\n"
                },
                {
                    "date": 1751334389058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,29 +68,30 @@\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n                   Babysitter: {booking.babysitter_name}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Date:</strong> {\" \"}\r\n+                  <strong>Date:</strong>{\" \"}\r\n                   {new Date(booking.date).toLocaleDateString(\"en-NZ\", {\r\n                     year: \"numeric\",\r\n                     month: \"long\",\r\n-                    day: \"numeric\",\r\n+                    day: \"numeric\"\r\n                   })}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {\" \"}\r\n-                  {new Date('1970-01-01T${booking.start_time}Z').toLocaleTimeString(\"en-NZ\", {\r\n+                  <strong>Time:</strong>{\" \"}\r\n+                  {new Date(`1970-01-01T${booking.time_start}`).toLocaleTimeString(\"en-NZ\", {\r\n                     hour: \"numeric\",\r\n                     minute: \"2-digit\",\r\n                     hour12: true\r\n-                  })} \r\n-                  {\" \"}\r\n-                  {new Date('1970-01-01T${booking.end_time}').toLocaleTimeString(\"en-NZ\", {\r\n+                  })}\r\n+                  {\" - \"}\r\n+                  {new Date(`1970-01-01T${booking.time_end}`).toLocaleTimeString(\"en-NZ\", {\r\n                     hour: \"numeric\",\r\n                     minute: \"2-digit\",\r\n                     hour12: true\r\n                   })}\r\n-                </p>                \r\n+                </p>\r\n+                \r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong>{\" \"}\r\n                   {booking.status ? booking.status : \"Pending\"}\r\n                 </p>\r\n"
                },
                {
                    "date": 1751334847035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,43 @@\n-import React, { useState, useEffect, useContext } from \"react\";\r\n+// src/pages/Bookings.jsx\r\n+import React, { useEffect, useState, useContext } from \"react\";\r\n import { AuthContext } from \"../context/AuthContext\";\r\n-import axios from \"axios\";\r\n+import { getBookingsByUser } from \"../services/api\";\r\n import { useNavigate } from \"react-router-dom\";\r\n \r\n const Bookings = () => {\r\n-  const { user, token, isLoading } = useContext(AuthContext);\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loadingBookings, setLoadingBookings] = useState(true);\r\n+  const { user, token } = useContext(AuthContext);\r\n   const navigate = useNavigate();\r\n \r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  // Fetch bookings when page loads\r\n   useEffect(() => {\r\n-    if (isLoading) return; // Wait until AuthContext is loaded\r\n-    if (!user) {\r\n-      navigate(\"/login\");\r\n-      return;\r\n-    }\r\n-\r\n+    if (!user) return;\r\n     const fetchBookings = async () => {\r\n       try {\r\n-        const res = await axios.get(`http://localhost:3000/api/bookings/${user.id}`, {\r\n-          headers: { Authorization: `Bearer ${token}` },\r\n-        });\r\n-        setBookings(res.data);\r\n+        const data = await getBookingsByUser(user.id, token);\r\n+        setBookings(data);\r\n       } catch (err) {\r\n-        console.error(\"Error fetching bookings:\", err);\r\n+        console.error(err);\r\n       } finally {\r\n-        setLoadingBookings(false);\r\n+        setLoading(false);\r\n       }\r\n     };\r\n-\r\n     fetchBookings();\r\n-  }, [user, token, isLoading, navigate]);\r\n+  }, [user, token]);\r\n \r\n-  if (isLoading || loadingBookings) {\r\n+  const handleCancel = (id) => {\r\n+    // You can implement cancellation here\r\n+    const updated = bookings.filter((b) => b.id !== id);\r\n+    setBookings(updated);\r\n+  };\r\n+\r\n+  if (!user) {\r\n     return (\r\n-      <main className=\"flex items-center justify-center min-h-screen\">\r\n-        <p className=\"text-gray-600\">Loading bookings...</p>\r\n+      <main className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-purple-100\">\r\n+        <p className=\"text-lg text-gray-700\">Please log in to view your bookings.</p>\r\n       </main>\r\n     );\r\n   }\r\n \r\n@@ -46,11 +47,15 @@\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n-      {bookings.length === 0 ? (\r\n+      {loading ? (\r\n+        <p className=\"text-center text-gray-600\">Loading...</p>\r\n+      ) : bookings.length === 0 ? (\r\n         <div className=\"text-center\">\r\n-          <p className=\"text-gray-600 mb-4\">You have no bookings yet.</p>\r\n+          <p className=\"text-gray-700 mb-4\">\r\n+            You have no bookings yet.\r\n+          </p>\r\n           <button\r\n             onClick={() => navigate(\"/search\")}\r\n             className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition\"\r\n           >\r\n@@ -70,35 +75,24 @@\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Date:</strong>{\" \"}\r\n                   {new Date(booking.date).toLocaleDateString(\"en-NZ\", {\r\n+                    day: \"numeric\",\r\n+                    month: \"long\",\r\n                     year: \"numeric\",\r\n-                    month: \"long\",\r\n-                    day: \"numeric\"\r\n                   })}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Time:</strong>{\" \"}\r\n-                  {new Date(`1970-01-01T${booking.time_start}`).toLocaleTimeString(\"en-NZ\", {\r\n-                    hour: \"numeric\",\r\n-                    minute: \"2-digit\",\r\n-                    hour12: true\r\n-                  })}\r\n-                  {\" - \"}\r\n-                  {new Date(`1970-01-01T${booking.time_end}`).toLocaleTimeString(\"en-NZ\", {\r\n-                    hour: \"numeric\",\r\n-                    minute: \"2-digit\",\r\n-                    hour12: true\r\n-                  })}\r\n+                  {`${booking.time_start} - ${booking.time_end}`}\r\n                 </p>\r\n-                \r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong>{\" \"}\r\n-                  {booking.status ? booking.status : \"Pending\"}\r\n+                  {booking.status}\r\n                 </p>\r\n               </div>\r\n               <button\r\n-                onClick={() => alert(\"Cancel functionality not implemented yet.\")}\r\n+                onClick={() => handleCancel(booking.id)}\r\n                 className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n               >\r\n                 Cancel Booking\r\n               </button>\r\n"
                },
                {
                    "date": 1751346022260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,57 +1,27 @@\n // src/pages/Bookings.jsx\r\n-import React, { useEffect, useState, useContext } from \"react\";\r\n-import { AuthContext } from \"../context/AuthContext\";\r\n-import { getBookingsByUser } from \"../services/api\";\r\n+import React, { useState } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n \r\n const Bookings = () => {\r\n-  const { user, token } = useContext(AuthContext);\r\n   const navigate = useNavigate();\r\n \r\n+  // Mock data - simule vazio primeiro para testar mensagem\r\n   const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n \r\n-  // Fetch bookings when page loads\r\n-  useEffect(() => {\r\n-    if (!user) return;\r\n-    const fetchBookings = async () => {\r\n-      try {\r\n-        const data = await getBookingsByUser(user.id, token);\r\n-        setBookings(data);\r\n-      } catch (err) {\r\n-        console.error(err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-    fetchBookings();\r\n-  }, [user, token]);\r\n-\r\n   const handleCancel = (id) => {\r\n-    // You can implement cancellation here\r\n     const updated = bookings.filter((b) => b.id !== id);\r\n     setBookings(updated);\r\n   };\r\n \r\n-  if (!user) {\r\n-    return (\r\n-      <main className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-purple-100\">\r\n-        <p className=\"text-lg text-gray-700\">Please log in to view your bookings.</p>\r\n-      </main>\r\n-    );\r\n-  }\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n-      {loading ? (\r\n-        <p className=\"text-center text-gray-600\">Loading...</p>\r\n-      ) : bookings.length === 0 ? (\r\n+      {bookings.length === 0 ? (\r\n         <div className=\"text-center\">\r\n           <p className=\"text-gray-700 mb-4\">\r\n             You have no bookings yet.\r\n           </p>\r\n@@ -70,25 +40,18 @@\n               className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter_name}\r\n+                  Babysitter: {booking.babysitter}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Date:</strong>{\" \"}\r\n-                  {new Date(booking.date).toLocaleDateString(\"en-NZ\", {\r\n-                    day: \"numeric\",\r\n-                    month: \"long\",\r\n-                    year: \"numeric\",\r\n-                  })}\r\n+                  <strong>Date:</strong> {booking.date}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong>{\" \"}\r\n-                  {`${booking.time_start} - ${booking.time_end}`}\r\n+                  <strong>Time:</strong> {booking.time}\r\n                 </p>\r\n                 <p className=\"text-gray-600\">\r\n-                  <strong>Status:</strong>{\" \"}\r\n-                  {booking.status}\r\n+                  <strong>Status:</strong> {booking.status}\r\n                 </p>\r\n               </div>\r\n               <button\r\n                 onClick={() => handleCancel(booking.id)}\r\n"
                },
                {
                    "date": 1751350983139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+// src/pages/Bookings.jsx\r\n+import React, { useEffect, useState, useContext } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n+import { getUserBookings } from \"../services/api\";\r\n+\r\n+const Bookings = () => {\r\n+  const { user, token } = useContext(AuthContext);\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const navigate = useNavigate();\r\n+\r\n+  useEffect(() => {\r\n+    const fetchBookings = async () => {\r\n+      if (!user) return;\r\n+\r\n+      try {\r\n+        const data = await getUserBookings(user.id, token);\r\n+        setBookings(data);\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching bookings:\", err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBookings();\r\n+  }, [user, token]);\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <main className=\"flex items-center justify-center min-h-screen\">\r\n+        <p className=\"text-gray-600\">Loading your bookings...</p>\r\n+      </main>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">My</span>{\" \"}\r\n+        <span className=\"text-purple-500\">Bookings</span>\r\n+      </h1>\r\n+\r\n+      {bookings.length === 0 ? (\r\n+        <div className=\"text-center text-gray-600\">\r\n+          <p>You don’t have any bookings yet.</p>\r\n+          <button\r\n+            onClick={() => navigate(\"/search\")}\r\n+            className=\"mt-4 bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition\"\r\n+          >\r\n+            Find a Babysitter\r\n+          </button>\r\n+        </div>\r\n+      ) : (\r\n+        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+          {bookings.map((booking) => (\r\n+            <div\r\n+              key={booking.id}\r\n+              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+            >\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                  Babysitter: {booking.babysitter_name}\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Date:</strong>{\" \"}\r\n+                  {new Date(booking.date).toLocaleDateString(\"en-NZ\", {\r\n+                    day: \"numeric\",\r\n+                    month: \"long\",\r\n+                    year: \"numeric\",\r\n+                  })}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Time:</strong>{\" \"}\r\n+                  {booking.time_start.slice(0,5)} - {booking.time_end.slice(0,5)}\r\n+                </p>\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>Status:</strong>{\" \"}\r\n+                  {booking.status}\r\n+                </p>\r\n+              </div>\r\n+              <button\r\n+                onClick={() => alert(\"Cancel booking logic here\")}\r\n+                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+              >\r\n+                Cancel Booking\r\n+              </button>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </main>\r\n+  );\r\n+};\r\n+\r\n+export default Bookings;\r\n"
                },
                {
                    "date": 1751351008089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,74 +94,4 @@\n   );\r\n };\r\n \r\n export default Bookings;\r\n-// src/pages/Bookings.jsx\r\n-import React, { useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-\r\n-const Bookings = () => {\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Mock data - simule vazio primeiro para testar mensagem\r\n-  const [bookings, setBookings] = useState([]);\r\n-\r\n-  const handleCancel = (id) => {\r\n-    const updated = bookings.filter((b) => b.id !== id);\r\n-    setBookings(updated);\r\n-  };\r\n-\r\n-  return (\r\n-    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n-        <span className=\"text-blue-600\">My</span>{\" \"}\r\n-        <span className=\"text-purple-500\">Bookings</span>\r\n-      </h1>\r\n-\r\n-      {bookings.length === 0 ? (\r\n-        <div className=\"text-center\">\r\n-          <p className=\"text-gray-700 mb-4\">\r\n-            You have no bookings yet.\r\n-          </p>\r\n-          <button\r\n-            onClick={() => navigate(\"/search\")}\r\n-            className=\"bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition\"\r\n-          >\r\n-            Find a Babysitter\r\n-          </button>\r\n-        </div>\r\n-      ) : (\r\n-        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n-          {bookings.map((booking) => (\r\n-            <div\r\n-              key={booking.id}\r\n-              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n-            >\r\n-              <div>\r\n-                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter}\r\n-                </h2>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Date:</strong> {booking.date}\r\n-                </p>\r\n-                <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time}\r\n-                </p>\r\n-                <p className=\"text-gray-600\">\r\n-                  <strong>Status:</strong> {booking.status}\r\n-                </p>\r\n-              </div>\r\n-              <button\r\n-                onClick={() => handleCancel(booking.id)}\r\n-                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-              >\r\n-                Cancel Booking\r\n-              </button>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </main>\r\n-  );\r\n-};\r\n-\r\n-export default Bookings;\r\n"
                }
            ],
            "date": 1750492959333,
            "name": "Commit-0",
            "content": "// Page: Bookings\r\nimport React from 'react';\r\n\r\nconst Bookings = () => {\r\n  return (\r\n    <div>\r\n      <h2>My Bookings</h2>\r\n      <p>View your upcoming and past babysitter bookings here.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookings;\r\n"
        }
    ]
}