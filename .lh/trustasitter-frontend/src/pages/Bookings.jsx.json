{
    "sourceFile": "trustasitter-frontend/src/pages/Bookings.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1750492959333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751114630085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,85 @@\n-// Page: Bookings\r\n-import React from 'react';\r\n+// src/pages/Bookings.jsx\r\n+import React, { useState } from \"react\";\r\n \r\n const Bookings = () => {\r\n+  // Mock data to simulate user bookings\r\n+  const [bookings, setBookings] = useState([\r\n+    {\r\n+      id: 1,\r\n+      babysitter: \"Anna Smith\",\r\n+      date: \"2024-07-10\",\r\n+      time: \"09:00 AM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      babysitter: \"James Brown\",\r\n+      date: \"2024-07-12\",\r\n+      time: \"02:00 PM\",\r\n+      status: \"Pending\",\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      babysitter: \"Lisa Johnson\",\r\n+      date: \"2024-07-15\",\r\n+      time: \"06:00 PM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+  ]);\r\n+\r\n+  // Handle booking cancellation\r\n+  const handleCancel = (id) => {\r\n+    // For now, just remove booking from mock list\r\n+    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n+    setBookings(updatedBookings);\r\n+  };\r\n+\r\n   return (\r\n-    <div>\r\n-      <h2>My Bookings</h2>\r\n-      <p>View your upcoming and past babysitter bookings here.</p>\r\n-    </div>\r\n+    <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Page title */}\r\n+      <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n+        <span className=\"text-blue-600\">My</span>{\" \"}\r\n+        <span className=\"text-purple-500\">Bookings</span>\r\n+      </h1>\r\n+\r\n+      {/* If no bookings */}\r\n+      {bookings.length === 0 ? (\r\n+        <p className=\"text-center text-gray-600\">\r\n+          You have no bookings yet.\r\n+        </p>\r\n+      ) : (\r\n+        <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+          {bookings.map((booking) => (\r\n+            <div\r\n+              key={booking.id}\r\n+              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+            >\r\n+              <div>\r\n+                <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n+                  Babysitter: {booking.babysitter}\r\n+                </h2>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Date:</strong> {booking.date}\r\n+                </p>\r\n+                <p className=\"text-gray-600 mb-1\">\r\n+                  <strong>Time:</strong> {booking.time}\r\n+                </p>\r\n+                <p className=\"text-gray-600\">\r\n+                  <strong>Status:</strong> {booking.status}\r\n+                </p>\r\n+              </div>\r\n+              <button\r\n+                onClick={() => handleCancel(booking.id)}\r\n+                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+              >\r\n+                Cancel Booking\r\n+              </button>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+    </main>\r\n   );\r\n };\r\n \r\n export default Bookings;\r\n"
                },
                {
                    "date": 1751282822763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,80 +1,81 @@\n // src/pages/Bookings.jsx\r\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect, useContext } from \"react\";\r\n+import { AuthContext } from \"../context/AuthContext\";\r\n+import axios from \"axios\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n const Bookings = () => {\r\n-  // Mock data to simulate user bookings\r\n-  const [bookings, setBookings] = useState([\r\n-    {\r\n-      id: 1,\r\n-      babysitter: \"Anna Smith\",\r\n-      date: \"2024-07-10\",\r\n-      time: \"09:00 AM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      babysitter: \"James Brown\",\r\n-      date: \"2024-07-12\",\r\n-      time: \"02:00 PM\",\r\n-      status: \"Pending\",\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      babysitter: \"Lisa Johnson\",\r\n-      date: \"2024-07-15\",\r\n-      time: \"06:00 PM\",\r\n-      status: \"Confirmed\",\r\n-    },\r\n-  ]);\r\n+  const { user, token } = useContext(AuthContext);\r\n+  const navigate = useNavigate();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n-  // Handle booking cancellation\r\n-  const handleCancel = (id) => {\r\n-    // For now, just remove booking from mock list\r\n-    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n-    setBookings(updatedBookings);\r\n-  };\r\n+  useEffect(() => {\r\n+    if (!user) {\r\n+      // Not logged in\r\n+      navigate(\"/login\");\r\n+      return;\r\n+    }\r\n \r\n+    const fetchBookings = async () => {\r\n+      try {\r\n+        const res = await axios.get(\r\n+          `http://localhost:3000/api/bookings/${user.id}`,\r\n+          {\r\n+            headers: { Authorization: `Bearer ${token}` },\r\n+          }\r\n+        );\r\n+        setBookings(res.data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching bookings:\", error);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchBookings();\r\n+  }, [user, token, navigate]);\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <main className=\"min-h-screen flex items-center justify-center\">\r\n+        <p className=\"text-gray-600\">Loading...</p>\r\n+      </main>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n-      {/* Page title */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n-      {/* If no bookings */}\r\n       {bookings.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">\r\n-          You have no bookings yet.\r\n-        </p>\r\n+        <p className=\"text-center text-gray-600\">You have no bookings yet.</p>\r\n       ) : (\r\n         <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n           {bookings.map((booking) => (\r\n             <div\r\n               key={booking.id}\r\n-              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n+              className=\"bg-white rounded-xl shadow p-6 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter}\r\n+                  Babysitter: {booking.babysitter_name}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Date:</strong> {booking.date}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time}\r\n+                  <strong>Time:</strong> {booking.time_start} - {booking.time_end}\r\n                 </p>\r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong> {booking.status}\r\n                 </p>\r\n               </div>\r\n-              <button\r\n-                onClick={() => handleCancel(booking.id)}\r\n-                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n-              >\r\n-                Cancel Booking\r\n-              </button>\r\n+              {/* You could add cancellation logic here */}\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1751282854216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,81 +1,80 @@\n // src/pages/Bookings.jsx\r\n-import React, { useState, useEffect, useContext } from \"react\";\r\n-import { AuthContext } from \"../context/AuthContext\";\r\n-import axios from \"axios\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import React, { useState } from \"react\";\r\n \r\n const Bookings = () => {\r\n-  const { user, token } = useContext(AuthContext);\r\n-  const navigate = useNavigate();\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n+  // Mock data to simulate user bookings\r\n+  const [bookings, setBookings] = useState([\r\n+    {\r\n+      id: 1,\r\n+      babysitter: \"Anna Smith\",\r\n+      date: \"2024-07-10\",\r\n+      time: \"09:00 AM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      babysitter: \"James Brown\",\r\n+      date: \"2024-07-12\",\r\n+      time: \"02:00 PM\",\r\n+      status: \"Pending\",\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      babysitter: \"Lisa Johnson\",\r\n+      date: \"2024-07-15\",\r\n+      time: \"06:00 PM\",\r\n+      status: \"Confirmed\",\r\n+    },\r\n+  ]);\r\n \r\n-  useEffect(() => {\r\n-    if (!user) {\r\n-      // Not logged in\r\n-      navigate(\"/login\");\r\n-      return;\r\n-    }\r\n+  // Handle booking cancellation\r\n+  const handleCancel = (id) => {\r\n+    // For now, just remove booking from mock list\r\n+    const updatedBookings = bookings.filter((booking) => booking.id !== id);\r\n+    setBookings(updatedBookings);\r\n+  };\r\n \r\n-    const fetchBookings = async () => {\r\n-      try {\r\n-        const res = await axios.get(\r\n-          `http://localhost:3000/api/bookings/${user.id}`,\r\n-          {\r\n-            headers: { Authorization: `Bearer ${token}` },\r\n-          }\r\n-        );\r\n-        setBookings(res.data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching bookings:\", error);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBookings();\r\n-  }, [user, token, navigate]);\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <main className=\"min-h-screen flex items-center justify-center\">\r\n-        <p className=\"text-gray-600\">Loading...</p>\r\n-      </main>\r\n-    );\r\n-  }\r\n-\r\n   return (\r\n     <main className=\"bg-gradient-to-br from-blue-50 to-purple-100 min-h-screen py-12 px-6\">\r\n+      {/* Page title */}\r\n       <h1 className=\"text-4xl font-bold text-center mb-10\">\r\n         <span className=\"text-blue-600\">My</span>{\" \"}\r\n         <span className=\"text-purple-500\">Bookings</span>\r\n       </h1>\r\n \r\n+      {/* If no bookings */}\r\n       {bookings.length === 0 ? (\r\n-        <p className=\"text-center text-gray-600\">You have no bookings yet.</p>\r\n+        <p className=\"text-center text-gray-600\">\r\n+          You have no bookings yet.\r\n+        </p>\r\n       ) : (\r\n         <div className=\"max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n           {bookings.map((booking) => (\r\n             <div\r\n               key={booking.id}\r\n-              className=\"bg-white rounded-xl shadow p-6 flex flex-col justify-between\"\r\n+              className=\"bg-white rounded shadow p-6 flex flex-col justify-between\"\r\n             >\r\n               <div>\r\n                 <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">\r\n-                  Babysitter: {booking.babysitter_name}\r\n+                  Babysitter: {booking.babysitter}\r\n                 </h2>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n                   <strong>Date:</strong> {booking.date}\r\n                 </p>\r\n                 <p className=\"text-gray-600 mb-1\">\r\n-                  <strong>Time:</strong> {booking.time_start} - {booking.time_end}\r\n+                  <strong>Time:</strong> {booking.time}\r\n                 </p>\r\n                 <p className=\"text-gray-600\">\r\n                   <strong>Status:</strong> {booking.status}\r\n                 </p>\r\n               </div>\r\n-              {/* You could add cancellation logic here */}\r\n+              <button\r\n+                onClick={() => handleCancel(booking.id)}\r\n+                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white py-2 rounded transition\"\r\n+              >\r\n+                Cancel Booking\r\n+              </button>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                }
            ],
            "date": 1750492959333,
            "name": "Commit-0",
            "content": "// Page: Bookings\r\nimport React from 'react';\r\n\r\nconst Bookings = () => {\r\n  return (\r\n    <div>\r\n      <h2>My Bookings</h2>\r\n      <p>View your upcoming and past babysitter bookings here.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookings;\r\n"
        }
    ]
}