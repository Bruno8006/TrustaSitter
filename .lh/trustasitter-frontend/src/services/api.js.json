{
    "sourceFile": "trustasitter-frontend/src/services/api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1751199856164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751201928762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import axios from \"axios\";\r\n \r\n // Create an axios instance with default config\r\n const api = axios.create({\r\n-  baseURL: \"http://localhost:3000/api\", // troca depois pelo seu domínio em produção\r\n+  baseURL: \"http://localhost:3000/api\", // Base URL for the API\r\n });\r\n \r\n // Function to log in user\r\n export const loginUser = async (email, password) => {\r\n"
                },
                {
                    "date": 1751202721010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,4 +21,12 @@\n     password,\r\n   });\r\n   return response.data;\r\n };\r\n+// Universal login for users and babysitters\r\n+export const loginUniversal = async (email, password) => {\r\n+  const response = await api.post(\"/login\", {\r\n+    email,\r\n+    password,\r\n+  });\r\n+  return response.data; // contains { message, token, role, user }\r\n+};\r\n"
                },
                {
                    "date": 1751209212692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import axios from \"axios\";\r\n+\r\n+// Create an axios instance with default config\r\n+const api = axios.create({\r\n+  baseURL: \"http://localhost:3000/api\", // Base URL for the API\r\n+});\r\n+\r\n+// Function to log in user\r\n+export const loginUser = async (email, password) => {\r\n+  const response = await api.post(\"/users/login\", {\r\n+    email,\r\n+    password,\r\n+  });\r\n+  return response.data; // contains { message, token, user }\r\n+};\r\n+\r\n+// Function to log in babysitter\r\n+export const loginBabysitter = async (email, password) => {\r\n+  const response = await api.post(\"/babysitters/login\", {\r\n+    email,\r\n+    password,\r\n+  });\r\n+  return response.data;\r\n+};\r\n+// Universal login for users and babysitters\r\n+export const loginUniversal = async (email, password) => {\r\n+  const response = await api.post(\"/login\", {\r\n+    email,\r\n+    password,\r\n+  });\r\n+  return response.data; // contains { message, token, role, user }\r\n+};\r\n+// Function to change babysitter password\r\n+export const changeBabysitterPassword = async (token, currentPassword, newPassword) => {\r\n+  const response = await api.put(\r\n+    \"/babysitters/change-password\",\r\n+    { currentPassword, newPassword },\r\n+    {\r\n+      headers: {\r\n+        Authorization: `Bearer ${token}`,\r\n+      },\r\n+    }\r\n+  );\r\n+  return response.data;\r\n+};\r\n"
                },
                {
                    "date": 1751247505933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,36 +42,18 @@\n     }\r\n   );\r\n   return response.data;\r\n };\r\n-import axios from \"axios\";\r\n-\r\n-// Create an axios instance with default config\r\n-const api = axios.create({\r\n-  baseURL: \"http://localhost:3000/api\", // Base URL for the API\r\n-});\r\n-\r\n-// Function to log in user\r\n-export const loginUser = async (email, password) => {\r\n-  const response = await api.post(\"/users/login\", {\r\n-    email,\r\n-    password,\r\n+// Function to change user password\r\n+export const updateClientProfile = async (data, token) => {\r\n+  const response = await api.put(\"/users/profile\", data, {\r\n+    headers: { Authorization: `Bearer ${token}` },\r\n   });\r\n-  return response.data; // contains { message, token, user }\r\n+  return response.data;\r\n };\r\n \r\n-// Function to log in babysitter\r\n-export const loginBabysitter = async (email, password) => {\r\n-  const response = await api.post(\"/babysitters/login\", {\r\n-    email,\r\n-    password,\r\n+export const deleteClientAccount = async (token) => {\r\n+  const response = await api.delete(\"/users/profile\", {\r\n+    headers: { Authorization: `Bearer ${token}` },\r\n   });\r\n   return response.data;\r\n };\r\n-// Universal login for users and babysitters\r\n-export const loginUniversal = async (email, password) => {\r\n-  const response = await api.post(\"/login\", {\r\n-    email,\r\n-    password,\r\n-  });\r\n-  return response.data; // contains { message, token, role, user }\r\n-};\r\n"
                }
            ],
            "date": 1751199856164,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\r\n\r\n// Create an axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3000/api\", // troca depois pelo seu domínio em produção\r\n});\r\n\r\n// Function to log in user\r\nexport const loginUser = async (email, password) => {\r\n  const response = await api.post(\"/users/login\", {\r\n    email,\r\n    password,\r\n  });\r\n  return response.data; // contains { message, token, user }\r\n};\r\n\r\n// Function to log in babysitter\r\nexport const loginBabysitter = async (email, password) => {\r\n  const response = await api.post(\"/babysitters/login\", {\r\n    email,\r\n    password,\r\n  });\r\n  return response.data;\r\n};\r\n"
        }
    ]
}